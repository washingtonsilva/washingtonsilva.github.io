[
  {
    "objectID": "publications/vies_confirmacao.html",
    "href": "publications/vies_confirmacao.html",
    "title": "Viés de confirmação na tomada de decisão gerencial: um estudo experimental com gestores e contadores",
    "section": "",
    "text": "Abstract\nThis study aimed to analyze the presence of confirmation bias in managers and accountants in a management decision-making process, as well as to analyze whether the way in which economic-financial information is presented influences the confirmation bias of these individuals in their decisions. To meet the research objective, we used the experimental methodology, applied to a sample of 86 Accountants, 68 managers and 118 people with various activities (control group). The results showed that most managers and accountants have confirmation bias in management decision-making processes, that type (positive or negative) and level (simple or complex) factors of information do not influence the confirmation bias in the management decision-making and that negative information may influence the confirmation bias in choosing the most important information."
  },
  {
    "objectID": "publications/time_speckle.html",
    "href": "publications/time_speckle.html",
    "title": "Time history speckle pattern under statistical view",
    "section": "",
    "text": "Abstract\nThe dynamic speckle analysis has been done because speckle interference began to be evaluated as an important source of information, especially those related to biological samples under laser beam. The time history speckle pattern, a THSP image, is an approach to analyze, which allows a summary to represent the activity monitored. THSP adoption has compelled the research to evaluate the information and the reliability of its inner pattern. This study presents a statistical approach to analyze the data using white noise tests and cross-spectrum analysis. The data analyzed was a set of THSP from animal sperm samples. The evaluation of white noise among lines was conducted using the Fischer test over eight THSP and the cross-spectral approach has been conducted by comparing the information in each THSP. The results presented that the THSP of the sperm did not behave as a white noise in a global evaluation, and specifically in the Gaussian white noise test over 4096 lines; only six lines presented the behavior of a white noise pattern. The strong rejection of white noise test confirms that the THSP pattern allows reliable information. The results obtained with the cross-spectral analysis presented differences between lines within the same THSP, showing that the information of an inner pattern varies in relation to space, which is against the findings in literature."
  },
  {
    "objectID": "publications/premio_voto.html",
    "href": "publications/premio_voto.html",
    "title": "Determinantes pelo Prêmio pelo Direito de Voto no Mercado de Ações Brasileiro",
    "section": "",
    "text": "Abstract\nThis study aims identify the determinants of premium for voting rights in the Brazilian market. To this end, we developed a dataset consisted of 383 companies listed on the Brasil, Bolsa, Balcão (B3) from 2000 to 2015, to use the fixed effects regressions with panel data models. We identified that the average of the premium found for the period is 18.07%, however, this value is close to 40.00% in years considered of systemic crisis, as occurred in 2008 and 2015. In addition to the positive influence of the years of decline in the stock market in the value of the premium, the results showed that i) the increase in liquidity of shares with voting rights negatively affect the value of the premium for control; and ii) the level of liabilities payable in relation to assets has an inverted U-shape in relation to the voting premium. The study contributes to the literature by verifying that a structure of two classes of shares allows the accentuation of the premium for voting rights in periods of systematic crisis."
  },
  {
    "objectID": "publications/natan01.html",
    "href": "publications/natan01.html",
    "title": "Portfolio optimization based on the pre-selection of stocks by the Support Vector Machine model",
    "section": "",
    "text": "Abstract\nThis study aims to analyze the performance of an investment portfolio using the Markowitz model, which maximizes the Sharpe ratio from a set of assets preselected through the Support Vector Machine (SVM) model using fundamental indicators in the Brazilian stock market. With an accuracy of 61% for the SVM model, the results indicate that preselecting assets based on fundamental indicators and subsequently optimizing them by maximizing the Sharpe ratio showed a superior return and faster recovery after drawdown periods compared to the benchmark or SVM (1/n) strategy. These results suggest the relevance of including the SVM in the optimization portfolio process."
  },
  {
    "objectID": "publications/heavy_metals.html",
    "href": "publications/heavy_metals.html",
    "title": "Can moderate heavy metal soil contaminations due to cement production influence the surrounding soil bacterial communities?",
    "section": "",
    "text": "Abstract\nEvents of soil contamination by heavy metals are mostly related to human activities that release these metals into the environment as emissions or effluents. Among the industrial activities related to heavy metal pollution, cement production plants are considered one of the most common sources. In this work we applied the High-throughput sequencing approach called 16 S rDNA metabarcoding to perform the taxonomic characterization of the prokaryotic communities of the soil surrounding three cement plants as well as two areas outside the influence of the cement plants that represented agricultural production environments free of heavy metal contamination (control areas). We applied the environmental genomics approaches known as “structural community metrics” (α- and β-diversity metrics) and “functional community metrics” (PICRUSt2 approach) to verify whether or not the effects of heavy metal contamination in the study area generated impacts on soil bacterial communities. We found that the impact related to the elevation of heavy metal concentration due to the operation of cement plants in the surrounding soil can be considered smooth according to globally recognized indices such as Igeo. However, we identified that both the taxonomic and functional structures of the communities surrounding cement plants were different from those found in the control areas. We consider that our findings contribute significantly to the general understanding of the effects of heavy metals on the soil ecosystem by showing that light contamination can disturb the dynamics of ecosystem services provided by soil, specifically those associated with microbial metabolism."
  },
  {
    "objectID": "publications/estrutura_capital.html",
    "href": "publications/estrutura_capital.html",
    "title": "Capital Structure and Information Asymmetry: A Study of Brazilian Publicly Traded Companies of Testile and Electricity Industries",
    "section": "",
    "text": "Abstract\nGiven the various theories of capital structure and the Pecking Order theory, the present study related the information asymmetry and the capital structure of companies aiming to verify if information asymmetry affects the definition of the capital structure of Brazilian companies held in the electric power industry and textile. The research involved a sample of 53 companies, 31 of the electricity and 22 textiles sector during the years 2008 to 2012. The methodology used was regression with panel data, it allows the same unit cross-sectional monitored over time. The results showed that information asymmetry is an important determinant of capital structure, but that the sectors diverge with respect to the Pecking Order Theory. In the case of the energy sector to reduce information asymmetry led to a propensity for debt, while the textile sector, the opposite occurred, as companies less susceptible to information asymmetry are averse to debt."
  },
  {
    "objectID": "publications/biospecke.html",
    "href": "publications/biospecke.html",
    "title": "Biospeckle laser spectral analysis under Inertia Moment, Entropy and Cross-Spectrum methods",
    "section": "",
    "text": "Abstract\nBiospeckle or dynamic speckle can be used as a method for analysing activity, biologic or not, from materials illuminated with laser beam. The Spatial Temporal Speckle (STS) contains data of time information of dynamic speckle and it is used as input for many techniques allowing the analysis of the activity which is being monitored. One question that rises from the manipulation of the STS is related with the information inside it, in particular, whether it is possible to access different frequency behaviors in the time series presented in the STS pattern. This study presents the Inertia Moment, the Wavelets based Entropy and the Cross-Spectrum analysis as approaches that can be used for evaluating the STS spectral content. In a simulation, STS lines have been created based on many frequencies of the fundamental harmonic. This was done for verifying as each method acts when analysing different frequencies, varying harmonics offset and amplitude. These techniques were applied to real database, to validate their action mechanism in real samples. The results present that all techniques were able to verify the spectral content of different harmonics. Inertia Moment was more efficient on analysing high frequencies, because it is a second order moment, being able to obtain more information from high variations on activity. Entropy and Cross-Spectrum, in turn, were better on differing lower frequencies. This was attributed to the convolution proccess, which is present in both methods, filtering high frequencies. Although, any of them returned informations on both high and low frequencies at the same time, they can be used simultaneously, since Entropy and Cross-Spectrum were complementary to Inertia Moment."
  },
  {
    "objectID": "publications/anchoring_effect.html",
    "href": "publications/anchoring_effect.html",
    "title": "Anchoring effect in managerial decision-making in accountants and managers: an experimental study",
    "section": "",
    "text": "Abstract\nThe objective of this work was to analyze, by means of an experiment, if the type (positive or negative) and the level (simple or complex) of economic-financial information influence the anchoring effect of accountants and managers in a process of managerial decision-making. To do so, an experimental methodology targeting a sample of 86 Accountants, 68 Managers and 118 people with different professional activities (control group) was used. The results showed, in the first test without differentiation of factors (type and level), that about 96% of the participants have the anchoring effect, leaning towards minimum and maximum estimates of sales revenue, operating expenditure and result. In addition, the ANOVA and the Approximate Permutation Test brought significant evidence that the anchoring effect in minimum projections can be influenced by the type of information, not being significant for anchoring in maximum projections and for the level of information on both estimates (minimum and maximum). Finally, the conclusion is that positive information increases the anchoring effect and negative information decreases the anchoring effect in minimum estimates in relation to the low anchor."
  },
  {
    "objectID": "tutorials/rstudio/index.html#interface-do-rstudio",
    "href": "tutorials/rstudio/index.html#interface-do-rstudio",
    "title": "RStudio: Ambiente de Desenvolvimento Integrado para a Linguagem R",
    "section": "2.1 Interface do RStudio",
    "text": "2.1 Interface do RStudio"
  },
  {
    "objectID": "tutorials/rstudio/index.html#painel-source",
    "href": "tutorials/rstudio/index.html#painel-source",
    "title": "RStudio: Ambiente de Desenvolvimento Integrado para a Linguagem R",
    "section": "2.2 Painel: Source",
    "text": "2.2 Painel: Source\n\nO painel Source permite a visualização e edição de vários arquivos relacionados a diversas linguagens, tais como: .R, .qmd,.py ou arquivos de texto gerais como .txt ou .md.\nPor padrão, é o painel superior esquerdo e pode ser iniciado abrindo qualquer arquivo editável no RStudio.\nCada arquivo adicional que for aberto será adicionado como uma nova guia no painel."
  },
  {
    "objectID": "tutorials/rstudio/index.html#painel-console",
    "href": "tutorials/rstudio/index.html#painel-console",
    "title": "RStudio: Ambiente de Desenvolvimento Integrado para a Linguagem R",
    "section": "2.3 Painel: Console",
    "text": "2.3 Painel: Console\n\nEsse painel fornece uma área para executar o código interativamente, isto é, você pode “conversar” diretamente com o interpretado da linguagem R.\nPor padrão, está vinculado a linguagem R, mas ele também pode fornecer um console Python."
  },
  {
    "objectID": "tutorials/rstudio/index.html#painel-environment",
    "href": "tutorials/rstudio/index.html#painel-environment",
    "title": "RStudio: Ambiente de Desenvolvimento Integrado para a Linguagem R",
    "section": "2.4 Painel: Environment",
    "text": "2.4 Painel: Environment\nGuia Environment\n\nEssa guia exibe objetos R e Python ativos na sessão atual.\nA barra de menus de Environment fornece carregamento ou salvamento de R workspaces, importação interativa de conjuntos de dados de arquivos de texto, Excel ou SPSS/SAS/Stata.\nEla também exibe a memória usada pela sessão R ativa e um ícone de uma vassoura para remover todos os objetos ativos."
  },
  {
    "objectID": "tutorials/rstudio/index.html#painel-output",
    "href": "tutorials/rstudio/index.html#painel-output",
    "title": "RStudio: Ambiente de Desenvolvimento Integrado para a Linguagem R",
    "section": "2.5 Painel: Output",
    "text": "2.5 Painel: Output\nPor padrão, o painel Output é o painel inferior direito e contém as seguintes guias:\nGuia Files\n\nEsta guia fornece uma exploração interativa da pasta de arquivos da pasta para a qual R está direcionado, chamada working directory (pasta de trabalho)\nNesta guia, você pode adicionar, excluir, renomear e remover arquivos e pastas, entre outras operações.\n\nGuia Help\n\nO ícone Home exibe a página de ajuda geral, com links para Manuais e Referências sobre o R e RStudio.\nExibe também a documentação dos pacotes.\n\nGuia Viewer\n\nExibe usada conteúdos interativos tais como: gráficos interativos, aplicativos Shiny, páginas html geradas pelo Quarto, entre outros.\n\nGuia Presentation\n\nEsta guia é usada para exibir slides HTML gerados pelo sistema Quarto.\n\nGuia Plots\n\nEsta guia exibe imagens estáticas produzidas na sessão.\nHá setas para navegar entre gráficos mais antigos e mais recentes, zoom, um botão de exportação para salvar as imagens, um botão de exclusão imagem e um ícone de vassoura que limpará todos os gráficos.\n\nGuia Packages\n\nEsta guia permite visualizar os pacotes R instalados.\nHá uma barra para pesquisar a biblioteca atual de pacotes.\nHá também um botão para instalação e atualização de pacotes."
  },
  {
    "objectID": "tutorials/rstudio/index.html#instalando-pacotes-r",
    "href": "tutorials/rstudio/index.html#instalando-pacotes-r",
    "title": "RStudio: Ambiente de Desenvolvimento Integrado para a Linguagem R",
    "section": "2.6 Instalando Pacotes R:",
    "text": "2.6 Instalando Pacotes R:\n\n2.6.1 Usando a Guia Packages\nPara instalar pacotes usando a guia Packages no RStudio:\n\nClique na guia Packages.\nClique em Install Packages.\nDigite o nome de cada pacote que deseja instalar separados por um espaço ou vírgula na caixa de texto.\nCopie os pacotes abaixo e cole na caixa de texto:\n\ntidyverse usethis \n\nClique em Install para iniciar a instalação\n\n\n\n\n\n\n\n\n2.6.2 Usando comandos\n\nUma forma alternativa de instalar pacotes é usando a linha de comando.\nVocê pode usar o seguinte comando diretamente no console, em um script, ou em um documento Quarto:\n\n\ninstall.packages(c(\"tidyverse\", \"usethis\"))"
  },
  {
    "objectID": "tutorials/rstudio/index.html#pacotes-atenção",
    "href": "tutorials/rstudio/index.html#pacotes-atenção",
    "title": "RStudio: Ambiente de Desenvolvimento Integrado para a Linguagem R",
    "section": "2.7 Pacotes: Atenção!",
    "text": "2.7 Pacotes: Atenção!\n\n\n\n\n\n\nInstalação e Carregamento de Pacotes.\n\n\n\n\nUsando um IDE como o RStudio, ou outro, em um computador, precisamos instalar pacotes apenas uma vez.\nEntretanto, para utilizar os pacotes já instalados, precisamos sempre carregá-los com:\n\n\n# carrega os pacotes utilizados\nlibrary(tidyverse)\nlibrary(usethis)\n.\n.\n\n\n\n\n\n\n\n\n\nConexão com a Internet.\n\n\n\n\nPara instalar pacotes, de R ou Python, é necessária uma conexão ativa com a internet.\nPode ser necessário repetir a instalação devido à falhas na conexão, que faz com que os arquivos dos pacotes não sejam baixados completamente."
  },
  {
    "objectID": "tutorials/rstudio/index.html#configurações-básicas-recomendadas-do-rstudio",
    "href": "tutorials/rstudio/index.html#configurações-básicas-recomendadas-do-rstudio",
    "title": "RStudio: Ambiente de Desenvolvimento Integrado para a Linguagem R",
    "section": "2.8 Configurações Básicas Recomendadas do RStudio",
    "text": "2.8 Configurações Básicas Recomendadas do RStudio\n\nAbra o RStudio\nClique no menu “Tools” &gt; “Global Options” &gt; “Basic”\nDesmarque a opção: “Restore most recently opened project at startup”\nDesmarque a opção: “Restore previously open source document at startup”\nDesmarque a opção: “Restore .Rdata into workspace at startup”\nNa caixa à direita de “Save workspace to .Rdata on exit:”, selecione “never”\nClique em “Ok” e, em seguida, em “Apply”"
  },
  {
    "objectID": "tutorials/rstudio/index.html#criando-projects-no-rstudio",
    "href": "tutorials/rstudio/index.html#criando-projects-no-rstudio",
    "title": "RStudio: Ambiente de Desenvolvimento Integrado para a Linguagem R",
    "section": "3.1 Criando Projects no RStudio",
    "text": "3.1 Criando Projects no RStudio\nOs Projetos RStudio estão associados a pastas.\nOs Projetos RStudio podem ser criados:\n\nEm um nova pasta, que não existe.\nEm uma pasta existente, por exemplo, uma pasta que contém um repositório clonado do GitHub.\n\nO caminho mais curto para criar um projeto no RStudio envolve:\n\nClique no botão Project, em seguida, clique em New Project, no canto superior direito do RStudio:\n\n\n\n\n\n\n\nEm seguida, clique em New Directory:\n\n\n\n\n\n\n\nNa janela seguinte selecione New Project:\n\n\n\n\n\n\n\nEscolha a pasta dentro da qual você criará a subpasta seunome_icd2025 (que será a pasta do projeto), clicando no botão Browse.\n\n\n\n\n\n\n\nImportante! Nome da Pasta e do Projeto\n\n\n\nNo caso de um aluno hipotético chamado João Silva, o nome da subpasta seria joaosilva_icd2025, tente seguir esse padrão e não utilize acentos, espaços e caracteres especiais para nomear pastas, projetos e arquivos.\n\n\n\nDigite o nome do projeto (por exemplo, joaosilva_icd2025) no campo de texto abaixo de Directory Name e clique na caixa Create a git repository:\n\n\n\n\n\n\n\nClique em Create Project para criar o projeto. Em seguida, você verá algo similar a seguinte imagem no RStudio:"
  },
  {
    "objectID": "tutorials/rstudio/index.html#projeto-criado",
    "href": "tutorials/rstudio/index.html#projeto-criado",
    "title": "RStudio: Ambiente de Desenvolvimento Integrado para a Linguagem R",
    "section": "3.2 Projeto Criado",
    "text": "3.2 Projeto Criado\nQuando um novo projeto é criado, o RStudio:\n\nCria um arquivo de projeto (joaosilva_icd2025.Rproj) dentro da pasta do projeto.\nCarrega o projeto no RStudio e exibe seu nome no menu Projects.\nCom um projeto criado, toda vez que abrir o RStudio, basta clicar em Project, logo abaixo irá aparecer o nome do projeto, clique no nome para abrir o projeto."
  },
  {
    "objectID": "tutorials/rstudio/index.html#estrutura-recomendada-para-o-projeto-rstudio-criado",
    "href": "tutorials/rstudio/index.html#estrutura-recomendada-para-o-projeto-rstudio-criado",
    "title": "RStudio: Ambiente de Desenvolvimento Integrado para a Linguagem R",
    "section": "3.3 Estrutura Recomendada para o Projeto RStudio Criado",
    "text": "3.3 Estrutura Recomendada para o Projeto RStudio Criado\nPara organizar adequadamente os arquivos de seus projetos envolvendo a análise de dados, recomendamos que você adote a seguinte estrutura inicial de pastas para seu projeto:\n\nPrimeiramente, vamos criar duas pastas principais:\n\n\ndados: Para armazenar todos os conjuntos de dados do projeto.\nrelatorios: Para armazenar todos os documentos Quarto e relatórios.\n\n\nDentro da pasta dados, vamos criar duas subpastas:\n\n\ndados_brutos: Para armazenar os dados originais, sem modificações.\ndados_limpos: Para armazenar dados após limpeza e transformações.\n\n\nDentro da pasta relatorios, vamos criar a subpasta:\n\n\ntestes: Para armazenar documentos Quarto de teste e experimentos.\n\nEsta estrutura fornece uma organização clara que separa dados de documentos e também distingue entre dados brutos e processados (ou limpos, no jargão de Ciência de Dados), seguindo boas práticas de reprodutibilidade.\nPara criar esta estrutura usando o RStudio:\n\nNa Guia Files do RStudio, clique no botão New Folder para criar as pastas principais dados e relatorios:\n\n\n\n\n\n\n\nNavegue para dentro da pasta dados e crie as subpastas dados_brutos e dados_limpos.\nNavegue para dentro da pasta relatorios e crie a subpasta testes.\n\nConsiderando o caso do aluno hipotético chamado João Silva, a estrutura final do projeo ficaria assim:\njoaosilva_icd2025/\n│\n├── dados/\n│   ├── dados_brutos\n│   └── dados_limpos\n|\n├── joaosilva_icd2025.Rproj\n|\n└── relatorios/\n    └── testes"
  },
  {
    "objectID": "tutorials/rstudio/index.html#gerenciamento-de-arquivos",
    "href": "tutorials/rstudio/index.html#gerenciamento-de-arquivos",
    "title": "RStudio: Ambiente de Desenvolvimento Integrado para a Linguagem R",
    "section": "3.4 Gerenciamento de Arquivos",
    "text": "3.4 Gerenciamento de Arquivos\nO RStudio suporta realce de sintaxe e outros recursos especializados de edição de código para tipos de arquivos específicos:\n\nScripts R, Python, SQL e outros.\nDocumentos computacionais e científicos em Quarto, R Markdown e LaTeX.\nConteúdo da Web, como HTML, CSS\nE muitos mais.\n\n\n3.4.1 Menu Files\n\nÉ possível criar um novo arquivo com File -&gt; New File:\n\n\n\n\n\n\n\nOutra possibilidade é usar o ícone no canto superior esquerdo do RStudio:"
  },
  {
    "objectID": "tutorials/rstudio/index.html#configurando-o-rstudio-para-usar-o-git-bash-como-terminal",
    "href": "tutorials/rstudio/index.html#configurando-o-rstudio-para-usar-o-git-bash-como-terminal",
    "title": "RStudio: Ambiente de Desenvolvimento Integrado para a Linguagem R",
    "section": "3.5 Configurando o RStudio para usar o Git Bash como Terminal",
    "text": "3.5 Configurando o RStudio para usar o Git Bash como Terminal\n\n\n\n\n\n\nConfigurando o Terminal do RStudio para Git Bash\n\n\n\nComo trabalharemos com o RStudio e o sistema Quarto, é importante saber como acessar e usar o terminal Git Bash diretamente dentro do RStudio:\n\nConfigurando o terminal Git Bash no RStudio:\n\n\nAbra o RStudio\nVá para “Tools” &gt; “Global Options” &gt; “Terminal”.\nNo campo “New terminals open with:”, selecione “Git Bash” no menu suspenso.\nClique em “Apply” e depois em “OK”\n\n\nAcessando o terminal Git Bash no RStudio:\n\n\nNo painel inferior do RStudio, clique na aba “Terminal”.\nUm novo terminal Git Bash será aberto.\nSe um terminal já estiver aberto, mas não for o Git Bash, clique no ícone “+” no canto superior direito do painel de terminal e selecione “New Terminal” para abrir um novo terminal Git Bash\n\n\nVantagens de usar o Git Bash dentro do RStudio:\n\n\nMantém seu fluxo de trabalho dentro de um único ambiente.\nFacilita a navegação entre edição de arquivos e execução de comandos Git.\nPermite copiar e colar facilmente entre o editor e o terminal.\nEvita a necessidade de alternar entre aplicativos diferentes."
  },
  {
    "objectID": "tutorials/rstudio/index.html#a",
    "href": "tutorials/rstudio/index.html#a",
    "title": "RStudio: Ambiente de Desenvolvimento Integrado para a Linguagem R",
    "section": "A",
    "text": "A\nAmbiente de Desenvolvimento Integrado (IDE): Software que combina editor de código ou texto, console, gerenciamento de arquivos e outras ferramentas para facilitar o desenvolvimento de softwares."
  },
  {
    "objectID": "tutorials/rstudio/index.html#c",
    "href": "tutorials/rstudio/index.html#c",
    "title": "RStudio: Ambiente de Desenvolvimento Integrado para a Linguagem R",
    "section": "C",
    "text": "C\nConsole: Interface de linha de comando onde os códigos R são executados interativamente e os resultados são mostrados imediatamente."
  },
  {
    "objectID": "tutorials/rstudio/index.html#e",
    "href": "tutorials/rstudio/index.html#e",
    "title": "RStudio: Ambiente de Desenvolvimento Integrado para a Linguagem R",
    "section": "E",
    "text": "E\nEditor de texto/código: Componente do IDE onde você escreve e edita o código antes de executá-lo."
  },
  {
    "objectID": "tutorials/rstudio/index.html#p",
    "href": "tutorials/rstudio/index.html#p",
    "title": "RStudio: Ambiente de Desenvolvimento Integrado para a Linguagem R",
    "section": "P",
    "text": "P\nPacote: Coleção de funções, dados e documentação que estende as funcionalidades da linguagem R.\nPainel (Pane): Áreas da interface do RStudio que contêm diferentes ferramentas, como editor, console, ambiente, etc.\nProjeto RStudio: Sistema que organiza arquivos relacionados a uma análise específica em uma estrutura coerente, facilitando a organização e reprodutibilidade."
  },
  {
    "objectID": "tutorials/rstudio/index.html#q",
    "href": "tutorials/rstudio/index.html#q",
    "title": "RStudio: Ambiente de Desenvolvimento Integrado para a Linguagem R",
    "section": "Q",
    "text": "Q\nQuarto: Sistema de publicação científica e técnica que permite combinar código, texto narrativo, equações e visualizações em um único documento. Sucessor do R Markdown."
  },
  {
    "objectID": "tutorials/rstudio/index.html#r",
    "href": "tutorials/rstudio/index.html#r",
    "title": "RStudio: Ambiente de Desenvolvimento Integrado para a Linguagem R",
    "section": "R",
    "text": "R\nR: Linguagem de programação especializada em análise estatística e visualização de dados.\nReprodutibilidade: Princípio que permite que outros pesquisadores e profissionais possam replicar exatamente os mesmos resultados utilizando os mesmos dados e códigos. No contexto corporativo, garante a auditabilidade de análises, facilita a transferência de conhecimento entre equipes, permite verificação de resultados por diferentes stakeholders e assegura a continuidade de projetos mesmo com mudanças de pessoal."
  },
  {
    "objectID": "tutorials/markdown/index.html#cabeçalhos",
    "href": "tutorials/markdown/index.html#cabeçalhos",
    "title": "Markdown: Elementos Essenciais para Documentos do Sistema Quarto",
    "section": "2.1 Cabeçalhos",
    "text": "2.1 Cabeçalhos\nOs cabeçalhos são criados usando o símbolo #:\n# Título Principal (H1)\n## Subtítulo (H2)\n### Seção (H3)\n#### Subseção (H4)\n##### Tópico (H5)\n###### Subtópico (H6)"
  },
  {
    "objectID": "tutorials/markdown/index.html#parágrafos-e-formatação-de-texto",
    "href": "tutorials/markdown/index.html#parágrafos-e-formatação-de-texto",
    "title": "Markdown: Elementos Essenciais para Documentos do Sistema Quarto",
    "section": "2.2 Parágrafos e Formatação de Texto",
    "text": "2.2 Parágrafos e Formatação de Texto\nEm Markdown, os parágrafos são criados através de linhas em branco. Para iniciar um novo parágrafo, basta deixar uma linha vazia entre os blocos de texto.\nEste é o primeiro parágrafo.\n\nEste é o segundo parágrafo. Note a linha em branco \nentre eles.\nResultado:\nEste é o primeiro parágrafo.\nEste é o segundo parágrafo. Note a linha em branco entre eles.\nPara criar uma quebra de linha sem iniciar um novo parágrafo (quebra de linha simples), adicione dois espaços no final da linha ou use a tag HTML &lt;br&gt;.\nEsta linha termina com dois espaços  \ne continua aqui na próxima linha.\n\nEsta linha usa a tag HTML.&lt;br&gt;E continua aqui.\nResultado:\nEsta linha termina com dois espaços\ne continua aqui na próxima linha.\nEsta linha usa a tag HTML.E continua aqui."
  },
  {
    "objectID": "tutorials/markdown/index.html#formatação-de-texto",
    "href": "tutorials/markdown/index.html#formatação-de-texto",
    "title": "Markdown: Elementos Essenciais para Documentos do Sistema Quarto",
    "section": "2.3 Formatação de Texto",
    "text": "2.3 Formatação de Texto\n*Este texto será em itálico* e _este também_\n\n**Este texto será em negrito** e __este também__\n\n***Este texto será em negrito e itálico***\n\n~~Este texto aparecerá riscado~~\n\n`código inline` (útil para comandos, variáveis ou \ntermos técnicos)\nResultado:\nEste texto será em itálico e este também\nEste texto será em negrito e este também\nEste texto será em negrito e itálico\nEste texto aparecerá tachado\ncódigo inline (útil para comandos, variáveis ou termos técnicos)"
  },
  {
    "objectID": "tutorials/markdown/index.html#listas",
    "href": "tutorials/markdown/index.html#listas",
    "title": "Markdown: Elementos Essenciais para Documentos do Sistema Quarto",
    "section": "2.4 Listas",
    "text": "2.4 Listas\n\n2.4.1 Listas Não-Ordenadas\n- Primeiro item\n- Segundo item\n  - Subitem 2.1\n  - Subitem 2.2\n- Terceiro item\nResultado:\n\nPrimeiro item\nSegundo item\n\nSubitem 2.1\nSubitem 2.2\n\nTerceiro item\n\nAlternativas: asteriscos (*) e (+) também podem ser usados para criar listas não ordenadas.\n\n\n2.4.2 Listas Ordenadas\n1. Primeiro passo\n2. Segundo passo\n   1. Subtarefa 2.1\n   2. Subtarefa 2.2\n3. Terceiro passo\nResultado:\n\nPrimeiro passo\nSegundo passo\n\nSubtarefa 2.1\nSubtarefa 2.2\n\nTerceiro passo\n\n\n\n2.4.3 Listas de Tarefas\n- [x] Tarefa concluída\n- [ ] Tarefa pendente\n- [ ] Tarefa a fazer\nResultado:\n\nTarefa concluída\nTarefa pendente\nTarefa a fazer"
  },
  {
    "objectID": "tutorials/markdown/index.html#links",
    "href": "tutorials/markdown/index.html#links",
    "title": "Markdown: Elementos Essenciais para Documentos do Sistema Quarto",
    "section": "2.5 Links",
    "text": "2.5 Links\n[Texto do link](https://www.exemplo.com)\nExemplo:\nIFMG - Campus Formiga"
  },
  {
    "objectID": "tutorials/markdown/index.html#imagens",
    "href": "tutorials/markdown/index.html#imagens",
    "title": "Markdown: Elementos Essenciais para Documentos do Sistema Quarto",
    "section": "2.6 Imagens",
    "text": "2.6 Imagens\nPara incluir imagens externas em seus documentos:\n![Texto alternativo](img/imagem.jpg)\nNo Quarto, você pode adicionar atributos como largura e alinhamento:\n![](imagens/foto.jpg){width=60% fig-align=\"center\"}"
  },
  {
    "objectID": "tutorials/markdown/index.html#integração-com-markdown",
    "href": "tutorials/markdown/index.html#integração-com-markdown",
    "title": "Markdown: Elementos Essenciais para Documentos do Sistema Quarto",
    "section": "3.1 Integração com Markdown:",
    "text": "3.1 Integração com Markdown:\nMuitos sistemas baseados em Markdown, incluindo o sistema Quarto, permitem a incorporação de expressões LaTeX diretamente no texto. Esta integração é especialmente útil para incluir equações matemáticas em documentos:\n\n3.1.1 Expressões Matemáticas Inline\nUse $...$ para inserir expressões matemáticas LaTeX em linha com o texto:\nA fórmula da área do círculo é $A = \\pi r^2$, \nsendo $r$ o raio.\nResultado:\nA fórmula da área do círculo é A = \\pi r^2, onde r é o raio.\n\n\n3.1.2 Blocos de Equações\nUse $$...$$ para equações em destaque:\nA equação quadrática e sua solução:\n\n$$\nax^2 + bx + c = 0\n$$\n\n$$\nx = \\frac{-b \\pm \\sqrt{b^2 - 4ac}}{2a}\n$$\nResultado:\nA equação quadrática e sua solução:\n\nax^2 + bx + c = 0\n\n\nx = \\frac{-b \\pm \\sqrt{b^2 - 4ac}}{2a}\n\n\n\n3.1.3 Exemplos de Expressões Matemáticas Úteis\nFrações: \n\n$$\n\\frac{numerador}{denominador}$\n$$\n\nSomatório: \n\n$$\n\\sum_{i=1}^{n} x_i\n$$\n\nProdutório: \n\n$$\n\\prod_{i=1}^{n} x_i\n$$\n\nIntegral: \n\n$$\n\\int_{a}^{b} f(x) dx\n$$\n\nLimite: \n\n$$\n\\lim_{x \\to \\infty} f(x)\n$$\nResultado:\nFrações:\n\n\\frac{numerador}{denominador}\n\nSomatório:\n\n\\sum_{i=1}^{n} x_i\n\nProdutório:\n\n\\prod_{i=1}^{n} x_i\n\nIntegral:\n\n\\int_{a}^{b} f(x) dx\n\nLimite:\n\n\\lim_{x \\to \\infty} f(x)"
  },
  {
    "objectID": "tutorials/markdown/index.html#callouts-caixas-de-destaque",
    "href": "tutorials/markdown/index.html#callouts-caixas-de-destaque",
    "title": "Markdown: Elementos Essenciais para Documentos do Sistema Quarto",
    "section": "6.1 Callouts (Caixas de Destaque)",
    "text": "6.1 Callouts (Caixas de Destaque)\nO Quarto oferece caixas para destacar informações.\nEsses recursos funcionam perfeitamente para arquivos html e funcionam, mas não tão perfeitamente, em arquivos pdf produzidos pelo Typst.\n::: {.callout-note}\n## Nota\n\nUma informação importante a considerar.\n:::\n\n::: {.callout-tip}\n## Dica\n\nUma sugestão para melhorar seu documento.\n:::\n\n::: {.callout-warning}\n## Atenção\n\nUm aviso para tomar cuidado.\n:::\nResultado:\n\n\n\n\n\n\nNota\n\n\n\nUma informação importante a considerar.\n\n\n\n\n\n\n\n\nDica\n\n\n\nUma sugestão para melhorar seu documento.\n\n\n\n\n\n\n\n\nAtenção\n\n\n\nUm aviso para tomar cuidado."
  },
  {
    "objectID": "tutorials/markdown/index.html#l",
    "href": "tutorials/markdown/index.html#l",
    "title": "Markdown: Elementos Essenciais para Documentos do Sistema Quarto",
    "section": "L",
    "text": "L\nLinguagem de Marcação: Sistema de anotações inseridas em um texto para definir como ele deve ser estruturado, formatado ou apresentado. Ao contrário das linguagens de programação que executam comandos, as linguagens de marcação utilizam tags ou comandos para identificar elementos do documento (como títulos, parágrafos, listas) sem se preocupar com a lógica computacional. Exemplos incluem HTML (para páginas web), XML (para dados estruturados), LaTeX (para documentos científicos) e Markdown (usada no Quarto para formatação simplificada de texto)."
  },
  {
    "objectID": "tutorials/git/index.html#instando-git-no-windows",
    "href": "tutorials/git/index.html#instando-git-no-windows",
    "title": "Controle de Versão com Git e GitHub",
    "section": "2.1 Instando Git no Windows",
    "text": "2.1 Instando Git no Windows\n\n\n\n\n\n\nInstalando o sistema Git no Windows\n\n\n\n\nBaixe o instalador:\n\n\nAcesse o site oficial: https://git-scm.com/download/win\nO site deve te indicar automaticamente qual a versão adequada para seu sistema operacional.\n\n\nExecute o instalador:\n\n\nClique duplo no arquivo baixado (algo como “Git-2.xx.x-64-bit.exe`”).\nAceite as permissões de administrador se solicitado.\n\n\nConfigure o instalador:\n\n\nMantenha as opções padrão na maioria das telas;\nNa tela “Adjusting your PATH environment”, escolha a opção recomendada: “Git from the command line and also from 3rd-party software”\nPara as demais opções, as configurações padrão funcionam bem para iniciantes\n\n\nConclua a instalação:\n\n\nClique em “Install” e aguarde a conclusão\nAo finalizar, marque a opção “Launch Git Bash” e clique em “Finish” para abrir o Git Bash imediatamente\n\n\nVerifique a instalação:\n\n\nNo Git Bash que abriu, digite: git --version\nSe aparecer algo como git version 2.xx.x, a instalação foi bem-sucedida!\n\n\n\n\n\n\n\n\n\nO que é o Git Bash?\n\n\n\n\nO Git Bash é um terminal especial (uma janela de linha de comando) instalado junto com o Git no Windows.\nPense nele como uma “janela de comando” onde você digita instruções para o Git.\nPor que usar o Git Bash em vez do Prompt de Comando do Windows?\n\nOferece comandos adicionais úteis que não existem no prompt padrão do Windows.\nFunciona de forma mais semelhante ao Git em outros sistemas (Mac, Linux).\nPossui recursos de autocompletar e visualização colorida que facilitam o us.o\n\nComo abrir o Git Bash:\n\nMétodo 1: Pesquise “Git Bash” no menu Iniciar.\nMétodo 2: Clique com o botão direito em qualquer pasta e selecione “Git Bash Here” para abrir o terminal já naquela pasta.\n\nNão se assuste com a interface de texto!\n\nApesar de parecer complicado no início, você precisará aprender apenas alguns comandos básicos para começar."
  },
  {
    "objectID": "tutorials/git/index.html#configuração-do-git-no-seu-computador",
    "href": "tutorials/git/index.html#configuração-do-git-no-seu-computador",
    "title": "Controle de Versão com Git e GitHub",
    "section": "2.2 Configuração do Git no seu Computador",
    "text": "2.2 Configuração do Git no seu Computador\n\n\n\n\n\n\nConfigurando o Git Localmente\n\n\n\nAntes de começar a usar o Git, é necessário fazer uma configuração inicial básica. Essa configuração identifica quem está fazendo as alterações e só precisa ser feita uma vez em cada computador.\n\nConfigure seu nome de usuário:\n\n\nAbra o Git Bash\nDigite o comando:\n\ngit config --global user.name \"nome_sobrenome\"\n\nExemplo:\n\ngit config --global user.name \"maria_silva\"\n\nConfigure seu email:\n\n\nUse o mesmo email que você usará (ou já usa) para sua conta no GitHub:\n\ngit config --global user.email \"seu.email@exemplo.com\"\n\nExemplo:\n\ngit config --global user.email \"maria.silva@gmail.com\n\nVerifique suas configurações:\n\n\nPara conferir se tudo está correto:\n\ngit config --global --list\n\nIsso mostrará todas as suas configurações globais\n\nEstas informações serão usadas para identificar suas contribuições em projetos, então use dados reais, especialmente se for trabalhar em projetos compartilhados."
  },
  {
    "objectID": "tutorials/git/index.html#criando-conta-no-github",
    "href": "tutorials/git/index.html#criando-conta-no-github",
    "title": "Controle de Versão com Git e GitHub",
    "section": "2.3 Criando Conta no GitHub",
    "text": "2.3 Criando Conta no GitHub\n\n\n\n\n\n\nCriando uma conta no GitHub\n\n\n\nO GitHub é onde você vai armazenar seus projetos Git na nuvem. Criar uma conta é gratuito e simples:\n\nAcesse o site do GitHub:\n\n\nAcesse https://github.com\nClique no botão “Sign up” (Cadastrar-se)\n\n\nPreencha o formulário de cadastro:\n\n\nDigite seu email (use o mesmo que configurou no Git local).\nCrie uma senha segura.\nEscolha um nome de usuário único:\n\nEste será parte do endereço dos seus projetos (github.com/seu-usuario).\nRecomendação: use algo profissional que você não se importaria de mostrar no currículo.\n\n\n\nVerifique seu email:\n\n\nO GitHub enviará um código de verificação para seu email.\nInsira este código para confirmar sua conta.\n\n\nPersonalize sua experiência (opcional):\n\n\nO GitHub perguntará sobre seu nível de experiência e interesses.\nVocê pode preencher ou pular esta etapa.\n\n\nConfigure a autenticação em dois fatores (recomendado):\n\n\nPara maior segurança, ative a autenticação em dois fatores nas configurações.\nIsso protege sua conta mesmo se alguém descobrir sua senha.\n\n\nCrie seu primeiro repositório:\n\n\nApós entrar, clique no botão “+” no canto superior direito.\nSelecione “New repository” (Novo repositório).\nDê um nome ao repositório (por exemplo, “meu-primeiro-projeto”).\nClique em “Create repository” (Criar repositório).\n\nPronto! Sua conta está criada e você já tem seu primeiro repositório no GitHub."
  },
  {
    "objectID": "tutorials/git/index.html#configurando-o-rstudio-para-usar-o-git-bash-como-terminal",
    "href": "tutorials/git/index.html#configurando-o-rstudio-para-usar-o-git-bash-como-terminal",
    "title": "Controle de Versão com Git e GitHub",
    "section": "2.4 Configurando o RStudio para usar o Git Bash como Terminal",
    "text": "2.4 Configurando o RStudio para usar o Git Bash como Terminal\n\n\n\n\n\n\nConfigurando o Terminal do RStudio para Git\n\n\n\nComo trabalharemos com o sistema Quarto e RStudio, é importante saber como acessar e usar o terminal Git Bash diretamente dentro do RStudio:\n\nConfigurando o terminal Git Bash no RStudio:\n\n\nAbra o RStudio\nVá para “Tools” &gt; “Global Options” &gt; “Terminal”.\nNo campo “New terminals open with:”, selecione “Git Bash” no menu suspenso.\nClique em “Apply” e depois em “OK”\n\n\nAcessando o terminal Git Bash no RStudio:\n\n\nNo painel inferior do RStudio, clique na aba “Terminal”.\nUm novo terminal Git Bash será aberto.\nSe um terminal já estiver aberto, mas não for o Git Bash, clique no ícone “+” no canto superior direito do painel de terminal e selecione “New Terminal” para abrir um novo terminal Git Bash\n\n\nVantagens de usar o Git Bash dentro do RStudio:\n\n\nMantém seu fluxo de trabalho dentro de um único ambiente.\nFacilita a navegação entre edição de arquivos e execução de comandos Git.\nPermite copiar e colar facilmente entre o editor e o terminal.\nEvita a necessidade de alternar entre aplicativos diferentes.\n\n\nVerificando se está usando Git Bash:\n\n\nO prompt do Git Bash normalmente mostra o caminho atual e termina com “$”.\nAs cores do texto no terminal são diferentes do terminal padrão do Windows.\nVocê pode digitar echo $SHELL e pressionar Enter - se mostrar algo contendo “bash”, você está no Git Bash."
  },
  {
    "objectID": "tutorials/git/index.html#git-status",
    "href": "tutorials/git/index.html#git-status",
    "title": "Controle de Versão com Git e GitHub",
    "section": "3.1 git status",
    "text": "3.1 git status\n\n\n\n\n\n\nO que é git status?\n\n\n\n\nO comando git status é como tirar uma “foto” do estado atual do seu projeto.\nO que ele mostra?:\n\nQuais arquivos você modificou desde o último salvamento.\nQuais arquivos são novos e ainda não estão sendo rastreados.\nQuais mudanças já estão prontas para serem salvas (commit).\n\nQuando usar?:\n\nSempre que quiser verificar o que mudou no seu projeto.\nAntes de fazer um commit para confirmar que está incluindo as mudanças certas.\nQuando não se lembrar se salvou suas últimas alterações.\n\nExemplo prático: Imagine que você está trabalhando em uma análise de dados e:\n\nModificou seu script principal (analise.R).\nAdicionou um novo arquivo de dados (dados_2024.csv).\nModificou seu relatório (relatorio.qmd).\n\nAo digitar git status, você verá todos esses arquivos listados indicando quais estão prontos para commit (em verde) e quais ainda precisam ser adicionados (em vermelho).\nÉ como fazer a pergunta: “O que mudou no meu projeto e o que preciso salvar?”"
  },
  {
    "objectID": "tutorials/git/index.html#git-add",
    "href": "tutorials/git/index.html#git-add",
    "title": "Controle de Versão com Git e GitHub",
    "section": "3.2 git add",
    "text": "3.2 git add\n\n\n\n\n\n\nO que é git add?\n\n\n\n\nO comando git add é como adicionar ou selecionar quais mudanças você quer incluir na próxima “foto” (commit) do seu projeto.\nPense nele como a etapa de “seleção” antes de salvar suas mudanças definitivamente.\nComo funciona na prática?\nImagine que você está organizando fotos para um álbum:\n\nVocê tira várias fotos (faz várias mudanças nos arquivos)\nAntes de imprimir o álbum, seleciona quais fotos quer incluir (git add)\nSó depois de selecionar, você finaliza uma página do álbum (git commit)\n\nQuando usar? Use git add quando:\n\nTerminar de fazer uma alteração que faz sentido ser salva\nQuiser incluir um novo arquivo ao projeto\nAntes de fazer um commit\n\n\nExemplos de Uso:\n\nPara adicionar apenas um arquivo específico:\n\ngit add scripts/analise.R\nEsse comando adiciona apenas o arquivo analise.R que está na pasta “scripts”.\nSe você estiver trabalhando com análises estatísticas ou financeiras, poderia ser:\ngit add analise_rentabilidade.R\n\nPara selecionar todos os arquivos de uma pasta:\n\ngit add scripts/\nEsse comando adiciona todos os arquivos modificados dentro da pasta “scripts”\n\nPara selecionar todos os arquivos modificados do projeto:\n\ngit add .\nO ponto “.” significa “todos os arquivos” - use com cuidado!\nDica para iniciantes:\n\nComece usando o comando completo para cada arquivo até se familiarizar com o processo.\nDepois, quando estiver mais confiante, você pode usar o git add . para adicionar vários arquivos de uma vez."
  },
  {
    "objectID": "tutorials/git/index.html#git-commit",
    "href": "tutorials/git/index.html#git-commit",
    "title": "Controle de Versão com Git e GitHub",
    "section": "3.3 git commit",
    "text": "3.3 git commit\n\n\n\n\n\n\nO que é git commit?\n\n\n\n\nO git commit é o momento de “salvar oficialmente” as mudanças que você selecionou com o git add.\nÉ como tirar uma foto do estado atual do seu projeto e adicionar uma legenda descrevendo o que mudou.\nCada commit cria um ponto na linha do tempo do seu projeto ao qual você pode voltar se precisar.\n\nComo usar:\ngit commit -m \"mensagem descrevendo o que você fez\"\nA parte -m \"mensagem\" é onde você explica brevemente o que mudou.\nExemplos de boas mensagens de commit:\ngit commit -m \"adiciona análise inicial dos dados de vendas\"\ngit commit -m \"corrige fórmulas na seção de métodos\"\ngit commit -m \"finaliza capítulo 3 da dissertação\"\nQuando fazer um commit?\nPense em cada commit como um “marco” no seu trabalho:\n\nApós completar uma tarefa específica: “Terminei de analisar os dados de janeiro” → commit\nApós resolver um problema: “Corrigi o erro nas referências” → commit\nAntes de fazer uma mudança grande ou arriscada: “Vou reorganizar toda a estrutura do documento” → commit primeiro!\n\nAnalogia: Se seu trabalho fosse uma viagem, cada commit seria como fincar uma bandeira no caminho dizendo “cheguei até aqui com segurança”. Se você se perder depois, pode sempre voltar a este ponto.\nRecomendação para iniciantes: Faça commits frequentes! É melhor ter muitos pequenos commits do que poucos commits gigantes."
  },
  {
    "objectID": "tutorials/git/index.html#git-push",
    "href": "tutorials/git/index.html#git-push",
    "title": "Controle de Versão com Git e GitHub",
    "section": "3.4 git push",
    "text": "3.4 git push\n\n\n\n\n\n\nO que é git push?\n\n\n\n\nO comando git push envia as mudanças que você salvou localmente (com commit) para o GitHub.\nÉ como sincronizar seu trabalho local com a “nuvem”, tornando-o disponível para outras pessoas ou em outros computadores.\n\nComo funciona na prática:\nImagine que você:\n\nFez várias alterações no seu computador\nAdicionou essas alterações (git add)\nSalvou-as localmente (git commit)\n\nNeste ponto, as mudanças estão apenas no seu computador! Para enviar ao GitHub:\ngit push origin main\nO que significa “origin main”?\n\norigin é o nome padrão que o Git dá ao seu repositório remoto no GitHub (como um “apelido” para o endereço completo)\nmain é o nome do ramo principal do seu projeto (anteriormente chamado de “master” em projetos mais antigos)\n\nQuando fazer um push?\n\nAo terminar uma sessão de trabalho\nQuando quiser compartilhar seu progresso com colegas\nComo backup de segurança do seu trabalho\nAntes de mudar para outro computador\n\nAnalogia: Se os commits são como salvar seu jogo em um cartão de memória, o push é como fazer um backup desse cartão na nuvem. Se seu computador quebrar, você não perde o progresso.\nDica: Para ver se seu push funcionou, acesse seu repositório no GitHub pelo navegador - você deverá ver todas as mudanças que acabou de enviar."
  },
  {
    "objectID": "tutorials/git/index.html#uso-do-git-via-terminal-no-rstudio",
    "href": "tutorials/git/index.html#uso-do-git-via-terminal-no-rstudio",
    "title": "Controle de Versão com Git e GitHub",
    "section": "3.5 Uso do Git via Terminal no RStudio",
    "text": "3.5 Uso do Git via Terminal no RStudio\n\n\n\n\n\n\nUsando Git via Terminal no RStudio\n\n\n\nTodos os comandos Git que aprendemos serão executados através do terminal Git Bash dentro do RStudio:\n\nAbra o terminal no RStudio:\n\n\nClique na aba “Terminal” no painel inferior do RStudio.\nCertifique-se de que está usando o Git Bash (o prompt deve terminar com “$”).\n\n\nNavegue até a pasta do projeto:\n\n\nSe você estiver trabalhando em um Projeto RStudio, o terminal já estará aberto na pasta correta.\nCaso contrário, use o comando cd para navegar até a pasta do seu projeto.\n\n\nExecute os comandos Git normalmente:\n\n# Verificar o estado atual\ngit status\n\n# Adicionar arquivos para o próximo commit\ngit add nome-do-arquivo.qmd\n\n# Fazer um commit com mensagem\ngit commit -m \"Adiciona análise descritiva\"\n\n# Enviar para o GitHub\ngit push origin main\nPor que usar o terminal em vez da interface Git do RStudio?\n\nMais rápido e responsivo.\nMenos sobrecarga visual, ajudando a focar no que realmente importa.\nAs mesmas habilidades são transferíveis para qualquer ambiente, não apenas RStudio.\nMensagens de erro e avisos são exibidos com mais clareza.\nFornece mais controle sobre o processo Git.\n\nDica para iniciantes:\nMantenha uma “cola” dos comandos Git mais comuns por perto até se familiarizar com eles. Com o tempo, você os memorizará naturalmente através do uso frequente."
  },
  {
    "objectID": "tutorials/git/index.html#git-diff",
    "href": "tutorials/git/index.html#git-diff",
    "title": "Controle de Versão com Git e GitHub",
    "section": "4.1 git diff",
    "text": "4.1 git diff\n\n\n\n\n\n\nO que é git diff?\n\n\n\n\nO comando git diff mostra as alterações específicas que foram feitas nos arquivos, mas que ainda não foram preparadas para commit (não passaram pelo git add).\nÉ como um “modo de revisão” que destaca exatamente o que foi adicionado (em verde) e o que foi removido (em vermelho).\nQuando usar?:\n\nAntes de adicionar arquivos com git add, para revisar exatamente o que foi alterado.\nPara verificar detalhes das modificações que o git status apenas lista.\nQuando você não se lembra exatamente o que mudou em um arquivo específico.\n\nExemplos de Uso:\n\n\nPara ver todas as mudanças não preparadas:\n\ngit diff\n\nPara ver as mudanças em um arquivo específico:\n\ngit diff relatorio.qmd\n\nPara ver as mudanças que já foram preparadas com git add (e irão para o próximo commit):\n\ngit diff --staged\n\nAnalogia: Se o git status é como uma lista de compras que mostra quais itens você precisa, o git diff é como abrir cada item para inspecionar seu conteúdo antes de colocá-lo no carrinho.\nComo interpretar o resultado:\n\nLinhas que começam com + mostram conteúdo adicionado\nLinhas que começam com - mostram conteúdo removido\nO contexto (linhas não alteradas) aparece sem símbolos especiais\n\nDica para iniciantes:\n\nUse o git diff antes de cada git add para ter certeza de que está adicionando apenas as alterações desejadas, especialmente quando trabalha com documentos importantes como relatórios financeiros, análises de dados ou capítulos de dissertação."
  },
  {
    "objectID": "tutorials/git/index.html#configuração-inicial-para-o-exame-de-qualificacão-do-mestrado",
    "href": "tutorials/git/index.html#configuração-inicial-para-o-exame-de-qualificacão-do-mestrado",
    "title": "Controle de Versão com Git e GitHub",
    "section": "5.1 Configuração Inicial para o Exame de Qualificacão do Mestrado",
    "text": "5.1 Configuração Inicial para o Exame de Qualificacão do Mestrado\n\n\n\n\n\n\nConfiguração Inicial - Orientando\n\n\n\nEsta etapa será realizada apenas uma vez, no início do trabalho com seu orientador:\n\nUtilizando o Templote Quarto para o Exame de Qualificação:\n\n\nAcesse o repositório do template: Template para o Exame de Qualificaçao do Mestrado\nClique no botão “Use this template” no topo da página\nClique em “Create a new repository”\nNa próxima página, escreva um nome para o seu repositório, por exemplo,\nrepositorio_exame_qualificacao, no campo abaiso de “Repository name”.\nRevise e estando tudo ok, clique no botão verde “Create repository”.\nPronto! você acabou de criar um repositório disponível na sua conta do GitHub contendo o template Quarto para o exame de qualificação do mestrado.\n\n\nAdicione seu orientador como colaborador:\n\n\nDentro do seu repositório do template, clique na aba “Settings” (localizada na parte superior da página).\nNo menu lateral esquerdo, clique em “Collaborators” (pode estar dentro da seção “Access”).\nClique no botão “Add people”.\nDigite o email cadastrado ou nome de usuário do seu orientador no GitHub.\nSelecione o perfil do seu orientador e escolha o nível de permissão (recomendado: “Write” ou “Maintain”).\nClique em “Add [nome do colaborador]”.\nO GitHub enviará um convite por email ao seu orientador; e le precisará aceitar o convite para ter acesso.\n\n\nClone o repositório para seu computador usando o RStudio:\n\n\nAbra o RStudio\nClique em Project -&gt; New Project -&gt; Version Control -&gt; Git (clone a project from a github repository).\nUsando seu navegoar, dentro do seu repositório no GitHub, clique no botão verde “Code”.\nVerifique se a opção “HTTPS” está selecionada (em vez de SSH ou GitHub CLI).\nCopie a URL mostrada (que terá o formato https://github.com/seu-usuario/nome-repositorio.git)\nNo RStudio, cole a URL do repositório no campo abaixo de “Repository URL”\nDefina um nome para o repositório local, pode ser o mesmo nome do repositório no GitHub: repositorio_exame_qualificacao\nAntes de cliar no botão “Create” verifique se o endereço exibido abaixo de “Create projet as subdirectory of:” está apontando para a pasta do seu computador na qual deseja salvar o repositório localmente.\nCaso necessário, clique em “browse” e selecione a pasta onde deseja salvar o repositório no seu computador.\nClique em “Create”\n\n\nVerificação final:\n\n\nConfirme que o repositório foi clonado corretamente observando se a pasta no seu computador contém os arquivos do repositório do template quarto\nDigite git status para verificar o estado atual do seu repositório local"
  },
  {
    "objectID": "tutorials/git/index.html#ciclo-de-desenvolvimento",
    "href": "tutorials/git/index.html#ciclo-de-desenvolvimento",
    "title": "Controle de Versão com Git e GitHub",
    "section": "5.2 Ciclo de Desenvolvimento",
    "text": "5.2 Ciclo de Desenvolvimento\n\n\n\n\n\n\nCiclo Diário/Semanal de Trabalho - Orientando\n\n\n\n(usando Terminal no RStudio)\nEste é o ciclo que você repetirá regularmente enquanto trabalha em seu projeto:\n\nComece o dia de trabalho atualizando seu repositório local:\n\n\nAbra seu projeto no RStudio\nClique na aba “Terminal” no painel inferior\nExecute o comando:\n\ngit pull origin main\nEste comando baixa qualquer mudança que seu orientador possa ter feito.\n\nTrabalhe em seus arquivos normalmente no RStudio:\n\n\nEdite seus arquivos .qmd\nExecute análises no R\nGere tabelas e visualizações\nRenderize documentos Quarto\n\nTrabalhe como você normalmente faria no RStudio.\n\nSalve seu progresso usando o terminal Git Bash no RStudio:\n\nA cada conquista significativa ou no final do dia, sem sair do RStudio, use o terminal para:\n# Verifique o que mudou\ngit status\n\n# Veja as alterações específicas (opcional)\ngit diff arquivo-modificado.qmd\n\n# Adicione os arquivos modificados (você pode especificar arquivos individuais)\ngit add .\n\n# Salve as mudanças localmente com uma mensagem descritiva\ngit commit -m \"Adiciona análise descritiva no capítulo 3\"\n\n# Envie para o GitHub\ngit push origin main\nBenefícios deste fluxo de trabalho:\n\nMantém tudo em um único ambiente (RStudio)\nUsa comandos Git de forma direta e transparente\nEvita problemas de desempenho da interface gráfica\nFacilita a compreensão do que está realmente acontecendo\n\nLembre-se: Fazer commits pequenos e frequentes com mensagens descritivas claras ajuda tanto você quanto seu orientador a acompanhar o progresso do trabalho."
  },
  {
    "objectID": "tutorials/git/index.html#incorporação-de-feedback",
    "href": "tutorials/git/index.html#incorporação-de-feedback",
    "title": "Controle de Versão com Git e GitHub",
    "section": "5.3 Incorporação de Feedback",
    "text": "5.3 Incorporação de Feedback\n\n\n\n\n\n\nQuando seu Orientador Fornecer Feedback - Orientando\n\n\n\nEste processo ocorre depois que seu orientador revisar seu trabalho e fizer alterações:\n\nObtenha as mudanças feitas pelo orientador:\n\nEm um terminal Git Bash dentro do RStudio execute:\ngit pull origin main\nIsso baixa as alterações, comentários ou correções feitas pelo orientador.\n\nRevise as mudanças:\n\nNovamente, Em um terminal Git Bash dentro do RStudio execute:\n# Para ver quais arquivos foram modificados pelo orientador\ngit log\n\n# Para ver as mudanças específicas em um arquivo\ngit diff HEAD~1 HEAD -- caminho/do/arquivo\nEste comando mostra o que mudou entre a versão atual e a anterior.\n\nTrabalhe com as sugestões:\n\n\nImplemente as correções sugeridas.\nResponda a questionamentos (pode ser no próprio documento ou em um comentário no GitHub).\nComplemente seções conforme solicitado.\n\n\nContinue o ciclo normal:\n\nVolte ao passo 2 (Ciclo de Desenvolvimento) e continue seu trabalho."
  },
  {
    "objectID": "tutorials/git/index.html#lidando-com-conflitos",
    "href": "tutorials/git/index.html#lidando-com-conflitos",
    "title": "Controle de Versão com Git e GitHub",
    "section": "5.4 Lidando com Conflitos",
    "text": "5.4 Lidando com Conflitos\n\n\n\n\n\n\nResolvendo Conflitos via Terminal no RStudio\n\n\n\nQuando ocorrem conflitos durante um pull, você pode resolvê-los diretamente no RStudio:\n\nIdentificando conflitos:\n\nAo executar git pull no terminal, você verá uma mensagem como:\nCONFLICT (content): Merge conflict in nome-do-arquivo.qmd\nAutomatic merge failed; fix conflicts and then commit the result.\n\nAbrindo e editando o arquivo com conflito:\n\n\nNo RStudio, abra o arquivo com conflito no editor\nRStudio mostrará as marcações de conflito com formatação visual:\n\n&lt;&lt;&lt;&lt;&lt;&lt;&lt; HEAD\nSeu texto (versão local)\n=======\nTexto do orientador (versão do GitHub)\n&gt;&gt;&gt;&gt;&gt;&gt;&gt; abcd1234\n\nResolvendo o conflito:\n\n\nEdite manualmente o arquivo, removendo as marcações de conflito\nMantenha o texto que faz mais sentido (seu texto, o texto do orientador, ou uma combinação de ambos)\nRemova completamente as linhas com &lt;&lt;&lt;&lt;&lt;&lt;&lt; HEAD, ======= e &gt;&gt;&gt;&gt;&gt;&gt;&gt; abcd1234\nSalve o arquivo\n\n\nConcluindo a resolução via terminal:\n\nApós resolver todos os conflitos no editor, volte ao terminal no RStudio:\n# Verifique se todos os conflitos foram resolvidos\ngit status\n\n# Adicione o arquivo resolvido\ngit add nome-do-arquivo.qmd\n\n# Faça um commit da resolução\ngit commit -m \"Resolve conflito no arquivo nome-do-arquivo.qmd\"\n\n# Envie para o GitHub\ngit push origin main\nDica: Comunique-se com seu orientador quando encontrar conflitos. Às vezes, uma conversa rápida pode esclarecer qual versão deve ser mantida."
  },
  {
    "objectID": "tutorials/git/index.html#trabalhando-com-issues-do-github",
    "href": "tutorials/git/index.html#trabalhando-com-issues-do-github",
    "title": "Controle de Versão com Git e GitHub",
    "section": "5.5 Trabalhando com Issues do GitHub",
    "text": "5.5 Trabalhando com Issues do GitHub\n\n\n\n\n\n\nUsando Issues para Organizar Tarefas\n\n\n\nO GitHub possui uma ferramenta chamada “Issues” que é excelente para:\n\nListar tarefas pendentes\nRegistrar problemas a serem resolvidos\nDocumentar discussões entre orientando e orientador\n\nComo usar:\n\nCrie uma issue:\n\n\nNo GitHub, acesse a aba “Issues” do repositório.\nClique em “New issue”.\nDê um título descritivo e explique a tarefa/problema.\nUse marcadores como listas, negrito e itálico para organizar.\nAdicione etiquetas (labels) como “revisão”, “urgent”, “discussão”.\n\n\nAcompanhe o progresso:\n\n\nComente nas issues para atualizar o progresso.\nReferencie commits relacionados usando “#” (exemplo: “Resolve #4”).\nFeche a issue quando a tarefa estiver concluída.\n\n\nReferencie issues nos commits:\n\ngit commit -m \"Adiciona análise de correlação solicitada na issue #5\"\nIsso cria uma referência cruzada que facilita acompanhar o histórico de mudanças e discussões."
  },
  {
    "objectID": "tutorials/git/index.html#aplicando-este-workflow-a-outros-cenários",
    "href": "tutorials/git/index.html#aplicando-este-workflow-a-outros-cenários",
    "title": "Controle de Versão com Git e GitHub",
    "section": "5.6 Aplicando este Workflow a Outros Cenários",
    "text": "5.6 Aplicando este Workflow a Outros Cenários\n\n\n\n\n\n\nAdaptando para Outras Colaborações\n\n\n\nEste mesmo fluxo de trabalho pode ser facilmente adaptado para colaborar com:\n\nColegas de classe em projetos em grupo.\nOutros pesquisadores em artigos científicos.\nEquipes de trabalho em relatórios ou análises.\nProjetos de extensão ou iniciação científica.\n\nA mesma lógica se aplica:\n\nConfiguração inicial (uma vez).\nCiclo frequente de atualizações.\nIncorporação de feedback dos colaboradores.\n\nA diferença principal em outros cenários pode ser a necessidade de usar “branches” (ramificações) para trabalhos mais complexos com múltiplos colaboradores, um tópico que pode ser explorado quando você já estiver confortável com este fluxo básico."
  },
  {
    "objectID": "tutorials/git/index.html#resumo-do-workflow",
    "href": "tutorials/git/index.html#resumo-do-workflow",
    "title": "Controle de Versão com Git e GitHub",
    "section": "5.7 Resumo do Workflow",
    "text": "5.7 Resumo do Workflow\n\n\n\n\n\n\nResumindo\n\n\n\nO ciclo de trabalho com seu orientador segue este padrão:\n\nComece o dia puxando alterações: git pull origin main\nTrabalhe nos arquivos normalmente\nVerifique mudanças: git status e git diff\nSalve seu progresso:\ngit add .\ngit commit -m \"Mensagem descritiva\"\ngit push origin main\nRepita diariamente ou quando concluir uma parte significativa\n\nLembre-se: a comunicação clara com seu orientador sobre qual parte cada um está trabalhando pode evitar conflitos e retrabalho."
  },
  {
    "objectID": "tutorials/git/index.html#dicas-para-usar-o-terminal-git-bash-no-rstudio",
    "href": "tutorials/git/index.html#dicas-para-usar-o-terminal-git-bash-no-rstudio",
    "title": "Controle de Versão com Git e GitHub",
    "section": "5.8 Dicas para usar o Terminal Git Bash no RStudio",
    "text": "5.8 Dicas para usar o Terminal Git Bash no RStudio\n\n\n\n\n\n\nDicas para usar o Terminal Git Bash no RStudio\n\n\n\nPara tornar seu trabalho com Git mais eficiente usando o terminal no RStudio:\n\nAtalhos úteis no terminal Git Bash:\n\n\nPressione a tecla “seta para cima” para acessar comandos anteriores\nUse Tab para autocompletar nomes de arquivos e comandos\nCtrl+C cancela um comando em execução\nCtrl+L limpa a tela do terminal (ou digite clear)\n\n\nVerificando rapidamente as mudanças:\n\n# Ver mudanças em um arquivo específico\ngit diff caminho/para/arquivo.qmd\n\n# Ver apenas os nomes dos arquivos modificados\ngit status -s\n\nAdicionando arquivos seletivamente:\n\n# Adicionar arquivos interativamente (pergunta arquivo por arquivo)\ngit add -i\n\n# Adicionar apenas partes específicas de um arquivo\ngit add -p\n\nRevertendo mudanças quando necessário:\n\n# Descartar mudanças em um arquivo específico (cuidado!)\ngit checkout -- nome-do-arquivo.qmd\n\n# Desfazer o último commit (mantendo as mudanças)\ngit reset --soft HEAD~1\n\nVisualizando o histórico:\n\n# Ver histórico resumido\ngit log --oneline\n\n# Ver histórico com detalhes das mudanças\ngit log -p\n\n# Ver histórico de um arquivo específico\ngit log -p nome-do-arquivo.qmd\n\nMantendo o terminal aberto:\n\n\nVocê pode manter o terminal Git Bash aberto o tempo todo enquanto trabalha.\nPara abrir um novo terminal sem fechar o atual, clique no ícone “+” no painel do terminal.\nUse diferentes terminais para diferentes tarefas (um para Git, outro para R, etc.).\n\n\nSalvando comandos frequentes em um arquivo de texto:\n\n\nCrie um arquivo de texto no seu projeto chamado “git-comandos.txt”.\nGuarde ali os comandos que você usa com frequência para copiar e colar.\nAdicione comentários úteis ao lado de cada comando."
  },
  {
    "objectID": "tutorials/git/index.html#b",
    "href": "tutorials/git/index.html#b",
    "title": "Controle de Versão com Git e GitHub",
    "section": "B",
    "text": "B\nBranch: Ramificação independente do código que permite trabalhar em funcionalidades ou correções sem afetar a linha principal de desenvolvimento."
  },
  {
    "objectID": "tutorials/git/index.html#c",
    "href": "tutorials/git/index.html#c",
    "title": "Controle de Versão com Git e GitHub",
    "section": "C",
    "text": "C\nClone: Cópia completa de um repositório, incluindo todos os arquivos, histórico e branches, para o computador local.\nCommit: “Fotografia” do estado do projeto em um determinado momento, com uma mensagem descritiva das alterações realizadas.\nConflito: Situação onde o Git não consegue mesclar automaticamente alterações de diferentes fontes porque ambas modificaram a mesma parte de um arquivo."
  },
  {
    "objectID": "tutorials/git/index.html#f",
    "href": "tutorials/git/index.html#f",
    "title": "Controle de Versão com Git e GitHub",
    "section": "F",
    "text": "F\nFork: Cópia pessoal de um repositório de outra pessoa no GitHub, permitindo experimentar mudanças sem afetar o projeto original."
  },
  {
    "objectID": "tutorials/git/index.html#g",
    "href": "tutorials/git/index.html#g",
    "title": "Controle de Versão com Git e GitHub",
    "section": "G",
    "text": "G\nGit: Sistema de controle de versão distribuído que registra alterações em arquivos ao longo do tempo.\nGit Bash: Terminal especial instalado com o Git no Windows que permite executar comandos Git e outros comandos Unix.\nGitHub: Plataforma online que hospeda repositórios Git e oferece ferramentas adicionais para colaboração e desenvolvimento de projetos."
  },
  {
    "objectID": "tutorials/git/index.html#h",
    "href": "tutorials/git/index.html#h",
    "title": "Controle de Versão com Git e GitHub",
    "section": "H",
    "text": "H\nHash: Identificador único (como f7d2e09) gerado para cada commit, permitindo referenciar versões específicas dos arquivos."
  },
  {
    "objectID": "tutorials/git/index.html#i",
    "href": "tutorials/git/index.html#i",
    "title": "Controle de Versão com Git e GitHub",
    "section": "I",
    "text": "I\nIssue: Funcionalidade do GitHub para rastrear tarefas, melhorias, bugs e outras questões relacionadas a um projeto."
  },
  {
    "objectID": "tutorials/git/index.html#m",
    "href": "tutorials/git/index.html#m",
    "title": "Controle de Versão com Git e GitHub",
    "section": "M",
    "text": "M\nMain: Branch principal de um repositório Git (anteriormente chamado de “master”).\nMerge: Processo de unir alterações de diferentes branches ou commits."
  },
  {
    "objectID": "tutorials/git/index.html#o",
    "href": "tutorials/git/index.html#o",
    "title": "Controle de Versão com Git e GitHub",
    "section": "O",
    "text": "O\nOrigin: Nome padrão dado ao repositório remoto (normalmente no GitHub) a partir do qual um repositório local foi clonado."
  },
  {
    "objectID": "tutorials/git/index.html#p",
    "href": "tutorials/git/index.html#p",
    "title": "Controle de Versão com Git e GitHub",
    "section": "P",
    "text": "P\nPull: Ação de baixar as alterações do repositório remoto para o repositório local, atualizando-o.\nPush: Ação de enviar commits do repositório local para o repositório remoto (GitHub)."
  },
  {
    "objectID": "tutorials/git/index.html#r",
    "href": "tutorials/git/index.html#r",
    "title": "Controle de Versão com Git e GitHub",
    "section": "R",
    "text": "R\nRepositório: Coleção de arquivos e pastas de um projeto, junto com o histórico completo de alterações.\nRepositório Local: Versão do repositório armazenada no seu computador.\nRepositório Remoto: Versão do repositório armazenada em um servidor (como o GitHub)."
  },
  {
    "objectID": "tutorials/git/index.html#s",
    "href": "tutorials/git/index.html#s",
    "title": "Controle de Versão com Git e GitHub",
    "section": "S",
    "text": "S\nStage/Staging Area: Área intermediária onde as alterações são adicionadas (via git add) antes de serem definitivamente salvas em um commit."
  },
  {
    "objectID": "tutorials/git/index.html#t",
    "href": "tutorials/git/index.html#t",
    "title": "Controle de Versão com Git e GitHub",
    "section": "T",
    "text": "T\nTerminal: Interface de linha de comando onde os comandos Git são executados."
  },
  {
    "objectID": "tutorials/git/index.html#w",
    "href": "tutorials/git/index.html#w",
    "title": "Controle de Versão com Git e GitHub",
    "section": "W",
    "text": "W\nWorking Directory: Diretório local onde os arquivos do projeto estão sendo editados ativamente."
  },
  {
    "objectID": "tutorials/R/index.html#tipos-double-e-integer",
    "href": "tutorials/R/index.html#tipos-double-e-integer",
    "title": "Introdução à Linguagem R",
    "section": "4.1 Tipos double e integer",
    "text": "4.1 Tipos double e integer\nEm R, existem dois tipos principais de dados numéricos:\n\ndouble: Armazena números com casas decimais (ponto flutuante), ideal para valores monetários, índices financeiros, taxas percentuais e outras medidas que exigem precisão decimal.\ninteger: Armazena números inteiros sem casas decimais, útil para contagens, quantidades discretas e índices em séries temporais.\n\nNa prática de Administração e Finanças, o tipo double é frequentemente utilizado para representar valores monetários, taxas de juros ou indicadores financeiros, enquanto integer é mais comum para representar quantidades como número de funcionários, produtos vendidos ou períodos de análise.\nO sufixo L após um número (como em 50L) indica explicitamente que se trata de um valor inteiro. Na maioria das operações, R utiliza automaticamente o tipo mais apropriado, o que simplifica a programação para análises financeiras e administrativas.\n\n# double (números com casas decimais)\nreceita &lt;- 850000.50  \n\n# integer (números inteiros)\ntotal_funcionarios &lt;- 50L   \n\n# verifica os tipos\ntypeof(receita)\n\n[1] \"double\"\n\ntypeof(total_funcionarios)\n\n[1] \"integer\"\n\n\n\n\n\n\n\n\nclasse numeric\n\n\n\nApesar dos tipos double e integer representarem números decimais e inteiros de forma diferente, ambos pertencem à classe numeric, assim, na maioria das situações, você não precisa se preocupar com a possível diferença.\n\nclass(receita)\n\n[1] \"numeric\"\n\nclass(total_funcionarios)\n\n[1] \"integer\"\n\n\nDiferença entre typeof e class\nEm R, as funções typeof e class fornecem informações diferentes sobre um objeto:\n\ntypeof: Retorna o tipo interno do objeto, ou seja, como R armazena o objeto na memória. Por exemplo:\n\n\ntypeof(receita)  # Retorna \"double\"\ntypeof(total_funcionarios)  # Retorna \"integer\"\n\n\nclass: Retorna a classe do objeto, que define como R trata o objeto em operações e funções. Por exemplo:\n\n\nclass(receita)  # Retorna \"numeric\"\nclass(total_funcionarios)  # Retorna \"numeric\"\n\nEm resumo:\n\nUse typeof para entender como R armazena o objeto internamente.\nUse class para entender como R trata o objeto em operações e funções."
  },
  {
    "objectID": "tutorials/R/index.html#tipo-character",
    "href": "tutorials/R/index.html#tipo-character",
    "title": "Introdução à Linguagem R",
    "section": "4.2 Tipo character",
    "text": "4.2 Tipo character\nO tipo character é essencial para armazenar e manipular informações textuais. Este tipo de dado armazena sequências de caracteres (texto) e é indicado por aspas simples (') ou duplas (\").\nEm contextos de Administração, o tipo character é utilizado para armazenar:\n\nNomes de empresas, setores ou produtos\nCategorias em classificações de mercado\nPeríodos de tempo expressos como texto (Ex: “1° Trimestre 2024”)\nCódigos de identificação alfanuméricos\nObservações qualitativas\n\nA manipulação de dados textuais é particularmente importante em análises de mercado, pesquisas de satisfação, classificação de produtos e organização de relatórios gerenciais, onde a categorização textual precede análises quantitativas.\n\n# character (texto)\ninstituicao &lt;- \"IFMG - Campus Formiga\" \n\n# verifica o tipo \ntypeof(instituicao)\n\n[1] \"character\""
  },
  {
    "objectID": "tutorials/R/index.html#tipo-logical",
    "href": "tutorials/R/index.html#tipo-logical",
    "title": "Introdução à Linguagem R",
    "section": "4.3 Tipo logical",
    "text": "4.3 Tipo logical\nO tipo logical representa valores booleanos (TRUE ou FALSE) e é fundamental para operações condicionais e filtragem de dados.\nEm contextos práticos de gestão e finanças, o tipo logical é utilizado para:\n\nVerificar condições financeiras (Ex: lucro positivo, meta atingida)\nFiltrar dados que atendem a critérios específicos\nAutomatizar decisões baseadas em regras de negócio\nSinalizar eventos importantes (Ex: inadimplência, quebra de estoque)\nImplementar validações em modelos de previsão\n\nOs valores TRUE e FALSE devem ser escritos em maiúsculas em R, e podem ser abreviados como T e F, respectivamente, embora a forma completa seja recomendada para maior clareza do código.\n\n# logical (lógico, TRUE/FALSE)\nlucro_positivo &lt;- TRUE  \nlucro_negativo &lt;- FALSE\n\n# verifica o tipo \ntypeof(lucro_positivo)\n\n[1] \"logical\"\n\ntypeof(lucro_negativo)\n\n[1] \"logical\""
  },
  {
    "objectID": "tutorials/R/index.html#tipo-especial-na",
    "href": "tutorials/R/index.html#tipo-especial-na",
    "title": "Introdução à Linguagem R",
    "section": "4.4 Tipo Especial NA",
    "text": "4.4 Tipo Especial NA\nO tipo especial NA (Not Available) é comum em análises de dados reais, onde frequentemente nos deparamos com informações ausentes. Em contextos de Administração e Finanças, dados faltantes podem representar:\n\nVendas não realizadas em determinados períodos\nInformações contábeis pendentes\nValores não reportados em demonstrações financeiras\nRespostas omitidas em pesquisas de mercado\nMétricas não aplicáveis a certos departamentos ou produtos\n\nIdentificar e tratar corretamente os valores NA é essencial para evitar conclusões tendenciosas. R oferece funções específicas como is.na() para detectar valores ausentes e métodos estatísticos para lidar com eles de forma apropriada.\n\n# Exemplo: Detectando valores ausentes em dados de vendas \nvendas_trimestrais &lt;- c(150000, 165000, NA, 180000)\nis.na(vendas_trimestrais) \n\n[1] FALSE FALSE  TRUE FALSE\n\n# calculando a média excluindo valores ausentes\nmean(vendas_trimestrais, na.rm = TRUE)\n\n[1] 165000\n\n\nO tratamento adequado de dados falantes é uma habilidade fundamental em Ciência de Dados."
  },
  {
    "objectID": "tutorials/R/index.html#tipo-especial-nan",
    "href": "tutorials/R/index.html#tipo-especial-nan",
    "title": "Introdução à Linguagem R",
    "section": "4.5 Tipo Especial NaN",
    "text": "4.5 Tipo Especial NaN\nO valor NaN (Not a Number) ocorre quando uma operação matemática produz um resultado indefinido. Em contextos de gestão e finanças, este tipo especial pode surgir em:\n\nCálculos de indicadores financeiros com divisores zero\nOperações matemáticas inválidas em modelos preditivos\nTransformações logarítmicas de valores negativos ou zero\nRaízes quadradas de números negativos em análises estatísticas\n\nEnquanto NA representa dados ausentes, NaN indica especificamente um resultado numérico indefinido. Diferenciá-los é importante para diagnóstico de problemas em cálculos complexos, como em modelos de precificação de ativos ou simulações financeiras.\nA função is.nan() permite identificar estes valores em conjuntos de dados:\n\n# Exemplo: Identificando resultados indefinidos em cálculos financeiros\nresultados &lt;- c(25, 0/0, 10)\nis.nan(resultados)  \n\n[1] FALSE  TRUE FALSE"
  },
  {
    "objectID": "tutorials/R/index.html#tipo-especial-inf",
    "href": "tutorials/R/index.html#tipo-especial-inf",
    "title": "Introdução à Linguagem R",
    "section": "4.6 Tipo Especial inf",
    "text": "4.6 Tipo Especial inf\nO valor especial Inf (e -Inf para infinito negativo) ocorre principalmente em divisões por zero e representa valores que excedem os limites computacionais. Em análises administrativas e financeiras, este tipo pode aparecer em:\n\nCálculos de taxas de crescimento a partir de valores base zero\nRazões financeiras com denominadores muito próximos a zero\nProjeções exponenciais sem restrições\nAnálises de retorno sobre investimento com investimentos mínimos\n\nDiferentemente de NA e NaN, valores Inf podem ser utilizados em operações aritméticas seguindo regras matemáticas de infinito:\n\n# Exemplo: Comportamento de infinito em operações\ninfinito_positivo &lt;- 1/0\ninfinito_positivo + 1000  # Continua sendo Inf\n\n[1] Inf\n\ninfinito_positivo / 2     # Continua sendo Inf\n\n[1] Inf\n\n\nIdentificar valores infinitos é importante, por exemplo, em modelos financeiros, pois podem indicar problemas estruturais nas fórmulas utilizadas ou divisões por zero que comprometem a validade das análises.\n\n\n\n\n\n\nSobre Conversão entre Tipos e Classes de Dados\n\n\n\n\nVocê pode estar se perguntando como converter um tipo ou classe de dados em outro(a) (por exemplo, transformar um texto em número ou vice-versa).\nEmbora R base ofereça funções como as.numeric(), as.character() e as.logical() para essas conversões, abordaremos este tópico mais adiante no tutorial, quando estudarmos a manipulação de dados com o pacote dplyr.\nEspecificamente, aprenderemos como usar as funções mutate() e transmute() para realizar conversões de tipos de maneira eficiente e legível em conjuntos de dados estruturados. Esta abordagem se alinha com as práticas modernas de ciência de dados e permite transformar múltiplas variáveis simultaneamente dentro de um fluxo de trabalho analítico coerente.\nPor enquanto, foque em compreender as características e comportamentos dos diferentes tipos de dados apresentados nesta seção, pois este conhecimento fundamentará toda sua jornada na análise de dados com R."
  },
  {
    "objectID": "tutorials/R/index.html#criando-vetores",
    "href": "tutorials/R/index.html#criando-vetores",
    "title": "Introdução à Linguagem R",
    "section": "5.1 Criando vetores",
    "text": "5.1 Criando vetores\nA função mais básica para criar vetores é c(), que significa “concatenar” ou “combinar”.\n\n# Vetor de retornos mensais (%)\nretornos &lt;- c(0.012, -0.005, 0.007, 0.013)\n\n# Sequência de inteiros de 1 a 4\ndias &lt;- 1:4                 \n\n# Sequência trimestral: 1, 4, 7, 10\nmeses &lt;- seq(1, 12, by = 3) \n\n# Vetor lógico repetido quatro vezes\nflags &lt;- rep(TRUE, 4)       \n\n\n\n\n\n\n\nSobre a função c()\n\n\n\nA função c() combina valores do mesmo tipo em um vetor.\n\nc(\"IFMG\", \"UFV\", \"USP\")      # vetor de textos\n\n[1] \"IFMG\" \"UFV\"  \"USP\" \n\nc(TRUE, FALSE, TRUE)         # vetor lógico\n\n[1]  TRUE FALSE  TRUE\n\nc(1.2, 2.5, 3.8)             # vetor numérico (double)\n\n[1] 1.2 2.5 3.8\n\n\nSe os elementos tiverem tipos diferentes, R fará coerção implícita para um tipo comum. Por exemplo:\n\nc(1, \"texto\", TRUE)  # Todos convertidos para texto (character)\n\n[1] \"1\"     \"texto\" \"TRUE\""
  },
  {
    "objectID": "tutorials/R/index.html#indexação-selecionando-elementos",
    "href": "tutorials/R/index.html#indexação-selecionando-elementos",
    "title": "Introdução à Linguagem R",
    "section": "5.2 Indexação: selecionando elementos",
    "text": "5.2 Indexação: selecionando elementos\nVetores são indexados com colchetes []. A indexação começa em 1 (não em zero, como em Python ou C).\n\n# Primeiro e último retorno\nretornos[1]                  \n\n[1] 0.012\n\nretornos[length(retornos)]   \n\n[1] 0.013\n\n# Excluindo o segundo elemento\nretornos[-2]                 \n\n[1] 0.012 0.007 0.013\n\n# Selecionando apenas valores positivos\nretornos[retornos &gt; 0]       \n\n[1] 0.012 0.007 0.013\n\n\n\n\n\n\n\n\nFiltro condicional em vetores\n\n\n\nExpressões como retornos &gt; 0 retornam um vetor lógico com TRUE/FALSE, que pode ser usado para filtrar elementos:\n\nretornos &gt; 0  # vetor lógico\n\n[1]  TRUE FALSE  TRUE  TRUE\n\nretornos[retornos &gt; 0]  # filtragem condicional\n\n[1] 0.012 0.007 0.013\n\n\nEste comportamento é fundamental para manipulação de dados no dplyr."
  },
  {
    "objectID": "tutorials/R/index.html#operações-vetorizadas-e-reciclagem",
    "href": "tutorials/R/index.html#operações-vetorizadas-e-reciclagem",
    "title": "Introdução à Linguagem R",
    "section": "5.3 Operações vetorizadas e reciclagem",
    "text": "5.3 Operações vetorizadas e reciclagem\nEm R, você pode aplicar operações matemáticas diretamente sobre vetores.\n\n# Aplicando desconto de IR (15%)\nret_liq &lt;- retornos * (1 - 0.15)  \n\n# Reciclagem de vetor: IR de 15% e 20% aplicados alternadamente\ntaxas &lt;- c(0.15, 0.20)\nret_liq2 &lt;- retornos * (1 - taxas)  \n\n\n\n\n\n\n\nCuidado com a reciclagem automática\n\n\n\nSe os vetores tiverem comprimentos incompatíveis, R ainda assim executará a operação com uma mensagem de aviso, podendo gerar resultados incorretos.\n\nc(1, 2, 3) + c(10, 20)  # comprimento 3 e 2 =&gt; erro sutil\n\n[1] 11 22 13"
  },
  {
    "objectID": "tutorials/R/index.html#testando-tipos-e-classes",
    "href": "tutorials/R/index.html#testando-tipos-e-classes",
    "title": "Introdução à Linguagem R",
    "section": "5.4 Testando tipos e classes",
    "text": "5.4 Testando tipos e classes\nVetores devem ter elementos do mesmo tipo, mas podemos verificar isso com:\n\n# Verifica o tipo atômico (typeof) e a classe do objeto\ntypeof(retornos)  # double\n\n[1] \"double\"\n\nclass(retornos)   # numeric\n\n[1] \"numeric\""
  },
  {
    "objectID": "tutorials/R/index.html#comprimento-dos-vetores",
    "href": "tutorials/R/index.html#comprimento-dos-vetores",
    "title": "Introdução à Linguagem R",
    "section": "5.5 Comprimento dos vetores",
    "text": "5.5 Comprimento dos vetores\nUse length() para saber quantos elementos um vetor possui:\n\nlength(retornos)\n\n[1] 4"
  },
  {
    "objectID": "tutorials/R/index.html#vetores-de-texto-character-e-lógicos",
    "href": "tutorials/R/index.html#vetores-de-texto-character-e-lógicos",
    "title": "Introdução à Linguagem R",
    "section": "5.6 Vetores de texto (character) e lógicos",
    "text": "5.6 Vetores de texto (character) e lógicos\n\n# Vetor de nomes de empresas\nempresas &lt;- c(\"Empresa A\", \"Empresa B\", \"Empresa C\")\n\n# Vetor lógico: metas atingidas?\nmetas_atingidas &lt;- c(TRUE, TRUE, FALSE)\n\n# Combinação com `cat()`\ncat(\"Metas atingidas:\", metas_atingidas, \"\\n\")\n\nMetas atingidas: TRUE TRUE FALSE"
  },
  {
    "objectID": "tutorials/R/index.html#boas-práticas-com-vetores",
    "href": "tutorials/R/index.html#boas-práticas-com-vetores",
    "title": "Introdução à Linguagem R",
    "section": "5.7 Boas práticas com vetores",
    "text": "5.7 Boas práticas com vetores\n\nPrefira vetores homogêneos e bem nomeados\nUse typeof() para detectar coerções indesejadas\nEvite misturar tipos dentro de c() sem intenção\n\n\n\n\n\n\n\nPróximos passos\n\n\n\nVetores são a espinha dorsal de todas as estruturas de dados em R. Compreender seu comportamento é essencial para trabalhar com tabelas (data.frames, tibbles), realizar filtros, aplicar transformações e construir visualizações.\nNa próxima seção, vamos abordar os data frames e tibbles, que correspondem às tabelas que usamos no dia a dia — mas com todo o poder do R por trás."
  },
  {
    "objectID": "tutorials/R/index.html#criando-uma-data-frame-simples",
    "href": "tutorials/R/index.html#criando-uma-data-frame-simples",
    "title": "Introdução à Linguagem R",
    "section": "6.1 Criando uma data frame simples",
    "text": "6.1 Criando uma data frame simples\n\n# Dados hipotéticos de empresas\nempresa  &lt;- c(\"A\", \"B\", \"C\")\nreceita  &lt;- c(3.5, 5.2, 4.1)     # em R$ milhões\nmetas    &lt;- c(TRUE, TRUE, FALSE)\n\nemp_df &lt;- data.frame(empresa, receita, metas)\n\n\n# Visualizando o data frame\nemp_df\n\n  empresa receita metas\n1       A     3.5  TRUE\n2       B     5.2  TRUE\n3       C     4.1 FALSE\n\n\n\n\n\n\n\n\nEstrutura interna\n\n\n\nCada coluna de um data.frame é um vetor, e todos os vetores devem ter o mesmo comprimento. As colunas podem ter tipos diferentes, mas devem ser homogêneas internamente."
  },
  {
    "objectID": "tutorials/R/index.html#convertendo-para-tibble",
    "href": "tutorials/R/index.html#convertendo-para-tibble",
    "title": "Introdução à Linguagem R",
    "section": "6.2 Convertendo para tibble",
    "text": "6.2 Convertendo para tibble\n\nlibrary(tibble)\n\nemp_tb &lt;- as_tibble(emp_df)\nemp_tb\n\n# A tibble: 3 × 3\n  empresa receita metas\n  &lt;chr&gt;     &lt;dbl&gt; &lt;lgl&gt;\n1 A           3.5 TRUE \n2 B           5.2 TRUE \n3 C           4.1 FALSE\n\n\n\n\n\n\n\n\nPor que usar tibbles?\n\n\n\n\nExibição inteligente: Mostra apenas as primeiras linhas e colunas.\nEvita conversões automáticas perigosas (como stringsAsFactors).\nIntegra-se perfeitamente ao tidyverse (dplyr, ggplot2, tidyr).\nMais leve para trabalhar com dados grandes ou listas aninhadas."
  },
  {
    "objectID": "tutorials/R/index.html#inspeção-da-estrutura",
    "href": "tutorials/R/index.html#inspeção-da-estrutura",
    "title": "Introdução à Linguagem R",
    "section": "6.3 Inspeção da estrutura",
    "text": "6.3 Inspeção da estrutura\n\n# visão detalhada da tibble\nstr(emp_tb)\n\ntibble [3 × 3] (S3: tbl_df/tbl/data.frame)\n $ empresa: chr [1:3] \"A\" \"B\" \"C\"\n $ receita: num [1:3] 3.5 5.2 4.1\n $ metas  : logi [1:3] TRUE TRUE FALSE\n\n# visão geral da tibble\nglimpse(emp_tb)    \n\nRows: 3\nColumns: 3\n$ empresa &lt;chr&gt; \"A\", \"B\", \"C\"\n$ receita &lt;dbl&gt; 3.5, 5.2, 4.1\n$ metas   &lt;lgl&gt; TRUE, TRUE, FALSE\n\n# resumo estatístico das colunas numéricas\nsummary(emp_tb)    \n\n   empresa             receita        metas        \n Length:3           Min.   :3.500   Mode :logical  \n Class :character   1st Qu.:3.800   FALSE:1        \n Mode  :character   Median :4.100   TRUE :2        \n                    Mean   :4.267                  \n                    3rd Qu.:4.650                  \n                    Max.   :5.200"
  },
  {
    "objectID": "tutorials/R/index.html#nomes-e-tipos-das-colunas",
    "href": "tutorials/R/index.html#nomes-e-tipos-das-colunas",
    "title": "Introdução à Linguagem R",
    "section": "6.4 Nomes e tipos das colunas",
    "text": "6.4 Nomes e tipos das colunas\n\n# nomes das colunas\nnames(emp_tb)     \n\n[1] \"empresa\" \"receita\" \"metas\"  \n\n# classe de cada coluna\nsapply(emp_tb, class) \n\n    empresa     receita       metas \n\"character\"   \"numeric\"   \"logical\""
  },
  {
    "objectID": "tutorials/R/index.html#acessando-colunas",
    "href": "tutorials/R/index.html#acessando-colunas",
    "title": "Introdução à Linguagem R",
    "section": "6.5 Acessando colunas",
    "text": "6.5 Acessando colunas\n\n# usando o operador $\nemp_tb$receita         \n\n[1] 3.5 5.2 4.1"
  },
  {
    "objectID": "tutorials/R/index.html#exemplo-com-dados-financeiros-reais",
    "href": "tutorials/R/index.html#exemplo-com-dados-financeiros-reais",
    "title": "Introdução à Linguagem R",
    "section": "6.6 Exemplo com dados financeiros reais",
    "text": "6.6 Exemplo com dados financeiros reais\nVamos utilizar o pacote PerformanceAnalytics, amplamente usado em finanças, para ilustrar o uso de tibbles com séries temporais reais.\n\nlibrary(PerformanceAnalytics) # para obter a df `managers`\nlibrary(tidyverse)  # carrega dplyr, tidyr, ggplot2, tibble etc.\n\n# Carrega os dados de performance de carteiras\ndata(managers, package = \"PerformanceAnalytics\")  \n\n# Converte objeto xts -&gt; tibble, salvando datas na coluna \"date\"\nmanagers_tb &lt;- as_tibble(managers, rownames = \"date\")\n\n# Visão geral da tibble\nglimpse(managers_tb)\n\nRows: 132\nColumns: 11\n$ date          &lt;chr&gt; \"1996-01-31\", \"1996-02-29\", \"1996-03-31\", \"1996-04-30\", …\n$ HAM1          &lt;dbl&gt; 0.0074, 0.0193, 0.0155, -0.0091, 0.0076, -0.0039, -0.023…\n$ HAM2          &lt;dbl&gt; NA, NA, NA, NA, NA, NA, NA, -0.0001, 0.1002, 0.0338, 0.0…\n$ HAM3          &lt;dbl&gt; 0.0349, 0.0351, 0.0258, 0.0449, 0.0353, -0.0303, -0.0337…\n$ HAM4          &lt;dbl&gt; 0.0222, 0.0195, -0.0098, 0.0236, 0.0028, -0.0019, -0.044…\n$ HAM5          &lt;dbl&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, …\n$ HAM6          &lt;dbl&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, …\n$ `EDHEC LS EQ` &lt;dbl&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, 0.0281, …\n$ `SP500 TR`    &lt;dbl&gt; 0.0340, 0.0093, 0.0096, 0.0147, 0.0258, 0.0038, -0.0442,…\n$ `US 10Y TR`   &lt;dbl&gt; 0.00380, -0.03532, -0.01057, -0.01739, -0.00543, 0.01507…\n$ `US 3m TR`    &lt;dbl&gt; 0.00456, 0.00398, 0.00371, 0.00428, 0.00443, 0.00412, 0.…\n\n\n\n\n\n\n\n\nO que aprendemos aqui?\n\n\n\n\nO objeto managers_tb contém retornos mensais de carteiras e benchmarks.\nAs colunas contêm séries de retornos como ManagerA, SP500, Russell2000, etc.\nA coluna date foi criada a partir dos nomes das linhas do objeto original xts."
  },
  {
    "objectID": "tutorials/R/index.html#verificando-tipos-e-valores-ausentes",
    "href": "tutorials/R/index.html#verificando-tipos-e-valores-ausentes",
    "title": "Introdução à Linguagem R",
    "section": "6.7 Verificando tipos e valores ausentes",
    "text": "6.7 Verificando tipos e valores ausentes\n\n# Verificando tipos atômicos e classes\nsapply(managers_tb, typeof)     \n\n       date        HAM1        HAM2        HAM3        HAM4        HAM5 \n\"character\"    \"double\"    \"double\"    \"double\"    \"double\"    \"double\" \n       HAM6 EDHEC LS EQ    SP500 TR   US 10Y TR    US 3m TR \n   \"double\"    \"double\"    \"double\"    \"double\"    \"double\" \n\n# Verifica a presença dados faltantes\ncolSums(is.na(managers_tb))     \n\n       date        HAM1        HAM2        HAM3        HAM4        HAM5 \n          0           0           7           0           0          55 \n       HAM6 EDHEC LS EQ    SP500 TR   US 10Y TR    US 3m TR \n         68          12           0           0           0 \n\n\n\n\n\n\n\n\nImportância de entender a estrutura\n\n\n\nAntes de aplicar qualquer modelo econométrico ou visualização, é essencial garantir que os dados estão em um formato apropriado:\n\nVerificar tipos (character, numeric, logical)\nDetectar valores ausentes (NA)\nGarantir que as colunas estejam nomeadas corretamente\n\n\n\n\n\n\n\n\n\nTrabalhar com dados reais\n\n\n\n\nOs dados do PerformanceAnalytics são amplamente utilizados para análise de performance de carteiras, avaliação de risco, regressões CAPM e outros modelos em finanças quantitativas.\nUtilizaremos este conjunto como base para as próximas seções: tidyverse, visualização e modelagem.\n\n\n\n\n\n\n\n\n\nPróximos passos\n\n\n\nAgora que sabemos como criar, inspecionar e acessar data frames e tibbles, estamos prontos para trabalhar com os pacotes do tidyverse, que permitem manipular e transformar dados de forma elegante, eficiente e auditável."
  },
  {
    "objectID": "tutorials/R/index.html#dados-organizados",
    "href": "tutorials/R/index.html#dados-organizados",
    "title": "Introdução à Linguagem R",
    "section": "7.1 Dados Organizados",
    "text": "7.1 Dados Organizados\n\nO conceito de Tidy Data (Dados Organizados) foi formalizado por Hadley Wickham.\nUm arquivo de dados organizado possui a seguinte estrutura:\n\nCada linha representa uma observação individual\nCada coluna representa uma variável específica\nCada célula contém um valor de uma variável para uma observação específica\n\nA Figura 1 ilustra o conceito de dados organizados visualmente.\n\n\n\n\n\n\n\nFig. 1: Dados Organizados\n\n\n\n\n\n\n\n\n\nBenefícios de Dados Organizados\n\n\n\n\nAdequação para Ferramentas: Formato de armazenamento de dados adequado para análise em linguagens (R/Python) e softwares de análise de dados.\nConsistência: Estrutura uniforme para todos os conjuntos de dados\nFacilidade para operações comuns:\n\nFiltragem de observações\nSeleção de variáveis\nCriação de novas variáveis\nAgregação de dados\nJunção de múltiplas tabelas\n\n\n\n\n\n\n\n\n\n\nDados Financeiros Desorganizados Típicos\n\n\n\nColunas contendo valores: Nomes de colunas contendo valores de uma ou mais variáveis.\n\nEx: Colunas nomeadas com anos (2020, 2021, 2022)\n\n| Empresa   | 2020    | 2021    | 2022    |\n|-----------|---------|---------|---------|\n| Empresa A | 350.000 | 425.000 | 510.000 |\n| Empresa B | 780.000 | 815.000 | 840.000 |\n| Empresa C | 540.000 | 490.000 | 620.000 |\n\n\n\n\n\n\n\n\nVersão Organizada dos Dados Anteriores:\n\n\n\n| Empresa   | Ano  | Valor   |\n|-----------|------|---------|\n| Empresa A | 2020 | 350.000 |\n| Empresa A | 2021 | 425.000 |\n| Empresa A | 2022 | 510.000 |\n| Empresa B | 2020 | 780.000 |\n| Empresa B | 2021 | 815.000 |\n| Empresa B | 2022 | 840.000 |\n| Empresa C | 2020 | 540.000 |\n| Empresa C | 2021 | 490.000 |\n| Empresa C | 2022 | 620.000 |\nCaracterísticas:\n\nCada variável está em uma coluna separada\nCada observação está em uma linha\nCada célula contém um valor único\n\n\n\n\n\n\n\n\n\nTipos de “Desorganização” Comuns em Administração\n\n\n\nMúltiplas variáveis em uma coluna: Uma coluna contendo mais de uma variável\n\nEx: “Nome_Empresa (Ano)” combinando empresa e ano\n\n| Nome_Empresa (Ano) | Receita       | Despesa       |\n|--------------------|---------------|---------------|\n| Empresa A (2020)   | R$ 350.000,00 | R$ 290.000,00 |\n| Empresa A (2021)   | R$ 425.000,00 | R$ 320.000,00 |\n| Empresa B (2020)   | R$ 780.000,00 | R$ 710.000,00 |\n| Empresa B (2021)   | R$ 815.000,00 | R$ 735.000,00 |\n\nNão se deve usar unidades (R$ no caso) em arquivos para armazenamento de dados para análise.\n\n\n\n\n\n\n\n\n\nVersão Organizada dos Dados:\n\n\n\n| Empresa    | Ano  | Receita  | Despesa  |\n|------------|------|----------|----------|\n| Empresa A  | 2020 | 350000   | 290000   |\n| Empresa A  | 2021 | 425000   | 320000   |\n| Empresa B  | 2020 | 780000   | 710000   |\n| Empresa B  | 2021 | 815000   | 735000   |\n\n\n\n\n\n\n\n\nMúltiplas variáveis em uma coluna:\n\n\n\n\nOs números referem-se ao lucro líquido trimestral das empresas em milhões de reais:\n\n| Empresa    | T1 2023 | T2 2023 | T3 2023 | T4 2023 |\n|------------|---------|---------|---------|---------|\n| TechSoft   | 25.3    | 31.7    | 28.4    | 35.2    |\n| VarejoMax  | 12.8    | 15.4    | 19.3    | 22.7    |\n| FinGroup   | 41.6    | 38.9    | 45.2    | 51.8    |\n\nProblemas:\n\nValores de uma variável (trimestre) estão nas colunas\nNão segue o princípio “uma coluna, uma variável”\nDificulta análises temporais e comparativas\n\n\n\n\n\n\n\n\n\n\nVersão Organizada dos Dados:\n\n\n\n| Empresa   | Trimestre | Ano  | Lucro_Liquido |\n|-----------|-----------|------|---------------|\n| TechSoft  | T1        | 2023 | 25.3          |\n| TechSoft  | T2        | 2023 | 31.7          |\n| TechSoft  | T3        | 2023 | 28.4          |\n| TechSoft  | T4        | 2023 | 35.2          |\n| VarejoMax | T1        | 2023 | 12.8          |\n| VarejoMax | T2        | 2023 | 15.4          |\n| VarejoMax | T3        | 2023 | 19.3          |\n| VarejoMax | T4        | 2023 | 22.7          |\n| FinGroup  | T1        | 2023 | 41.6          |\n| FinGroup  | T2        | 2023 | 38.9          |\n| FinGroup  | T3        | 2023 | 45.2          |\n| FinGroup  | T4        | 2023 | 51.8          |\n\n\n\n\n\n\n\n\nTipos de “Desorganização” Comuns em Administração\n\n\n\nVariáveis em linhas e colunas\n\nEx: Planilha de desempenho onde ROE aparece como coluna, mas Lucro Líquido e outras variáveis aparecem nas linhas\n\n| Empresa            | ROE (%)       | Liquidez Corrente |\n|--------------------|---------------|-------------------|\n| Empresa XYZ        | 15,2          | 1,8               |\n| Lucro Líquido      | R$ 2.500.000  | -                 |\n| Patrimônio Líquido | R$ 16.400.000 | -                 |\n| Ativo Circulante   | -             | R$ 3.600.000      |\n| Passivo Circulante | -             | R$ 2.000.000      |\n\n\n\n\n\n\n\n\nVersão Organizada dos Dados:\n\n\n\n| Empresa    | Indicador           | Valor       |\n|------------|---------------------|-------------|\n| Empresa XYZ| ROE                 | 0.152       |\n| Empresa XYZ| Liquidez Corrente   | 1.8         |\n| Empresa XYZ| Lucro Líquido       | 2500000     |\n| Empresa XYZ| Patrimônio Líquido  | 16400000    |\n| Empresa XYZ| Ativo Circulante    | 3600000     |\n| Empresa XYZ| Passivo Circulante  | 2000000     |\n\n\n\n\n\n\n\n\nPor que a absoluta maioria dos arquivos de dados são desorganizados?\n\n\n\n\nPor que a maioria das pessoas que trabalham na área de negócios não está familiarizada com os princípios da organização de dados para análise e utilizam planilhas eletrônicas para trabalhar com dados.\nPlanilhas de dados são frequentemente organizadas pensando em apresentar os dados ou para tornar a entrada de dados mais simples, não em um formato adequado para armazenamento e análise.\nIsso significa que, para a maioria das análises reais, cientistas e analistas de dados dispendem muito tempo e esforço organizando e preparando dados elaborados por terceiros.\nA primeira etapa é sempre descobrir quais são as observações e as variáveis associadas a cada observação.\n\n\n\n\n\n\n\n\n\nBenefícios para Dissertações e Artigos Científicos\n\n\n\nDados organizados viabilizam e facilitam a:\n\nReprodutibilidade: Formato padronizado que outros pesquisadores podem entender e utilizar\nVisualizações avançadas: Estrutura ideal para a criação de diversos tipos de tabelas e gráficos.\nAnálise econométrica: Adequação imediata para estudos e modelos econométricos em (regressão linear, painel, logit, probit etc.)"
  },
  {
    "objectID": "tutorials/R/index.html#planilhas-eletrônicas",
    "href": "tutorials/R/index.html#planilhas-eletrônicas",
    "title": "Introdução à Linguagem R",
    "section": "7.2 Planilhas Eletrônicas",
    "text": "7.2 Planilhas Eletrônicas\n\n\n\n\n\n\nBroman e Woo (2018): Riscos para Armazenamento de Dados\n\n\n\n\nPlanilhas eletrônicas têm alto risco de erros: Em 13 auditorias de planilhas reais, uma média de 88% continham erros (Broman e Woo, 2018).\nProblemas comuns incluem:\n\nConversão automática de formatos (ex: nomes de genes interpretados como datas)\nArmazenamento de datas de forma diferente entre sistemas operacionais\nCálculos incorporados que podem corromper dados originais\nA mistura de análise, visualização e armazenamento no mesmo arquivo aumenta o risco de comprometer os dados brutos e os resultados.\n\nMas dada a ubiquidade de planilhas nas organizações, caso precise usar planilhas para armazenar dados, siga as seguintes boas práticas:\n\n\n\n\n\n\n\n\n\nRecomendações práticas para organizar dados em planilhas.\n\n\n\n\nArtigo de Broman e Woo (2018)\nCrie planilhas organizadas (uma linha = uma observação, uma coluna = uma variável, uma célula = um valor)\nSeja consistente e escolha bons nomes para as variáveis:\n\nuse snake_case ou CamelCase\nLucro Líquido (R$) 😱\nlucro_liquido ou LucroLiquido 😃\nNUNCA use acentos, caracteres especiais e espaços vaziso para nomes ou valores.\n\nEscreva datas conforme a Norma ISO 8601:\n\nYYYY-MM-DD, exemplo: 2025-05-07\n\nSem células vazias: use hífen (-) e no caso de usar R, use NA\nCrie um dicionário dos dados\nNUNCA faça cálculos na planilha dos dados originais/brutos\nNUNCA use unidades de medida (R$), cor ou realce como um dado.\n\nR$ 50.000,00 😱\n50000 😃\n10 % 😱\nO.1 😃\n\nFaça backups\nUse validação dos dados para evitar erros\nSalve os dados em arquivos de texto simples (.csv):\n\ntodas as linguagens (R/Python) e softwares de análises de dados reconhecem facilmente esse formato.\n\n\n\n\n\n\n\n\n\n\nPacote tidyr\n\n\n\nNa próxima seção, vamos aprender sobre como o pacote tidyr do tidyverse pode ser usado para tornar alguns tipos de dados desorganizados em dados organizados para análise."
  },
  {
    "objectID": "tutorials/R/index.html#introdução-ao-pacote-tidyr",
    "href": "tutorials/R/index.html#introdução-ao-pacote-tidyr",
    "title": "Introdução à Linguagem R",
    "section": "7.3 Introdução ao Pacote tidyr",
    "text": "7.3 Introdução ao Pacote tidyr\n\n\n\n\n\n\n\n\n\n\n\nO pacote tidyr no ecossistema tidyverse\n\n\n\n\nO tidyr é um pacote do tidyverse para organizar dados desorganizados\nSeu nome vem de “tidy” (organizado) + “r” (R)\nFoi criado para facilitar a transformação de dados desorganizados em dados organizados (tidy data) para análise\nÉ muito útil para a preparação de dados na fase 3 do CRISP-DM (Preparação dos Dados)\nPermite que dados em formatos comuns de planilhas e relatórios sejam transformados em formatos adequados para análise e visualização\n\n\n\n\n\n\n\n\n\nA Principal função do pacote tidyr para nós\n\n\n\n\npivot_longer(): Converte dados do formato amplo (onde valores de uma ou mais variáveis são espalhadas por colunas) em um formato longo (onde cada variável está em uma única coluna).\n\nÚtil quando você precisa de de dados para análise ou visualização\nEx: Transformar colunas de trimestres (Q1, Q2, Q3, Q4) em uma única coluna “trimestre”\n\nIremos estudar somente a função pivot_longer(), porque o foco deste módulo é a preparação de dados para análise.\nMas há diversas outras funções úteis para a organização de dados:\n\n\n\n\n7.3.1 Quando usar o tidyr?\n\n\n\n\n\n\nSituações comuns em Administração\n\n\n\n\nQuando você tem planilhas financeiras com colunas para diferentes períodos (meses, trimestres, anos)\nQuando você recebe planilhas Excel organizadas para visualização humana, mas não para análise de dados.\nQuando precisa combinar dados de diferentes fontes que estão em formatos incompatíveis.\nQuando precisa preparar dados para visualizações específicas com ggplot2 (gráficos de linhas, facetas, etc.)\nQuando realiza análises temporais e precisa converter entre formatos de data/hora.\n\n\n\n\n\n7.3.2 A Função tidyr::pivot_longer\n\n\n\n\n\n\nAo final desta seção, você será capaz de:\n\n\n\n\nAplicar a função pivot_longer() com seus parâmetros essenciais: cols, names_to e values_to\nOrganizar/Transformar dados complexos extraindo múltiplas informações de colunas\nIntegrar pivot_longer() em pipelines de análise com dplyr\nImplementar soluções para casos reais de análise de dados administrativos\n\n\n\n\n\n\n\n\n\nTransformando dados de formato amplo para longo\n\n\n\n\nA função pivot_longer() converte dados do formato amplo (wide) para o formato longo (long)\nÉ muito útil quando as colunas contêm valores em vez de variáveis\nGeralmente, é o primeiro passo para transformar planilhas de negócios em dados organizados para análise (tidy data)\nA Figura 2 ilustra o uso desta função\n\n\n\n\n\n\n\n\n\nFig. 2: Aplicando a função pivot_longer()\n\n\n\n\n\n7.3.3 Sintaxe da função pivot_longer()\n\n\n\n\n\n\nComo usar pivot_longer() na prática\n\n\n\n\n# Formato básico\ndados %&gt;%\n  pivot_longer(\n    cols = \"valores_de_uma_nova_coluna\",\n    names_to = \"nome_nova_coluna\",\n    values_to = \"nome_outra_nova_coluna\"\n  )\n\n\nvalores_de_uma_nova_coluna: as colunas que contêm valores de uma variável e serão transformadas.\nnome_nova_coluna: nome da nova coluna/variável que conterá os nomes das colunas originais.\nnome_outra_nova_coluna: nome da nova coluna/variável que conterá os valores originais.\n\n\n\n\n\n7.3.4 Função pivot_longer\n\n\n\n\n\n\nDescrição\n\n\n\n\n\n\n\n\n\n\nCaracterística\npivot_longer()\n\n\n\n\nTransforma\nColunas → Linhas\n\n\nFormato resultante\nLongo (mais linhas)\n\n\nQuando usar\nPara análise e visualização\n\n\nExemplo típico\nTransformar colunas de anos em uma variável “ano”\n\n\n\n\n\n\n\n7.3.5 A Função tribble()\n\n\n\n\n\n\nDescrição\n\n\n\nA função tribble() (abreviação de “transposed tibble”) é uma forma elegante de criar pequenas tibbles/data frames para exemplos ou testes:\n\n# Criando uma data frame com tribble() - \"tibble transposta\"\nprodutos &lt;- tribble(\n  ~codigo, ~produto, ~preco, # Nomes das colunas começam com ~\n  \"A123\", \"Notebook\", 3500, # Cada linha é um registro\n  \"B456\", \"Smartphone\", 1800, # Os valores são separados por vírgulas\n  \"C789\", \"Monitor\", 950 # A formatação facilita a leitura\n)\n\n# Visualizando a data frame criada\nprodutos\n\n# A tibble: 3 × 3\n  codigo produto    preco\n  &lt;chr&gt;  &lt;chr&gt;      &lt;dbl&gt;\n1 A123   Notebook    3500\n2 B456   Smartphone  1800\n3 C789   Monitor      950\n\n\nVantagens da função tribble():\n\nLayout Visual: Cada linha do código corresponde a uma linha da data frame, tornando o código mais legível\nEspecificação direta: Os nomes das colunas são definidos com ~ (til)\nFlexibilidade de tipos: Cada coluna pode conter diferentes tipos de dados\nIdeal para exemplos: Perfeita para criar pequenas data frames para demonstrações ou testes.\n\nEsta função faz parte do pacote tibble, que é carregado automaticamente quando você carrega o tidyverse.\n\n\n\n\n7.3.6 Exemplo Básico de pivot_longer()\n\n\n\n\n\n\nDados de receita trimestral (formato amplo/wide)\n\n\n\n\n# Criando a data frame de exemplo\nreceitas &lt;- tribble(\n  ~produto, ~T1, ~T2, ~T3, ~T4,\n  \"Produto A\", 50000, 55000, 60000, 65000,\n  \"Produto B\", 30000, 32000, 35000, 37000,\n  \"Produto C\", 20000, 22000, 25000, 27000\n)\n\n# Visualizando a data frame original (formato amplo/wide)\nreceitas\n\n# A tibble: 3 × 5\n  produto      T1    T2    T3    T4\n  &lt;chr&gt;     &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;\n1 Produto A 50000 55000 60000 65000\n2 Produto B 30000 32000 35000 37000\n3 Produto C 20000 22000 25000 27000\n\n\nEste formato é para apresentação, não para armazenamento e análise.\n\n\n\n\n\n\n\n\nTransformando para o formato longo\n\n\n\n\n# Transformando para o formato longo usando pivot_longer\nreceitas_longas &lt;- receitas %&gt;%\n  pivot_longer(\n    cols = c(\"T1\", \"T2\", \"T3\", \"T4\"), # colunas que serão valores da nova coluna\n    names_to = \"trimestre\", # nome da nova coluna\n    values_to = \"receita\" # nome de outra nova coluna\n  )\n\n# Visualizando o resultado (formato longo/long)\nreceitas_longas\n\n# A tibble: 12 × 3\n   produto   trimestre receita\n   &lt;chr&gt;     &lt;chr&gt;       &lt;dbl&gt;\n 1 Produto A T1          50000\n 2 Produto A T2          55000\n 3 Produto A T3          60000\n 4 Produto A T4          65000\n 5 Produto B T1          30000\n 6 Produto B T2          32000\n 7 Produto B T3          35000\n 8 Produto B T4          37000\n 9 Produto C T1          20000\n10 Produto C T2          22000\n11 Produto C T3          25000\n12 Produto C T4          27000\n\n\nAgora os dados estão organizados:\n\nCada linha é uma observação (um produto em um trimestre)\nCada coluna é uma variável (produto, trimestre, receita)\nCada célula contém um único valor\n\n\n\n\n\n7.3.7 Exemplo Intermediário: Várias Colunas\n\n\n\n\n\n\nDados de desempenho financeiro\n\n\n\n\n# Criando a data frame com múltiplas métricas por trimestre\ndesempenho &lt;- tribble(\n  ~empresa, ~receita_T1, ~receita_T2, ~despesa_T1, ~despesa_T2,\n  \"Empresa A\", 150000, 175000, 120000, 130000,\n  \"Empresa B\", 250000, 270000, 200000, 220000,\n  \"Empresa C\", 100000, 115000, 80000, 95000\n)\n\n# Visualizando a data frame original\ndesempenho\n\n# A tibble: 3 × 5\n  empresa   receita_T1 receita_T2 despesa_T1 despesa_T2\n  &lt;chr&gt;          &lt;dbl&gt;      &lt;dbl&gt;      &lt;dbl&gt;      &lt;dbl&gt;\n1 Empresa A     150000     175000     120000     130000\n2 Empresa B     250000     270000     200000     220000\n3 Empresa C     100000     115000      80000      95000\n\n\nEste formato é ainda mais desorganizado, pois mistura três variáveis (receita, despesa e trimestre) nos nomes das colunas.\n\n\n\n\n\n\n\n\nTransformando para o formato longo com dois níveis\n\n\n\n\n# Transformando para o formato longo usando pivot_longer com nomes separados\ndesempenho_longo &lt;- desempenho %&gt;%\n  pivot_longer(\n    cols = -empresa, # todas as colunas exceto \"empresa\"\n    names_to = c(\"indicador\", \"trimestre\"), # nomes das duas novas colunas\n    names_sep = \"_\", # separador nos nomes das colunas\n    values_to = \"valor\" # nome de nova coluna para receber os valores\n  )\n\n# Visualizando o resultado\ndesempenho_longo\n\n# A tibble: 12 × 4\n   empresa   indicador trimestre  valor\n   &lt;chr&gt;     &lt;chr&gt;     &lt;chr&gt;      &lt;dbl&gt;\n 1 Empresa A receita   T1        150000\n 2 Empresa A receita   T2        175000\n 3 Empresa A despesa   T1        120000\n 4 Empresa A despesa   T2        130000\n 5 Empresa B receita   T1        250000\n 6 Empresa B receita   T2        270000\n 7 Empresa B despesa   T1        200000\n 8 Empresa B despesa   T2        220000\n 9 Empresa C receita   T1        100000\n10 Empresa C receita   T2        115000\n11 Empresa C despesa   T1         80000\n12 Empresa C despesa   T2         95000\n\n\nObservação importante:\n\nOs nomes das colunas originais (receita_T1, receita_T2, etc.) são divididos pelo separador “_” em exatamente duas partes.\nA primeira parte (“receita” ou “despesa”) vai para a coluna “indicador” e a segunda parte (“T1” ou “T2”) vai para a coluna “trimestre”.\nEste é um padrão comum em dados financeiros: quando os nomes de colunas seguem um formato consistente com separadores, podemos extrair as informações contidas neles para criar novas variáveis.\n\n\n\n\n\n7.3.8 Exemplo Avançado\n\n\n\n\n\n\nIndicadores financeiros por trimestre\n\n\n\n\n# Exemplo mais gerenciável para slides\nreceita_trimestral &lt;- tribble(\n  ~empresa, ~`2022_T1_Receita`, ~`2022_T2_Receita`, ~`2023_T1_Receita`, ~`2023_T2_Receita`,\n  \"ABC Ltda\", 1200000, 1350000, 1500000, 1620000,\n  \"XYZ S.A.\", 2500000, 2700000, 2900000, 3100000\n)\n\n# Visualizando a data frame original\nreceita_trimestral\n\n# A tibble: 2 × 5\n  empresa  `2022_T1_Receita` `2022_T2_Receita` `2023_T1_Receita`\n  &lt;chr&gt;                &lt;dbl&gt;             &lt;dbl&gt;             &lt;dbl&gt;\n1 ABC Ltda           1200000           1350000           1500000\n2 XYZ S.A.           2500000           2700000           2900000\n# ℹ 1 more variable: `2023_T2_Receita` &lt;dbl&gt;\n\n\n\nTemos informações de ano e trimestre nos nomes das colunas\n\n\n\n\n\n\n\n\n\nOrganizando dados financeiros complexos\n\n\n\n\n# Transformando para o formato longo usando pivot_longer com três níveis\nreceita_trimestral_organizada &lt;- receita_trimestral %&gt;%\n  pivot_longer(\n    cols = -empresa, # todas as colunas exceto \"empresa\"\n    names_to = c(\"ano\", \"trimestre\"), # nomes de duas novas colunas\n    names_sep = \"_\", # separador nos nomes das colunas\n    values_to = \"receita\" # nome de nova coluna para receber os valores da receita\n  )\n\n# Visualizando o resultado\nreceita_trimestral_organizada\n\n# A tibble: 8 × 4\n  empresa  ano   trimestre receita\n  &lt;chr&gt;    &lt;chr&gt; &lt;chr&gt;       &lt;dbl&gt;\n1 ABC Ltda 2022  T1        1200000\n2 ABC Ltda 2022  T2        1350000\n3 ABC Ltda 2023  T1        1500000\n4 ABC Ltda 2023  T2        1620000\n5 XYZ S.A. 2022  T1        2500000\n6 XYZ S.A. 2022  T2        2700000\n7 XYZ S.A. 2023  T1        2900000\n8 XYZ S.A. 2023  T2        3100000\n\n\n\n\n\n\n7.3.9 Resumo: Função pivot_longer()\n\n\n\n\n\n\nO que você precisa lembrar\n\n\n\n\nFinalidade: Transformar dados do formato amplo (wide) para o formato longo (long), organizando-os conforme o princípio tidy data\nSintaxe básica:\n\n\ndados %&gt;%\n  pivot_longer(\n    cols = colunas_a_transformar,\n    names_to = \"nome_nova_coluna_para_nomes\",\n    values_to = \"nome_nova_coluna_para_valores\"\n  )\n\n\nParâmetros principais:\n\n\ncols: Quais colunas serão transformadas em pares nome-valor\nnames_to: Nome da nova coluna que receberá os nomes das colunas originais\nvalues_to: Nome da nova coluna que receberá os valores\n\n 4. Caso avançado:\n\nQuando os nomes de colunas contêm múltiplas informações, use:\n\nnames_to = c(\"variavel1\", \"variavel2\", ...)\nnames_sep = \"_\" (ou outro separador presente nos nomes)\n\n\n 5. Benefícios:\n\nPadroniza o formato de dados conforme princípios da ciência de dados\nFacilita análises com dplyr (group_by, summarize, etc.)\nPrepara dados para visualizações eficientes\n\n\n\n\n\n7.3.10 Dicas para Trabalhar com tidyr\n\n\n\n\n\n\nRecomendações práticas\n\n\n\n\nIdentifique as variáveis: Antes de transformar, identifique claramente quais são as observações e variáveis reais nos seus dados\nComece com subconjuntos: Para dados complexos, comece testando com um pequeno subconjunto de dados\nUse nomes descritivos: Escolha bons nomes para as novas colunas criadas por pivot_longer()\nCombine com dplyr: As transformações com tidyr geralmente são seguidas por operações com dplyr para análise\nVerifique os resultados: Sempre confira se os dados transformados mantêm as mesmas informações dos dados originais\n\n\n\n\n\n7.3.11 Resumo: Pacote tidyr\n\n\n\n\n\n\nO que você precisa lembrar\n\n\n\n\nO que faz: O pacote tidyr transforma dados entre os formatos amplo (wide) e longo (long)\nPrincipal função:\n\npivot_longer(): Converte de amplo (wide) para longo (long) (colunas para linhas)\n\nQuando usar:\n\nUse pivot_longer() quando colunas contiverem valores em vez de variáveis\n\nImportância na análise de dados:\n\nÉ essencial para a preparação de dados (fase 3 do CRISP-DM)\nPermite transformar dados comuns de negócios em formatos adequados para análise\nFacilita a aplicação de funções do dplyr e criação de visualizações\n\nLembre-se sempre:\n\nDados organizados (tidy) têm uma variável por coluna, uma observação por linha."
  },
  {
    "objectID": "tutorials/R/index.html#introdução-ao-pacote-dplyr",
    "href": "tutorials/R/index.html#introdução-ao-pacote-dplyr",
    "title": "Introdução à Linguagem R",
    "section": "7.4 Introdução ao Pacote dplyr",
    "text": "7.4 Introdução ao Pacote dplyr\n\n\n\n\n\n\n\n\n\n\n\nO pacote dplyr no ecossistema tidyverse\n\n\n\n\nO dplyr é um dos pacotes principais do tidyverse, criado por Hadley Wickham\nSeu nome vem de “data plier” (alicate para dados) - uma ferramenta para manipular dados\nFoi projetado seguindo a filosofia “tidy data” (dados organizados) - cada variável é uma coluna, cada observação é uma linha\nÉ escrito em C++ para performance otimizada\nPermite manipulação de dados de forma consistente, clara e encadeada\n\n\n\n\n\n\n\n\n\nO dplyr no Ecossistema R\n\n\n\n\nO pacote dplyr é parte do tidyverse\nEnquanto os pacotes readr e readxl ajudam na importação de dados, o dplyr é especializado na manipulação de dados\nO dplyr foi otimizado para manipular sobre dados organizados, longos ou tidy data\nO dplyr trabalha com uma estrutura de dados de R que já conhecemos: data frames/tibbles\nAs funções do dplyr foram projetadas para serem usadas com o operador pipe (%&gt;%), que já vimos brevemente no relatório Junglivet\n\n\n\n\n\n\n\n\n\nO dplyr como uma “linha de produção”\n\n\n\nImagine o processo de análise de dados como uma linha de produção:\n\nOs dados brutos são sua “matéria-prima”\nCada função do dplyr é uma “estação de trabalho” que realiza uma operação específica:\n\nfilter() seleciona apenas os materiais que atendem a certos critérios\nselect() separa apenas as partes que você precisa\nmutate() transforma ou cria novos componentes\ngroup_by() + summarize() agrupam e calculam estatísticas\narrange() organiza o resultado final\n\nO operador pipe (%&gt;%) é a “esteira” que move os dados de uma estação para outra\n\n\n\n\n\n\n\n\n\nOperações Comuns em Análise de Dados\n\n\n\n\nMuitas vezes precisamos filtrar somente certas linhas (observações ) de uma data frame.\nMuitas vezes precisamos selecionar somente certas colunas (variáveis) de uma data frame.\nMuitas vezes precisamos agrupar os dados por uma determinada(s) variável(s) categórica.\nMuitas vezes precisamos calcular estatísticas descritivas para esses subconjuntos de dados (função summarize).\n\n\n\n\n7.4.1 Por que usar o dplyr?\n\nExemplo 1: Usando R base\n\n\n# pib per capita médio dos países do continente americano\nmean(gapminder$gdpPercap[gapminder$continent == \"Americas\"])\n\n[1] 7136.11\n\n\n\nExemplo 1: Usando o pacote dplyr\n\n\n# pib per capita médio dos países do continente americano\ngapminder %&gt;%\n  filter(continent == \"Americas\") %&gt;%\n  summarize(mean(gdpPercap))\n\n# A tibble: 1 × 1\n  `mean(gdpPercap)`\n              &lt;dbl&gt;\n1             7136.\n\n\n\nExemplo 2: R base (aninhado)\n\n\n# Calcular a média de PIB per capita para \n# países asiáticos com população &gt; 50 milhões \n# em 2007\nmean(gapminder$gdpPercap[\n  gapminder$continent == \"Asia\" & \n  gapminder$pop &gt; 50000000 & \n  gapminder$year == 2007\n])\n\n[1] 7130.141\n\n\n\nDifícil de ler e entender\nPropenso a erros\nDifícil de modificar\nExemplo 2: Com dplyr e o operador pipe\n\n\n# O mesmo cálculo com dplyr\ngapminder %&gt;%\n  filter(\n    continent == \"Asia\",\n    pop &gt; 50000000,\n    year == 2007\n  ) %&gt;%\n  summarize(mean(gdpPercap))\n\n# A tibble: 1 × 1\n  `mean(gdpPercap)`\n              &lt;dbl&gt;\n1             7130.\n\n\n\nLeitura sequencial, mais natural\nCada etapa claramente separada\nFácil de modificar ou expandir\n\n\n\n7.4.2 Comparando Abordagens\n\n\n\n\n\n\nVantagens e Desvantagens\n\n\n\nBase R: Funções aninhadas\n\nVantagens: Não requer pacotes adicionais, disponível em qualquer instalação do R\nDesvantagens:\n\nCódigo difícil de ler com funções aninhadas\nDifícil de depurar quando há erros\nFunções com sintaxes inconsistentes\n\n\ndplyr: Gramática da manipulação de dados\n\nVantagens:\n\nCódigo mais legível e expressivo\nFunções com nomes intuitivos e consistentes\nIdeal para análises sequenciais com pipes\n\nDesvantagens:\n\nRequer aprender uma nova sintaxe (para usuários experientes)\nDependência de pacotes externos\nAlgumas operações podem ser mais lentas que o R base em casos específicos\n\n\n\n\n\n\n7.4.3 Fluxo de trabalho com tidyvese\n\n\n\n\n\n\nGramática da manipulação de dados\n\n\n\nO fluxo típico de uma análise de dados com tidyverse segue este padrão:\n\nImportar dados (com pacotes here, readr, readxl,…)\nOrganizar dados para análise (pacote tidyr)\nUnir arquivos/tabelas se necessário (funções para joins)\nFiltrar observações (função filter)\nSelecionar variáveis (função select)\nTransformar dados (função mutate)\nAgrupar dados (função group_by)\nResumir informações (função summarize)\nOrdenar resultados (função arrange)\n\n\n\n\n\n7.4.4 Um Pipeline de Análise com dplyr\n\n\n\n\n\n\nInformações sobre expectativa de vida por continente\n\n\n\n\n# Um pipeline de análise com dplyr\nrelatorio_expectativa &lt;- gapminder %&gt;%\n  # Filtra apenas os dados de 2007\n  filter(year == 2007) %&gt;%\n  # Agrupa por continente\n  group_by(continent) %&gt;%\n  # Calcula estatísticas resumidas\n  summarize(\n    expectativa_media = mean(lifeExp),\n    expectativa_minima = min(lifeExp),\n    expectativa_maxima = max(lifeExp),\n    num_paises = n()\n  ) %&gt;%\n  # Ordena do maior para o menor\n  arrange(desc(expectativa_media))\n\n# Visualiza o resultado final\nrelatorio_expectativa\n\n# A tibble: 5 × 5\n  continent expectativa_media expectativa_minima expectativa_maxima num_paises\n  &lt;fct&gt;                 &lt;dbl&gt;              &lt;dbl&gt;              &lt;dbl&gt;      &lt;int&gt;\n1 Oceania                80.7               80.2               81.2          2\n2 Europe                 77.6               71.8               81.8         30\n3 Americas               73.6               60.9               80.7         25\n4 Asia                   70.7               43.8               82.6         33\n5 Africa                 54.8               39.6               76.4         52\n\n\nEste exemplo demonstra como um conjunto de funções do dplyr pode ser combinado para transformar dados brutos organizados em um relatório informativo com apenas algumas linhas de código.\n\n\n\n\n\n\n\n\nPacote dplyr: Vantagens\n\n\n\nO pacote dplyr fornece uma série de funções muito úteis para manipular data frames de uma maneira que:\n\nreduz a probabilidade de cometer erros\neconomiza digitação\no código é mais legível e compreensível\n\n\n\n\n\n\n\n\n\nObjetivos de Aprendizagem\n\n\n\nVamos aprender 5 das funções mais usadas do pacote dplyr,\n\n\n\n\n\n\n\n\nFunção\nDescrição\n\n\n\n\ndplyr::filter()\npara filtrar linhas (observações)\n\n\ndplyr::select()\npara selecionar colunas (variáveis )\n\n\ndplyr::mutate()\npara criar novas variáveis\n\n\ndplyr::group_by()\npara operações “por grupo”\n\n\ndplyr::summarize()\npara calcular estatísticas\n\n\ndplyr::arrange()\npara ordenar resultados\n\n\n\n\nAlém disso, veremos como como usar o operador pipe (%&gt;%) para combiná-las.\n\n\n\n\n7.4.5 Boas Práticas com dplyr\n\n\n\n\n\n\nRecomendações para código eficiente e legível\n\n\n\n\nIndentação consistente:\n\nUm nível de identação para cada função\nParâmetros adicionais alinhados\n\nNomeie seu código:\n\nUse nomes descritivos para variáveis intermediárias e finais\nEx: dados_filtrados, relatorio_vendas_por_regiao\n\nComente seu código:\n\nExplique o “por quê”, não apenas o “o quê”\nÚtil para você mesmo no futuro e para colegas\n\nDividir análises complexas em etapas:\n\nPara análises muito complexas, divida em objetos intermediários\nFacilita a depuração e compreensão\n\nConsistência de estilo:\n\nSeja consistente com o estilo de nomeação (snake_case ou CamelCase)\nSeja consistente com o uso de aspas (simples ou duplas)\n\n\n\n\n\n\n7.4.6 Pacote gapminder - Dados\n\n\n\n\n\n\nDescrição\n\n\n\n\nO pacote gapminder da linguagem R contém uma data frame também chamada gapminder.\nA df gapminder fornece informações detalhadas sobre indicadores socioeconômicos reais de vários países ao longo do tempo.\nEste conjunto de dados é muito utilizado no ensino da linguagem R e de métodos estatísticos.\nVamos utilizar a df gapminder para ilustrar as funções do pacote dplyr.\nPara acessar os dados gapminder, basta instalar e carregar o pacote gapminder:\n\n\n# carrega os pacotes\nlibrary(tidyverse)\nlibrary(gapminder)\n\n\n\n\n\n7.4.7 Data Frame gapminder\n\n\n\n\n\n\nFase 1 (CRISP-DM): Entendimento dos Dados\n\n\n\nPara obter uma visão geral da estrutura da df gapminder, podemos usar a função glimpse do pacote dplyr:\n\n# visualizando a estrutura dos dados\ndplyr::glimpse(gapminder)\n\nRows: 1,704\nColumns: 6\n$ country   &lt;fct&gt; \"Afghanistan\", \"Afghanistan\", \"Afghanistan\", \"Afghanistan\", …\n$ continent &lt;fct&gt; Asia, Asia, Asia, Asia, Asia, Asia, Asia, Asia, Asia, Asia, …\n$ year      &lt;int&gt; 1952, 1957, 1962, 1967, 1972, 1977, 1982, 1987, 1992, 1997, …\n$ lifeExp   &lt;dbl&gt; 28.801, 30.332, 31.997, 34.020, 36.088, 38.438, 39.854, 40.8…\n$ pop       &lt;int&gt; 8425333, 9240934, 10267083, 11537966, 13079460, 14880372, 12…\n$ gdpPercap &lt;dbl&gt; 779.4453, 820.8530, 853.1007, 836.1971, 739.9811, 786.1134, …\n\n\nPodemos também inspecionar as primeiras 6 linhas da data frame com a função head:\n\nhead(gapminder)\n\n# A tibble: 6 × 6\n  country     continent  year lifeExp      pop gdpPercap\n  &lt;fct&gt;       &lt;fct&gt;     &lt;int&gt;   &lt;dbl&gt;    &lt;int&gt;     &lt;dbl&gt;\n1 Afghanistan Asia       1952    28.8  8425333      779.\n2 Afghanistan Asia       1957    30.3  9240934      821.\n3 Afghanistan Asia       1962    32.0 10267083      853.\n4 Afghanistan Asia       1967    34.0 11537966      836.\n5 Afghanistan Asia       1972    36.1 13079460      740.\n6 Afghanistan Asia       1977    38.4 14880372      786.\n\n\n\n\n\n\n7.4.8 Boa Prática\n\n\n\n\n\n\nDicionário dos dados\n\n\n\nA data frame gapminder contida no pacote de mesmo nome, possui 1704 linhas (observações) e 6 colunas (variáveis).\n\n\n\n\n\n\n\n\nVariável\nClasse/Tipo\nDescrição\n\n\n\n\ncountry\nfactor\nNome do país (142 níveis/países)\n\n\ncontinent\nfactor\nContinente ao qual o país pertence (5 níveis/continentes)\n\n\nyear\ninteger\nAno da observação (1952 a 2007 em incrementos de 5 anos)\n\n\nlifeExp\ndouble\nExpectativa de vida ao nascer, em anos\n\n\npop\ninteger\nPopulação total do país\n\n\ngdpPercap\ndouble\nPIB per capita em US$, ajustado pela inflação"
  },
  {
    "objectID": "tutorials/R/index.html#função-select",
    "href": "tutorials/R/index.html#função-select",
    "title": "Introdução à Linguagem R",
    "section": "7.5 Função select()",
    "text": "7.5 Função select()\n\n7.5.1 O que é a função select()?\n\n\n\n\n\n\nSelecionando variáveis (colunas) de uma data frame\n\n\n\n\nA função select() permite escolher quais variáveis (colunas) você quer manter ou remover de uma data frame\nEnquanto select() trabalha com colunas (variáveis), filter() trabalha com linhas (observações),\nÉ essencial para simplificar seus dados, focando apenas nas variáveis relevantes para sua análise\n\n\n\n\n\n\n\n\n\n\n7.5.2 Sintaxe da função select()\n\n\n\n\n\n\nSintaxe básica\n\n\n\n\n# Estrutura básica\nselect(df, var1, var2, var3)\n\n# Com operador pipe\ndf %&gt;% select(var1, var2, var3)\n\n\ndf: A data frame da qual você quer selecionar variáveis\nvar1, var2, var3: Nomes das variáveis que você quer manter\nTodas as variáveis não listadas serão removidas do resultado\n\n\n\n\n\n7.5.3 Exemplo: Análise Financeira Simplificada\n\n\n\n\n\n\nCenário: Análise financeira de países\n\n\n\nImagine que você é um analista financeiro internacional e precisa preparar um relatório sobre PIB:\n\n# Seleciona apenas as variáveis relevantes para análise financeira\ndados_financeiros &lt;- gapminder %&gt;%\n  select(country, year, gdpPercap)\n\n# Visualiza as primeiras linhas do resultado\nhead(dados_financeiros)\n\n# A tibble: 6 × 3\n  country      year gdpPercap\n  &lt;fct&gt;       &lt;int&gt;     &lt;dbl&gt;\n1 Afghanistan  1952      779.\n2 Afghanistan  1957      821.\n3 Afghanistan  1962      853.\n4 Afghanistan  1967      836.\n5 Afghanistan  1972      740.\n6 Afghanistan  1977      786.\n\n\nInterpretação: Este código seria equivalente a extrair apenas os dados financeiros relevantes (país, ano e PIB per capita) de uma grande base de dados para uma análise específica de desempenho econômico.\n\n\n\n\n7.5.4 Técnicas de Seleção Avançadas\n\n\n\n\n\n\nDiversas formas de selecionar variáveis\n\n\n\n\n# Selecionar variáveis por inclusão\ngapminder %&gt;% select(country, year, gdpPercap)\n\n# Selecionar variáveis por exclusão (com sinal de menos)\ngapminder %&gt;% select(-continent, -lifeExp)\n\n# Selecionar variáveis em sequência\ngapminder %&gt;% select(country:pop)\n\n# Selecionar variáveis que começam com determinado texto\ngapminder %&gt;% select(starts_with(\"c\"))\n\n# Selecionar variáveis que terminam com determinado texto\ngapminder %&gt;% select(ends_with(\"p\"))\n\n# Selecionar variáveis que contêm determinado texto\ngapminder %&gt;% select(contains(\"exp\"))\n\n\n\n\n\n\n\n\n\nAplicações práticas em negócios\n\n\n\nEstas técnicas são muito úteis quando você trabalha com:\n\nGrandes conjuntos de dados com dezenas ou centenas de variáveis\nPlanilhas de dados financeiros onde precisa focar em determinadas métricas\nRelatórios onde precisa apresentar apenas informações específicas\n\n\n\n\n\n7.5.5 Erros Comuns e Como Evitá-los\n\n\n\n\n\n\nOs erros mais comuns com select()\n\n\n\n\n\n\n\n\n\n\n\nErro\nErrado\nCorreto\n\n\n\n\nNomes de variáveis com aspas\nselect(gapminder, \"country\")\nselect(gapminder, country)\n\n\nTentar condições como em filter\nselect(gapminder, gdpPercap &gt; 1000)\nUse filter() para isso, não select()\n\n\nNão salvar o resultado\ngapminder %&gt;% select(country, year)\ndados_novos &lt;- gapminder %&gt;% select(country, year)\n\n\nRemover variáveis necessárias\nselect(country) e depois tentar usar continent\nVerifique se manteve todas as variáveis necessárias\n\n\n\n\n\n\n\n\n\n\n\nDica importante:\n\n\n\nLembre-se: select() é para escolher colunas (variáveis) e filter() é para escolher linhas (observações)!\n\n\n\n\n7.5.6 Exemplo: Salvando o resultado\n\n\n\n\n\n\nSeleção por Exclusão\n\n\n\n\nSe quisermos remover apenas a variável continent, podemos usar a sintáxe abaixo e salvar o resultado em outro objeto:\n\n\nvariaveis_selecionadas &lt;- select(gapminder, -continent)\nvariaveis_selecionadas\n\n# A tibble: 1,704 × 5\n   country      year lifeExp      pop gdpPercap\n   &lt;fct&gt;       &lt;int&gt;   &lt;dbl&gt;    &lt;int&gt;     &lt;dbl&gt;\n 1 Afghanistan  1952    28.8  8425333      779.\n 2 Afghanistan  1957    30.3  9240934      821.\n 3 Afghanistan  1962    32.0 10267083      853.\n 4 Afghanistan  1967    34.0 11537966      836.\n 5 Afghanistan  1972    36.1 13079460      740.\n 6 Afghanistan  1977    38.4 14880372      786.\n 7 Afghanistan  1982    39.9 12881816      978.\n 8 Afghanistan  1987    40.8 13867957      852.\n 9 Afghanistan  1992    41.7 16317921      649.\n10 Afghanistan  1997    41.8 22227415      635.\n# ℹ 1,694 more rows\n\n\n\n\n\n\n7.5.7 Pacote dplyr e o operador pipe ( |&gt; ou %&gt;%)\n\n\n\n\n\n\nCombinação de Operações com |&gt; ou %&gt;%\n\n\n\n\nNos slides anteriores, usamos a sintáxe ‘normal’ da linguagem R.\nMas o ponto forte do dplyr está na combinação de várias funções usando o operador pipe %&gt;%.\nVamos analisar a gramática do uso de funções do dplyr combinadas com o operador %&gt;%.\nAtalho para inserir o operador pipe: Ctrl + shift + M\n\n\n\n\n\n\n\n\n\nSignificado conceitual do pipe %&gt;%\n\n\n\n\nO operador pipe pode ser lido como “então” ou “em seguida”\nFluxo da esquerda para a direita, similar à leitura natural\nTransforma:\n\nfuncao(dados, arg1, arg2)\nem\ndados %&gt;% funcao(arg1, arg2)\n\n\n\n\n\n\n\n\nAnalogia\n\n\n\nUma linha de montagem onde cada função faz uma operação nos dados\n\ngapminder %&gt;% # Pegue os dados gapminder, então...\n  filter(year == 2007) %&gt;% # Filtre para apenas o ano 2007, então...\n  group_by(continent) %&gt;% # Agrupe por continente, então...\n  summarize( # Calcule resumos:\n    mean(lifeExp), # expectativa de vida média\n    sum(pop) # população total \n  )\n\n# A tibble: 5 × 3\n  continent `mean(lifeExp)` `sum(pop)`\n  &lt;fct&gt;               &lt;dbl&gt;      &lt;dbl&gt;\n1 Africa               54.8  929539692\n2 Americas             73.6  898871184\n3 Asia                 70.7 3811953827\n4 Europe               77.6  586098529\n5 Oceania              80.7   24549947\n\n\n\n\n\n\n\n\n\n\nNomeie os resumos calculados com summarize\n\n\n\n\ngapminder %&gt;% # Pegue os dados gapminder, então...\n  filter(year == 2007) %&gt;% # Filtre para apenas o ano 2007, então...\n  group_by(continent) %&gt;% # Agrupe por continente, então...\n  summarize( # Calcule resumos:\n    exp_vida_media = mean(lifeExp), # expectativa de vida média\n    populacao_total = sum(pop) # população total\n  )\n\n# A tibble: 5 × 3\n  continent exp_vida_media populacao_total\n  &lt;fct&gt;              &lt;dbl&gt;           &lt;dbl&gt;\n1 Africa              54.8       929539692\n2 Americas            73.6       898871184\n3 Asia                70.7      3811953827\n4 Europe              77.6       586098529\n5 Oceania             80.7        24549947\n\n\n\n\n\n\n7.5.8 Função select() e o Operador Pipe\n\n\n\n\n\n\nSelecionando Variáveis com o Pipe\n\n\n\n\nvariaveis_selecionadas &lt;- gapminder %&gt;%\n  dplyr::select(year, country, gdpPercap)\n\nVamos entender o código:\n\nPrimeiro invocamos a df gapminder e a passamos, usando o operador pipe %&gt;%, para a próxima etapa, que é a função select().\nNeste caso, não especificamos qual df usamos na função select(), porque que ela obtém essa informação do pipe anterior.\nSalvamos o resultado no objeto variaveis_selecionadas\n\n\n\n\n\n7.5.9 Resumo: Função select()\n\n\n\n\n\n\nO que você precisa lembrar\n\n\n\n\nPara que serve: Selecionar apenas as colunas (variáveis) que você deseja manter ou remover\nSintaxe básica:\n\n\ndados %&gt;% select(var1, var2, var3)  # Mantém apenas var1, var2 e var3\ndados %&gt;% select(-var4, -var5)      # Remove var4 e var5, mantém o resto\n\n\nTécnicas úteis:\n\nSeleção por inclusão: select(país, ano, vendas)\nSeleção po exclusão: select(-observações, -notas)\nSeleção por padrão de texto: select(starts_with(\"venda\"))\n\nLembre-se sempre:\n\nselect() trabalha com COLUNAS\nfilter() trabalha com LINHAS\nSempre salve o resultado em um novo objeto!\n\n\n\nnovo_df &lt;- dados %&gt;% select(...)"
  },
  {
    "objectID": "tutorials/R/index.html#função-filter",
    "href": "tutorials/R/index.html#função-filter",
    "title": "Introdução à Linguagem R",
    "section": "7.6 Função filter()",
    "text": "7.6 Função filter()\n\n7.6.1 O que é a função filter()?\n\n\n\n\n\n\nFiltrando observações (linhas) de uma data frame\n\n\n\n\nA função filter() permite filtrar subconjuntos de observações (linhas) que atendem determinadas condições ou critérios.\nÉ uma das funções mais utilizadas na análise de dados para criar subconjuntos específicos dos dados\nPense nela como um “filtro” que deixa passar apenas as observações que atendem aos critérios que você definir\n\n\n\n\n\n\nNeste caso, duas linhas atendem às condições\n\n\n\n\n7.6.2 O que é a função filter()?\n\n\n\n\n\n\nFiltrando observações (linhas) de uma data frame\n\n\n\n\nImagine que você tem uma planilha de vendas e quer analisar apenas as vendas:\n\nde um produto específico\nacima de determinado valor\nem uma região específica\nem um período específico\n\nA função filter() permite fazer essa filtragem de forma rápida e precisa\n\n\n\n\n\n7.6.3 Sintaxe da função filter()\n\n\n\n\n\n\nSintaxe básica\n\n\n\n\n# Estrutura básica\nfilter(df, condição)\n\n# Com operador pipe\ndf %&gt;% filter(condição)\n\n\ndf: A data frame a ser filtrada\ncondição: Expressão lógica que retorna TRUE/FALSE para cada linha\nSomente as linhas que resultam em TRUE são mantidas no resultado\n\n\n\n\n\n7.6.4 Operadores para construir condições\n\n\n\n\n\n\nOperadores na linguagem dos negócios\n\n\n\n\n\n\n\n\n\n\n\nOperador\nExemplo em Linguagem Natural\nCódigo em R\n\n\n\n\n==\nApenas os países europeus\ncontinent == “Europe”\n\n\n!=\nTodos, exceto os países europeus\ncontinent != “Europe”\n\n\n&gt;\nPaíses com PIB per capita maior que 10.000\ngdpPercap &gt; 10000\n\n\n&lt;\nPaíses com menos de 1 milhão de habitantes\npop &lt; 1000000\n\n\n&gt;=\nPaíses a partir do ano 2000\nyear &gt;= 2000\n\n\n&\nPaíses europeus a partir de 2000\ncontinent == “Europe” & year &gt;= 2000\n\n\n|\nPaíses da Europa ou da Ásia\ncontinent == “Europe” | continent == “Asia”\n\n\n\n\n\n\n\n\n\n\n\nDicas\n\n\n\n\nUse == para igualdade (lembre-se: dois sinais de igual, não apenas um)\nUse & para “E” (quero este critério E aquele também)\nUse | para “OU” (quero este critério OU aquele)\n\n\n\n\n\n7.6.5 Exemplo básico\n\n\n\n\n\n\nCenário: Análise de vendas por continente\n\n\n\nImagine que a data frame gapminder representa dados de filiais de uma empresa multinacional:\n\n# Filtra apenas países das Américas\n# como se fossem filiais da região Américas\n\nfiliais_americas &lt;- gapminder %&gt;%\n  filter(continent == \"Americas\")\n\n# Visualiza as primeiras 6 linhas do resultado\nhead(filiais_americas)\n\n# A tibble: 6 × 6\n  country   continent  year lifeExp      pop gdpPercap\n  &lt;fct&gt;     &lt;fct&gt;     &lt;int&gt;   &lt;dbl&gt;    &lt;int&gt;     &lt;dbl&gt;\n1 Argentina Americas   1952    62.5 17876956     5911.\n2 Argentina Americas   1957    64.4 19610538     6857.\n3 Argentina Americas   1962    65.1 21283783     7133.\n4 Argentina Americas   1967    65.6 22934225     8053.\n5 Argentina Americas   1972    67.1 24779799     9443.\n6 Argentina Americas   1977    68.5 26983828    10079.\n\n\nInterpretação: Este filtro seria equivalente a selecionar apenas dados de filiais localizadas nas Américas para uma análise regional de desempenho.\n\n\n\n\n7.6.6 Pensando como um Analista de Negócios\n\n\n\n\n\n\nPerguntas de negócios traduzidas para filter()\n\n\n\n\n\n\n\n\n\n\nPergunta de Negócio\nCódigo com filter()\n\n\n\n\nQuais países tiveram PIB per capita acima de $20.000 em 2007?\nfilter(year == 2007 & gdpPercap &gt; 20000)\n\n\nQuais países da Ásia tiveram expectativa de vida acima de 75 anos?\nfilter(continent == \"Asia\" & lifeExp &gt; 75)\n\n\nQuais países tiveram população superior a 100 milhões em 2007?\nfilter(year == 2007 & pop &gt; 100000000)\n\n\nQuais países não são da Europa nem da América?\nfilter(continent != \"Europe\" & continent != \"Americas\")\n\n\n\nDica: Comece sempre pensando na pergunta de negócio, depois traduza para o código\n\n\n\n\n7.6.7 Múltiplas condições com filter()\n\n\n\n\n\n\nCombinando condições\n\n\n\nHá duas maneiras principais de combinar condições:\n\n# Método 1: Usando o operador & (E lógico) - equivalente ao método 1\neuropeus_2007_alt &lt;- gapminder %&gt;%\n  filter(continent == \"Europe\" & year == 2007)\n\n# Método 2: Usando o operador | (OU lógico)\neuropa_ou_asia &lt;- gapminder %&gt;%\n  filter(continent == \"Europe\" | continent == \"Asia\")\n\nDica importante:\n\nCom & (“E”) ambas as condições precisam ser TRUE para que a linha seja mantida\nCom | (“OU”), apenas uma das condições precisa ser TRUE\n\n\n\n\n\n7.6.8 Filtrando com operadores relacionais\n\n\n\n\n\n\nExemplos com diferentes operadores\n\n\n\n\n# Países com alta expectativa de vida (maior que 80 anos)\nalta_exp_vida &lt;- gapminder %&gt;%\n  filter(lifeExp &gt; 80)\n\n# Países com PIB per capita abaixo de 500 dólares\nbaixo_pib &lt;- gapminder %&gt;%\n  filter(gdpPercap &lt; 500)\n\n# Anos diferentes de 2002\nnao_2002 &lt;- gapminder %&gt;%\n  filter(year != 2002)\n\nUtilize operadores relacionais para:\n\nEncontrar valores acima/abaixo de limites importantes\nExcluir períodos ou categorias específicas\nIdentificar casos extremos ou outliers\n\n\n\n\n\n7.6.9 Combinando filter() com outras funções\n\n\n\n\n\n\nA importância da ordem das operações\n\n\n\n\n# Países europeus em 2007, mostrando apenas país e expectativa de vida\neuropeus_lifeExp_2007 &lt;- gapminder %&gt;%\n  filter(continent == \"Europe\" & year == 2007) %&gt;%\n  select(country, lifeExp)\n\n# Ordenando o resultado por expectativa de vida (decrescente)\neuropeus_lifeExp_2007_ordenado &lt;- gapminder %&gt;%\n  filter(continent == \"Europe\" & year == 2007) %&gt;%\n  select(country, lifeExp) %&gt;%\n  arrange(desc(lifeExp))\n\nhead(europeus_lifeExp_2007_ordenado)\n\n# A tibble: 6 × 2\n  country     lifeExp\n  &lt;fct&gt;         &lt;dbl&gt;\n1 Iceland        81.8\n2 Switzerland    81.7\n3 Spain          80.9\n4 Sweden         80.9\n5 France         80.7\n6 Italy          80.5\n\n\nOrdem correta das operações:\n\nComece com filter()\nUse select() depois de filter\nSe inverter a ordem, a função filter() pode falhar se você removeu colunas necessárias\n\nLembre-se: primeiro filter(), depois select()!\n\n\n\n\n7.6.10 Erros Comuns e Como Evitá-los\n\n\n\n\n\n\nOs 4 erros mais comuns com filter()\n\n\n\n\n\n\n\n\n\n\n\nErro\nErrado\nCorreto\n\n\n\n\nUsar = em vez de ==\nfilter(continent = \"Europe\")\nfilter(continent == \"Europe\")\n\n\nEsquecer as aspas em nomes\nfilter(continent == Europe)\nfilter(continent == \"Europe\")\n\n\nNão salvar o resultado\ngapminder %&gt;% filter(year == 2007)\ndados_2007 &lt;- gapminder %&gt;% filter(year == 2007)\n\n\n\n\n\n\n\n7.6.11 Exemplo Completo Comum\n\n\n\n\n\n\nPaíses europeus com alta expectativa de vida em 2007?\n\n\n\n\n# Países europeus com expectativa de vida acima de 78 anos em 2007\nresultado_final &lt;- gapminder %&gt;%\n  # Filtrar por continente, ano e expectativa de vida\n  filter(continent == \"Europe\" & year == 2007 & lifeExp &gt; 78) %&gt;%\n  # Selecionar variáveis de interesse\n  select(country, lifeExp, gdpPercap) %&gt;%\n  # Ordenar por expectativa de vida (decrescente)\n  arrange(desc(lifeExp))\n\n# Mostrar resultados\nresultado_final\n\n# A tibble: 17 × 3\n   country        lifeExp gdpPercap\n   &lt;fct&gt;            &lt;dbl&gt;     &lt;dbl&gt;\n 1 Iceland           81.8    36181.\n 2 Switzerland       81.7    37506.\n 3 Spain             80.9    28821.\n 4 Sweden            80.9    33860.\n 5 France            80.7    30470.\n 6 Italy             80.5    28570.\n 7 Norway            80.2    49357.\n 8 Austria           79.8    36126.\n 9 Netherlands       79.8    36798.\n10 Greece            79.5    27538.\n11 Belgium           79.4    33693.\n12 United Kingdom    79.4    33203.\n13 Germany           79.4    32170.\n14 Finland           79.3    33207.\n15 Ireland           78.9    40676.\n16 Denmark           78.3    35278.\n17 Portugal          78.1    20510.\n\n\nObserve o fluxo de análise:\n\nFiltramos os dados com critérios específicos\nSelecionamos apenas as variáveis de interesse\nOrdenamos os resultados para facilitar a interpretação\nTodo o processo forma um “pipeline” de análise limpo e legível\n\n\n\n\n\n7.6.12 Resumo: Função filter()\n\n\n\n\n\n\nO que você precisa lembrar\n\n\n\n\nPara que serve: Selecionar apenas as linhas (observações) que atendem a determinadas condições\nSintaxe básica:\n\n\ndados %&gt;% filter(condição1, condição2, ...)\n\n\nComparações mais usadas:\n\nIgual: == (dois sinais de igual!)\nDiferente: !=\nMaior/Menor: &gt;, &lt;, &gt;=, &lt;=\n\nMúltiplas condições:\n\nTodas as condições (E): filter(condição1 & condição2)\nQualquer condição (OU): filter(condição1 | condição2)\n\nLembre-se sempre de salvar o resultado:\n\n\nnova_df &lt;- dados %&gt;% filter(...)"
  },
  {
    "objectID": "tutorials/R/index.html#função-mutate",
    "href": "tutorials/R/index.html#função-mutate",
    "title": "Introdução à Linguagem R",
    "section": "7.7 Função mutate()",
    "text": "7.7 Função mutate()\n\n\n\n\n\n\nO que é a função mutate()?\n\n\n\n\nA função mutate() permite criar novas variáveis ou modificar variáveis existentes\nEnquanto filter() seleciona linhas e select() seleciona colunas, mutate() adiciona ou modifica colunas\nÉ como ter uma “calculadora” que cria novas informações a partir dos dados existentes\nIdeal para cálculos como: percentuais, totais, médias, categorias, etc.\n\n\n\n\n\n\nCria novas variáveis a partir das variáveis existentes\n\n\n\n\n\n\n\n\nSintaxe da função mutate()\n\n\n\n\n# Formato básico\ndados %&gt;% mutate(nova_coluna = expressão)\n\n# Exemplos práticos\ndados %&gt;% mutate(valor_total = preco * quantidade)\ndados %&gt;% mutate(valor_com_desconto = preco * 0.9)\n\nO que cada parte significa:\n\nnova_coluna: Nome da nova variável que você está criando\nexpressão: Fórmula que calcula os valores da nova variável\nA expressão é aplicada a cada linha individualmente\n\n\n\n\n\n\n\n\n\nAplicação: Análise de Vendas\n\n\n\nImagine que a data frame gapminder contém dados de vendas globais da sua empresa:\n\n# Criando variáveis para análise de vendas\nvendas_analise &lt;- gapminder %&gt;%\n  filter(year == 2007) %&gt;%  # Filtra dados somente de 2007\n  mutate(\n    # PIB total representa a receita total da região\n    receita_total = gdpPercap * pop,\n    # Receita em milhões (para facilitar a leitura)\n    receita_milhoes = receita_total / 1000000,\n    # Indicador de destaque (regiões com alta receita por pessoa)\n    destaque = gdpPercap &gt; 20000\n  ) %&gt;%\n  # Vamos visualizar apenas algumas colunas e 5 linhas\n  select(country, receita_milhoes, gdpPercap, destaque) %&gt;%\n  head(5)\n\nvendas_analise\n\nInterpretação administrativa: Este tipo de transformação é usado diariamente nas empresas para converter dados brutos em métricas de negócios úteis para tomada de decisão.\n\n\n\n\n\n\n\n\nTransformações mais comuns: Operações aritméticas básicas\n\n\n\n\n# Operações aritméticas básicas com mutate()\ngapminder %&gt;%\n  filter(country == \"Brazil\", year &gt;= 2000) %&gt;%\n  mutate(\n    # Adição: adiciona um valor fixo\n    pop_ajustada = pop + 1000000,\n    # Multiplicação: multiplica por um fator\n    gdp_reais = gdpPercap * 5.2,  # Convertendo para reais\n    # Divisão: divide para mudar a escala \n    pop_milhoes = pop / 1000000   # População em milhões\n  ) %&gt;%\n  select(year, pop, pop_ajustada, pop_milhoes, gdpPercap, gdp_reais)\n\nDica: As operações mais utilizadas em análises de negócios são multiplicação (para fatores, taxas, conversões) e divisão (para mudar escalas e calcular proporções).\n\n\n\n7.7.1 Criando categorias com ifelse()\n\n\n\n\n\n\nO que é a função ifelse()?\n\n\n\nA função ifelse() permite criar novas variáveis categóricas baseadas em condições:\nComo funciona: ifelse(condição, valor_se_verdadeiro, valor_se_falso)\n\n# Criando categorias com ifelse\npaises_categorizados &lt;- gapminder %&gt;%\n  filter(year == 2007) %&gt;%\n  mutate(\n    nivel_desenvolvimento = ifelse(gdpPercap &gt; 10000, \n                                   \"Desenvolvimento Alto\", \n                                   \"Desenvolvimento Baixo\")\n  ) %&gt;%\n  select(country, gdpPercap, nivel_desenvolvimento) %&gt;%\n  head(6)\n\npaises_categorizados\n\n\nÉ como dizer: “SE o PIB per capita for maior que 10.000, então classifique como ‘Desenvolvimento Alto’, SENÃO classifique como ‘Desenvolvimento Baixo’”\n\n\n\n\n\n\n\n\n\nCriando KPIs com mutate() e ifelse()\n\n\n\n\ngapminder %&gt;%\n filter(year == 2007) %&gt;%\n mutate(\n   pib_total = gdpPercap * pop,  # PIB total\n   pib_percentual_global = (pib_total/sum(pib_total))*100, # % do PIB global\n   performance = ifelse(gdpPercap &gt; mean(gdpPercap), \n                       \"Acima da média\", \n                       \"Abaixo da média\")\n ) %&gt;% \n select(country, pib_total, pib_percentual_global, performance)\n\nIsso mostra como transformar dados brutos em informações gerenciais.\n\n\n\n\n7.7.2 Criando Múltiplas Categorias com case_when()\n\n\n\n\n\n\nQuando precisamos de mais de duas categorias\n\n\n\ncase_when() é como um “sistema de classificação” para criar categorias mais complexas:\n\n# Exemplo de múltiplas categorias\npaises_classificados &lt;- gapminder %&gt;%\n  filter(year == 2007) %&gt;%\n  mutate(\n    classe_desenvolvimento = case_when(\n      gdpPercap &lt; 2000 ~ \"Baixo\",\n      gdpPercap &lt; 10000 ~ \"Médio\",\n      gdpPercap &gt;= 10000 ~ \"Alto\"\n    )\n  ) %&gt;%\n  select(country, gdpPercap, classe_desenvolvimento) %&gt;%\n  head(6)\n\npaises_classificados\n\nComo funciona:\n\nCada linha representa uma condição: condição ~ \"valor a atribuir\"\nAs condições são verificadas em ordem (de cima para baixo)\nQuando uma condição é verdadeira, o valor correspondente é atribuído\n\n\n\n\n\n\n\n\n\nQuando usar ifelse() vs. case_when()?\n\n\n\n\n\n\n\n\n\n\n\nFunção\nQuando usar\nExemplo\n\n\n\n\nifelse()\nPara divisões simples em duas categorias\nifelse(vendas &gt; meta, \"Meta atingida\", \"Meta não atingida\")\n\n\ncase_when()\nPara múltiplas categorias ou condições complexas\nClassificar clientes em “Bronze”, “Prata”, “Ouro” e “Platina” baseado em diferentes critérios\n\n\n\nAnalogia de negócios:\n\nifelse() é como uma decisão “sim/não” (aprovação de crédito simples)\ncase_when() é como um sistema de classificação de clientes com várias categorias\n\n\n\n\n\n7.7.3 Erros Comuns e Como Evitá-los\n\n\n\n\n\n\nOs erros que todos cometem no início\n\n\n\n\nUsar o operador de atribuição errado\n\nERRADO: mutate(nova_var &lt;- expressão) ❌\nCORRETO: mutate(nova_var = expressão) ✅\n\nEsquecer de salvar o resultado\n\nERRADO: dados %&gt;% mutate(nova_var = x * 2) ❌ (resultado não salvo)\nCORRETO: dados_novos &lt;- dados %&gt;% mutate(nova_var = x * 2) ✅\n\nTentar usar variáveis que acabou de criar sem manter os resultados\n\nERRADO:\n\n# Executando dois comandos separados:\ndados %&gt;% mutate(nova_var = x * 2)  # Resultado não salvo em lugar nenhum\ndados %&gt;% filter(nova_var &gt; 10)     # ❌ Erro! nova_var não existe em 'dados'\n\nCORRETO (Pipeline único):\n\ndados_novos &lt;- dados %&gt;%\n  mutate(nova_var = x * 2) %&gt;%\n  filter(nova_var &gt; 10) # ✅ Funciona porque tudo está no mesmo pipeline\n\n\n\n\n\n7.7.4 Resumo: Função mutate()\n\n\n\n\n\n\nO que você precisa lembrar\n\n\n\n\nO que faz: mutate() cria novas variáveis ou modifica existentes\nUsos comuns no mundo dos negócios:\n\nCalcular totais, médias, porcentagens\nConverter unidades (dólares para reais, unidades para milhares)\nCriar categorias e classificações\n\nComo usar na prática:\n\n\ndados %&gt;% mutate(nova_variavel = expressão)\n\n\nFerramentas complementares:\n\nifelse() para classificações simples (sim/não)\ncase_when() para classificações múltiplas\n\nLembre-se de salvar o resultado em um novo objeto:\n\n\nnovo_df &lt;- dados %&gt;% mutate(...)"
  },
  {
    "objectID": "tutorials/R/index.html#função-arrange",
    "href": "tutorials/R/index.html#função-arrange",
    "title": "Introdução à Linguagem R",
    "section": "8.1 Função arrange()",
    "text": "8.1 Função arrange()\n\n\n\n\n\n\nDescrição\n\n\n\n\nA função arrange() ordena as linhas (observações) de uma data frame com base nos valores de uma ou mais colunas (variáveis)\nPor padrão, organiza em ordem crescente (do menor para o maior)\nUse desc() para ordenar em ordem decrescente (do maior para o menor)\n\n\n\n\n\n\nReordena as linhas de uma data frame segundo uma variável, por padrão em ordem crescente, com desc() em ordem decrescente\n\n\n\n\n\n\n\n\nSintaxe da função arrange()\n\n\n\n\n# Formato básico\ndf %&gt;% arrange(variavel)         # ordem crescente\ndf %&gt;% arrange(desc(variavel))   # ordem decrescente\n\n# Ordenar por múltiplas variáveis\ndados %&gt;% arrange(var1, var2)       # Ordenar primeiro por var1, depois var2\n\n\ndf: A data frame que contém os dados\nvariavel: Nome da coluna pela qual você quer ordenar as observações\nUse desc() para ordem descrescente (do maior para o menor)\nQuando ordenando por múltiplas variáveis, a primeira tem prioridade\n\n\n\n\n\n\n\n\n\nAplicação: Análise de Desempenho\n\n\n\nImagine que você é um analista de mercado e precisa identificar rapidamente os países mais promissores para expansão:\n\n# Criando um ranking de países por PIB per capita em 2007\nranking_paises &lt;- gapminder %&gt;%\n  filter(year == 2007) %&gt;%                # Filtra dados apenas de 2007\n  select(country, continent, gdpPercap) %&gt;% # Seleciona colunas relevantes\n  arrange(desc(gdpPercap)) %&gt;%            # Ordena do maior para o menor PIB\n  head(6)                                # Mostra os 10 primeiros resultados\n\n# Visualiza o resultado\nranking_paises\n\n# A tibble: 6 × 3\n  country          continent gdpPercap\n  &lt;fct&gt;            &lt;fct&gt;         &lt;dbl&gt;\n1 Norway           Europe       49357.\n2 Kuwait           Asia         47307.\n3 Singapore        Asia         47143.\n4 United States    Americas     42952.\n5 Ireland          Europe       40676.\n6 Hong Kong, China Asia         39725.\n\n\nInterpretação Este tipo de ordenação é relevante em análises de mercado para identificar rapidamente os países mais ricos (potenciais mercados premium) ou para encontrar as regiões que precisam de mais atenção (ordenando do menor para o maior).\n\n\n\n8.1.1 Erros Comuns e Como Evitá-los\n\n\n\n\n\n\nCuidados ao usar arrange()\n\n\n\n\n\n\n\n\n\n\n\nErro\nProblema\nSolução\n\n\n\n\nOrdem incorreta\narrange(dados, desc()) sem especificar a variável\narrange(dados, desc(variavel))\n\n\nTentar ordenar por variável não existente\narrange(vendas_por_regiao) quando a coluna não existe\nVerificar primeiro os nomes das colunas com names()\n\n\nNão salvar o resultado ordenado\nOrdenar mas não atribuir a um objeto\ndados_ordenados &lt;- dados %&gt;% arrange(...)\n\n\n\nLembre-se: A ordenação é temporária se você não salvar o resultado em um novo objeto!\n\n\n\n\n8.1.2 Resumo: Função arrange()\n\n\n\n\n\n\nO que você precisa lembrar\n\n\n\n\nPara que serve: Ordenar as linhas (observações) com base nos valores de uma ou mais colunas\nSintaxe básica:\n\n\ndados %&gt;% arrange(variavel)         # ordem crescente \ndados %&gt;% arrange(desc(variavel))   # ordem decrescente \n\n\nUsos comuns em negócios:\n\nCriar rankings de vendedores, produtos ou regiões\nIdentificar os maiores clientes (Top 10)\nEncontrar problemas (itens com menor desempenho)\nPreparar dados para relatórios e apresentações\n\nLembre-se sempre:\n\nUse desc() para ordem decrescente\nPara ordenar por múltiplas colunas: arrange(var1, var2)\nSalve o resultado em um novo objeto!\n\n\n\ndados_ordenados &lt;- dados %&gt;% arrange(...)"
  },
  {
    "objectID": "tutorials/R/index.html#resumo-das-funções-dplyr",
    "href": "tutorials/R/index.html#resumo-das-funções-dplyr",
    "title": "Introdução à Linguagem R",
    "section": "8.2 Resumo das Funções dplyr",
    "text": "8.2 Resumo das Funções dplyr\n\n\n\n\n\n\nResumo das seis funções principais\n\n\n\n\n\n\nFunção\nPropósito\n\n\n\n\ndplyr::filter()\nSeleciona linhas baseadas em condições\n\n\ndplyr::select()\nSeleciona colunas específicas\n\n\ndplyr::mutate()\nCria ou modifica colunas\n\n\ndplyr::group_by()\nAgrupa dados por categorias\n\n\ndplyr::summarize()\nCalcula estatísticas resumidas\n\n\ndplyr::arrange()\nOrdena linhas\n\n\n\nLembre-se: O poder do dplyr está em combinar estas funções com o operador pipe %&gt;%"
  },
  {
    "objectID": "tutorials/R/index.html#pacote-dplyr-bibliografia-recomendada",
    "href": "tutorials/R/index.html#pacote-dplyr-bibliografia-recomendada",
    "title": "Introdução à Linguagem R",
    "section": "8.3 Pacote dplyr: Bibliografia Recomendada",
    "text": "8.3 Pacote dplyr: Bibliografia Recomendada\n\nR para Ciência de Dados - Cap. 3\nIntrodução à Linguagem R - Cap. 5\nResumo"
  },
  {
    "objectID": "tutorials/R/index.html#aplicações",
    "href": "tutorials/R/index.html#aplicações",
    "title": "Introdução à Linguagem R",
    "section": "9.1 Aplicações",
    "text": "9.1 Aplicações\n\n\n\n\n\n\nDados organizados permitem:\n\n\n\n\nFinanças e Controladoria: Análise de tendências financeiras entre períodos, detecção de anomalias em despesas, comparação de desempenho entre unidades de negócio\nMarketing: Avaliação de ROI por canal e campanha, análise de comportamento do consumidor, segmentação de clientes baseada em múltiplas variáveis\nOperações e Cadeia de Suprimentos: Otimização de estoques baseada em tendências sazonais, previsão de demanda, monitoramento da cadeia de suprimentos\nRecursos Humanos: Análise de desempenho ao longo do tempo, identificação de fatores de turnover, planejamento de capacitação\nEstratégia de Negócios: Consolidação de KPIs de diversas áreas para tomada de decisão, identificação de correlações entre variáveis de negócio\nNa prática: Administradores frequentemente recebem dados em formatos inadequados para análise (relatórios estáticos, planilhas “bonitas”). A capacidade de reorganizar esses dados rapidamente para análise representa uma vantagem competitiva significativa."
  },
  {
    "objectID": "tutorials/R/index.html#um-pipeline-completo-com-dplyr",
    "href": "tutorials/R/index.html#um-pipeline-completo-com-dplyr",
    "title": "Introdução à Linguagem R",
    "section": "9.2 Um Pipeline Completo com dplyr",
    "text": "9.2 Um Pipeline Completo com dplyr\n\n# inicia com a df (gapminder) e salva o resultado final\nrelatorio_expectativa &lt;- gapminder %&gt;%\n  # Filtra apenas os dados de 2007\n  filter(year == 2007) %&gt;%\n  # Agrupa por continente\n  group_by(continent) %&gt;%\n  # Calcula estatísticas por continente\n  summarize(\n    expectativa_media = mean(lifeExp),\n    expectativa_minima = min(lifeExp),\n    expectativa_maxima = max(lifeExp),\n  ) %&gt;%\n  # Ordena do maior para o menor\n  arrange(desc(expectativa_media))\n\n# Visualiza o resultado final\nrelatorio_expectativa\n\n# A tibble: 5 × 4\n  continent expectativa_media expectativa_minima expectativa_maxima\n  &lt;fct&gt;                 &lt;dbl&gt;              &lt;dbl&gt;              &lt;dbl&gt;\n1 Oceania                80.7               80.2               81.2\n2 Europe                 77.6               71.8               81.8\n3 Americas               73.6               60.9               80.7\n4 Asia                   70.7               43.8               82.6\n5 Africa                 54.8               39.6               76.4"
  },
  {
    "objectID": "tutorials/R/index.html#tabelas-profissionais",
    "href": "tutorials/R/index.html#tabelas-profissionais",
    "title": "Introdução à Linguagem R",
    "section": "9.3 Tabelas Profissionais",
    "text": "9.3 Tabelas Profissionais\n\n\n\n\n\n\nLimitações das Data Frames Brutas em Relatórios Profissionais\n\n\n\n\nAs data frames produzidas pelos pipelines do dplyr são excelentes para análise, mas não são adequadas para apresentação em relatórios profissionais.\nA linguagem R oferece várias soluções para esta limitação:\n\nO pacote kableExtra (que veremos a seguir) para relatórios HTML e PDF\nO pacote gt para tabelas altamente personalizáveis\n\nEstes pacotes permitem transformar dados analíticos em tabelas com qualidade profissional, incluindo:\n\ntítulo, nomes das colunas e notas formatadas\ndestaque visual para informações importantes\n\npersonalização de cores, bordas e estilos de texto\nentre outras."
  },
  {
    "objectID": "tutorials/R/index.html#o-pacote-kableextra",
    "href": "tutorials/R/index.html#o-pacote-kableextra",
    "title": "Introdução à Linguagem R",
    "section": "9.4 O Pacote kableExtra",
    "text": "9.4 O Pacote kableExtra\n\n\n\n\n\n\nTransformando tabelas básicas em apresentações profissionais\n\n\n\n\nO pacote kableExtra estende as funcionalidades da função básica kable do R, permitindo a criação de tabelas com qualidade de publicação.\nFoi desenvolvido para trabalhar com tabelas em documentos HTML e PDF (LaTeX).\nPermite formatar tabelas para relatórios profissionais, artigos acadêmicos e apresentações.\nÉ extremamente útil na Fase 6 do CRISP-DM (Implantação), quando precisamos comunicar resultados de forma clara e atrativa."
  },
  {
    "objectID": "tutorials/R/index.html#sintaxe-básica-do-kableextra",
    "href": "tutorials/R/index.html#sintaxe-básica-do-kableextra",
    "title": "Introdução à Linguagem R",
    "section": "9.5 Sintaxe Básica do kableExtra",
    "text": "9.5 Sintaxe Básica do kableExtra\n\n\n\n\n\n\nFluxo básico com kableExtra\n\n\n\n\n#  inicie com uma data frame\ntabela_formatada &lt;- dados %&gt;%\n  # Transforme a data frame em tabela básica\n  kable(\n    caption = \"Título da Tabela\",\n    col.names = c(\"Nome1\", \"Nome2\"), # Renomear colunas\n    digits = 2,                      # Casas decimais\n    format.args = list(decimal.mark = \",\", big.mark = \".\") # Define vírgula como separador decimal e ponto como separador de milhares\n  ) %&gt;%\n  # Adicionar estilos\n  kable_styling(\n    bootstrap_options = c(\"striped\", \"hover\"),\n    full_width = FALSE,\n    position = \"center\"\n  )\n\n\nkable(): Converte a data frame em tabela básica\nkable_styling(): Aplica estilos visuais à tabela\nOutros elementos podem ser adicionados em sequência com o pipe (%&gt;%)\n\n\n\n\n\n\n\n\n\nPipeline para relatórios profissionais\n\n\n\nEm projetos de análise de dados completos, o fluxo geralmente é:\n\nPreparar dados com tidyr e dplyr\nAnalisar dados com dplyr (filter, select, group_by, etc.)\nVisualizar resultados com ggplot2 (gráficos) e kableExtra (tabelas)\n\nUm pipeline completo pode é similar com:\n\n# Pipeline completo de análise até apresentação\ndados_brutos %&gt;%\n  # Fase de limpeza e preparação\n  filter(...) %&gt;%\n  select(...) %&gt;%\n  mutate(...) %&gt;%\n  \n  # Fase de análise e agregação\n  group_by(...) %&gt;%\n  summarize(...) %&gt;%\n  \n  # Fase de apresentação em tabela\n  kable(...) %&gt;%\n  kable_styling(...) %&gt;%\n  column_spec(...)\n\nEste fluxo integrado representa as fases 3, 4 e 6 do CRISP-DM."
  },
  {
    "objectID": "tutorials/R/index.html#resumo",
    "href": "tutorials/R/index.html#resumo",
    "title": "Introdução à Linguagem R",
    "section": "9.6 Resumo",
    "text": "9.6 Resumo\n\n\n\n\n\n\nPacote kableExtra\n\n\n\n\nPara que serve: Transformar tabelas de dados simples em tabelas profissionais para relatórios, apresentações e publicações.\nSintaxe básica:\n\n\ndados %&gt;%\n  kable(...) %&gt;%\n  kable_styling(...) %&gt;%\n  ... outras personalizações ...\n\n\nFunções principais:\n\nkable(): Converte data frame em tabela base\nkable_styling(): Aplica estilos gerais à tabela\ncolumn_spec() e row_spec(): Personalizações específicas\nfootnote(): Adiciona notas de rodapé\n\nIntegrações estratégicas:\n\nIdeal no final de pipelines dplyr para apresentar resultados\nComplementar aos gráficos do ggplot2 em relatórios\n\nBenefícios em Administração:\n\nEleva a qualidade visual de relatórios gerenciais\nFacilita a comunicação de insights de dados para gestores\nPermite destacar KPIs e métricas críticas para tomada de decisão"
  },
  {
    "objectID": "tutorials/R/index.html#tabela-com-o-pacote-kableextra",
    "href": "tutorials/R/index.html#tabela-com-o-pacote-kableextra",
    "title": "Introdução à Linguagem R",
    "section": "9.7 Tabela com o Pacote KableExtra",
    "text": "9.7 Tabela com o Pacote KableExtra\n\n# inicia com a df contendo o resultado do pipeline\nrelatorio_expectativa %&gt;%\n  # Converte a df em uma tabela kable (tabela básica HTML/LaTeX)\n  kable(\n    # Renomeia as colunas para português\n    col.names = c(\n      \"Continente\", \"Expectativa Média\", \"Expectativa Mínima\", \"Expectativa Máxima\"\n    ),\n    # Formata os números com 1 casa decimal\n    digits = 1,\n    # vírgula como separador decimal\n    format.args = list(decimal.mark = \",\")\n  ) %&gt;%\n  # Adiciona estilo à tabela para melhorar o visual\n  kable_classic(\n    # tamanho da fonte\n    font_size = 25,\n    # Impede que a tabela ocupe toda a largura disponível\n    full_width = FALSE,\n    # # Centraliza a tabela\n    position = \"center\"\n  ) %&gt;%\n  # Aplica formatação específica à coluna da expectativa média\n  column_spec(\n    # Aplica a formatação à segunda coluna (Expectativa Média)\n    2,\n    # Coloca o texto em negrito para melhor destaque\n    bold = TRUE,\n    # Define a cor dos números como branco\n    color = \"white\",\n    # Aplica um gradiente de cores ao fundo das células\n    background = spec_color(\n      # A expectativa_media determinar a intensidade das cores\n      relatorio_expectativa$expectativa_media,\n      # início do gradiente com intensidade alta\n      begin = 0.9,\n      # fim do gradiente com intensidade baixa\n      end = 0.1,\n      # paleta de cores \"viridis\" (azul-verde-amarelo)\n      option = \"viridis\",\n      # 1 = valores mais altos recebem cores mais intensas\n      direction = 1\n    )\n  )\n\n\n\nTabela 3: Expectativa de Vida (em anos) por Continente (2007)\n\n\n\n\n\n\nContinente\nExpectativa Média\nExpectativa Mínima\nExpectativa Máxima\n\n\n\n\nOceania\n80,7\n80,2\n81,2\n\n\nEurope\n77,6\n71,8\n81,8\n\n\nAmericas\n73,6\n60,9\n80,7\n\n\nAsia\n70,7\n43,8\n82,6\n\n\nAfrica\n54,8\n39,6\n76,4"
  },
  {
    "objectID": "tutorials/R/index.html#exemplo-típico-em-administração-wide",
    "href": "tutorials/R/index.html#exemplo-típico-em-administração-wide",
    "title": "Introdução à Linguagem R",
    "section": "9.8 Exemplo Típico em Administração (Wide)",
    "text": "9.8 Exemplo Típico em Administração (Wide)\n\n\n\n\n\n\nDados de Vendas Mensais por Categoria e Produto\n\n\n\n\n# formato típico de planilhas gerenciais\ndados_vendas_wide &lt;- tribble(\n  ~produto, ~categoria, ~Jan, ~Fev, ~Mar, ~Abr, ~Mai, ~Jun,\n  \"Notebook Pro\", \"Eletrônicos\", 45000, 38000, 42000, 47000, 52000, 49000,\n  \"Smartphone X\", \"Eletrônicos\", 38000, 41000, 40000, 39000, 45000, 50000,\n  \"Monitor 24pol\", \"Informática\", 22000, 19000, 23000, 25000, 24000, 26000,\n  \"Mouse Gamer\", \"Informática\", 12000, 14000, 13500, 15000, 16000, 17500,\n  \"Mesa Office\", \"Mobiliário\", 28000, 25000, 24000, 26500, 27000, 29000,\n  \"Cadeira Ergo\", \"Mobiliário\", 35000, 32000, 38000, 36000, 39000, 42000\n)\n\n# Visualizando os dados no formato amplo (wide)\ndados_vendas_wide\n\n# A tibble: 6 × 8\n  produto       categoria     Jan   Fev   Mar   Abr   Mai   Jun\n  &lt;chr&gt;         &lt;chr&gt;       &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;\n1 Notebook Pro  Eletrônicos 45000 38000 42000 47000 52000 49000\n2 Smartphone X  Eletrônicos 38000 41000 40000 39000 45000 50000\n3 Monitor 24pol Informática 22000 19000 23000 25000 24000 26000\n4 Mouse Gamer   Informática 12000 14000 13500 15000 16000 17500\n5 Mesa Office   Mobiliário  28000 25000 24000 26500 27000 29000\n6 Cadeira Ergo  Mobiliário  35000 32000 38000 36000 39000 42000"
  },
  {
    "objectID": "tutorials/R/index.html#transformando-para-analise-de-dados",
    "href": "tutorials/R/index.html#transformando-para-analise-de-dados",
    "title": "Introdução à Linguagem R",
    "section": "9.9 Transformando para Analise de Dados",
    "text": "9.9 Transformando para Analise de Dados\n\n\n\n\n\n\nAplicando pivot_longer para organizar os dados\n\n\n\n\n# Transformando os dados para o formato longo (tidy)\ndados_vendas_longo &lt;- dados_vendas_wide %&gt;%\n  pivot_longer(\n    cols = Jan:Jun, # colunas que serão transformadas em valores de mes\n    names_to = \"mes\", # nome da nova coluna\n    values_to = \"valor_vendas\" # nome de outra nova coluna para as vendas\n  )\n\n# Visualizando o resultado\ndados_vendas_longo\n\n# A tibble: 36 × 4\n   produto      categoria   mes   valor_vendas\n   &lt;chr&gt;        &lt;chr&gt;       &lt;chr&gt;        &lt;dbl&gt;\n 1 Notebook Pro Eletrônicos Jan          45000\n 2 Notebook Pro Eletrônicos Fev          38000\n 3 Notebook Pro Eletrônicos Mar          42000\n 4 Notebook Pro Eletrônicos Abr          47000\n 5 Notebook Pro Eletrônicos Mai          52000\n 6 Notebook Pro Eletrônicos Jun          49000\n 7 Smartphone X Eletrônicos Jan          38000\n 8 Smartphone X Eletrônicos Fev          41000\n 9 Smartphone X Eletrônicos Mar          40000\n10 Smartphone X Eletrônicos Abr          39000\n# ℹ 26 more rows\n\n\nAgora os dados estão organizados para análise:\n\nCada linha representa uma combinação única de produto, categoria e mês\nAs vendas mensais estão em uma única coluna (valor_vendas)\nA informação do mês está em uma coluna própria (mes)"
  },
  {
    "objectID": "tutorials/R/index.html#análise-1---nível-básico",
    "href": "tutorials/R/index.html#análise-1---nível-básico",
    "title": "Introdução à Linguagem R",
    "section": "9.10 Análise 1 - Nível Básico",
    "text": "9.10 Análise 1 - Nível Básico\n\n\n\n\n\n\nAnálise da Receita Bruta Mensa de Vendas\n\n\n\n\n# pipeline de análise\nreceita_bruta_mes &lt;- dados_vendas_longo %&gt;%\n  group_by(mes) %&gt;%\n  summarize(vendas_total = sum(valor_vendas)) %&gt;%\n  arrange(desc(vendas_total))\n\n# visualiza o resultado\nreceita_bruta_mes\n\n# A tibble: 6 × 2\n  mes   vendas_total\n  &lt;chr&gt;        &lt;dbl&gt;\n1 Jun         213500\n2 Mai         203000\n3 Abr         188500\n4 Mar         180500\n5 Jan         180000\n6 Fev         169000"
  },
  {
    "objectID": "tutorials/R/index.html#análise-2---nível-básico",
    "href": "tutorials/R/index.html#análise-2---nível-básico",
    "title": "Introdução à Linguagem R",
    "section": "9.11 Análise 2 - Nível Básico",
    "text": "9.11 Análise 2 - Nível Básico\n\n\n\n\n\n\nAnálise das Vendas Mensais de um Produto Específico\n\n\n\n\n# pipeline de análise\nvendas_mensais_notebookpro &lt;- dados_vendas_longo %&gt;%\n  filter(produto == \"Notebook Pro\") %&gt;%\n  select(produto, mes, valor_vendas) %&gt;%\n  arrange(mes)\n\n# visualiza o resultado\nvendas_mensais_notebookpro\n\n# A tibble: 6 × 3\n  produto      mes   valor_vendas\n  &lt;chr&gt;        &lt;chr&gt;        &lt;dbl&gt;\n1 Notebook Pro Abr          47000\n2 Notebook Pro Fev          38000\n3 Notebook Pro Jan          45000\n4 Notebook Pro Jun          49000\n5 Notebook Pro Mai          52000\n6 Notebook Pro Mar          42000"
  },
  {
    "objectID": "tutorials/R/index.html#análise-3---nível-básico",
    "href": "tutorials/R/index.html#análise-3---nível-básico",
    "title": "Introdução à Linguagem R",
    "section": "9.12 Análise 3 - Nível Básico",
    "text": "9.12 Análise 3 - Nível Básico\n\n\n\n\n\n\nAnálise das Vendas Totais por Categoria e Mês\n\n\n\n\n# pipeline de análise\nvendas_totais_categoria_mes &lt;- dados_vendas_longo %&gt;%\n  group_by(categoria, mes) %&gt;%\n  summarize(vendas_totais = sum(valor_vendas)) %&gt;%\n  arrange(desc(vendas_totais))\n\n# visualiza o resultado\nvendas_totais_categoria_mes\n\n# A tibble: 18 × 3\n# Groups:   categoria [3]\n   categoria   mes   vendas_totais\n   &lt;chr&gt;       &lt;chr&gt;         &lt;dbl&gt;\n 1 Eletrônicos Jun           99000\n 2 Eletrônicos Mai           97000\n 3 Eletrônicos Abr           86000\n 4 Eletrônicos Jan           83000\n 5 Eletrônicos Mar           82000\n 6 Eletrônicos Fev           79000\n 7 Mobiliário  Jun           71000\n 8 Mobiliário  Mai           66000\n 9 Mobiliário  Jan           63000\n10 Mobiliário  Abr           62500\n11 Mobiliário  Mar           62000\n12 Mobiliário  Fev           57000\n13 Informática Jun           43500\n14 Informática Abr           40000\n15 Informática Mai           40000\n16 Informática Mar           36500\n17 Informática Jan           34000\n18 Informática Fev           33000"
  },
  {
    "objectID": "tutorials/R/index.html#análise-4---nível-intermediário",
    "href": "tutorials/R/index.html#análise-4---nível-intermediário",
    "title": "Introdução à Linguagem R",
    "section": "9.13 Análise 4 - Nível Intermediário",
    "text": "9.13 Análise 4 - Nível Intermediário\n\n\n\n\n\n\nAnálise do Desempenho mensal por produto\n\n\n\n\n# pipeline\ndesempenho_mensal_produto &lt;- dados_vendas_longo %&gt;%\n  group_by(produto) %&gt;%\n  summarize(\n    vendas_total = sum(valor_vendas),\n    vendas_media = mean(valor_vendas),\n    vendas_min = min(valor_vendas),\n    vendas_max = max(valor_vendas)\n  ) %&gt;%\n  arrange(desc(vendas_total))\n\n# visualiza o resultado\ndesempenho_mensal_produto\n\n# A tibble: 6 × 5\n  produto       vendas_total vendas_media vendas_min vendas_max\n  &lt;chr&gt;                &lt;dbl&gt;        &lt;dbl&gt;      &lt;dbl&gt;      &lt;dbl&gt;\n1 Notebook Pro        273000       45500       38000      52000\n2 Smartphone X        253000       42167.      38000      50000\n3 Cadeira Ergo        222000       37000       32000      42000\n4 Mesa Office         159500       26583.      24000      29000\n5 Monitor 24pol       139000       23167.      19000      26000\n6 Mouse Gamer          88000       14667.      12000      17500"
  },
  {
    "objectID": "tutorials/R/index.html#análise-4---tabela-para-apresentação",
    "href": "tutorials/R/index.html#análise-4---tabela-para-apresentação",
    "title": "Introdução à Linguagem R",
    "section": "9.14 Análise 4 - Tabela para Apresentação",
    "text": "9.14 Análise 4 - Tabela para Apresentação\n\n# Formata a tabela de desempenho por produto com kableExtra\ndesempenho_mensal_produto %&gt;%\n  kable(\n    # Renomeia as colunas para melhor apresentação\n    col.names = c(\n      \"Produto\", \n      \"Vendas Totais (R$)\", \n      \"Média Mensal (R$)\", \n      \"Venda Mínima (R$)\", \n      \"Venda Máxima (R$)\"\n    ),\n    # Formata números com 2 casas decimais\n    digits = 2,\n    # Define vírgula como separador decimal e ponto como separador de milhares\n    format.args = list(decimal.mark = \",\", big.mark = \".\", nsmall = 2)\n  ) %&gt;%\n  # Aplica um estilo clássico e limpo\n  kable_classic_2(\n    # Ajusta o tamanho da fonte\n    font_size = 18,\n    # Define largura para se ajustar melhor ao slide\n    full_width = TRUE,\n    # Centraliza a tabela\n    position = \"center\"\n  ) %&gt;%\n  # Destaca as colunas de valores em negrito\n  column_spec(2:5, bold = TRUE) %&gt;% \n  # Destaca as 3 primeiras linha da tabela\n  row_spec(1:3, bold = T, color = \"white\", background = \"#011f4b\")\n\n\n\nTabela 4: Desempenho mensal de Vendas por produto\n\n\n\n\n\n\nProduto\nVendas Totais (R$)\nMédia Mensal (R$)\nVenda Mínima (R$)\nVenda Máxima (R$)\n\n\n\n\nNotebook Pro\n273.000,00\n45.500,00\n38.000,00\n52.000,00\n\n\nSmartphone X\n253.000,00\n42.166,67\n38.000,00\n50.000,00\n\n\nCadeira Ergo\n222.000,00\n37.000,00\n32.000,00\n42.000,00\n\n\nMesa Office\n159.500,00\n26.583,33\n24.000,00\n29.000,00\n\n\nMonitor 24pol\n139.000,00\n23.166,67\n19.000,00\n26.000,00\n\n\nMouse Gamer\n88.000,00\n14.666,67\n12.000,00\n17.500,00"
  },
  {
    "objectID": "tutorials/R/index.html#análise-5---nível-intermediário",
    "href": "tutorials/R/index.html#análise-5---nível-intermediário",
    "title": "Introdução à Linguagem R",
    "section": "9.15 Análise 5 - Nível Intermediário",
    "text": "9.15 Análise 5 - Nível Intermediário\n\n\n\n\n\n\nIdentificando meses de pico de vendas para cada categoria\n\n\n\n\n# Pipeline para identificar mês de melhor desempenho por categoria\nmeses_pico_categoria &lt;- dados_vendas_longo %&gt;%\n  # Agrupa por categoria e mês\n  group_by(categoria, mes) %&gt;%\n  # Calcula as vendas totais\n  summarize(vendas_totais = sum(valor_vendas)) %&gt;%\n  # Filtra para o mês de maior venda\n  filter(vendas_totais == max(vendas_totais)) %&gt;%\n  # Ordena o resultado pelas vendas totais\n  arrange(desc(vendas_totais))\n\n# visualiza o resultado \nmeses_pico_categoria\n\n# A tibble: 3 × 3\n# Groups:   categoria [3]\n  categoria   mes   vendas_totais\n  &lt;chr&gt;       &lt;chr&gt;         &lt;dbl&gt;\n1 Eletrônicos Jun           99000\n2 Mobiliário  Jun           71000\n3 Informática Jun           43500"
  },
  {
    "objectID": "tutorials/R/index.html#análise-6---nível-intermediário",
    "href": "tutorials/R/index.html#análise-6---nível-intermediário",
    "title": "Introdução à Linguagem R",
    "section": "9.16 Análise 6 - Nível Intermediário",
    "text": "9.16 Análise 6 - Nível Intermediário\n\n\n\n\n\n\nIdentificando meses de pior venda para cada categoria\n\n\n\n\n# Pipeline para identificar mês de pior desempenho por categoria\nmeses_pior_categoria &lt;- dados_vendas_longo %&gt;%\n  # Agrupa por categoria e mês\n  group_by(categoria, mes) %&gt;%\n  # Calcula as vendas totais\n  summarize(vendas_totais = sum(valor_vendas)) %&gt;%\n  # Filtra para o mês de menor venda\n  filter(vendas_totais == min(vendas_totais)) %&gt;%\n  # Ordena o resultado pelas vendas totais\n  arrange(desc(vendas_totais))\n\n# visualiza o resultado \nmeses_pior_categoria\n\n# A tibble: 3 × 3\n# Groups:   categoria [3]\n  categoria   mes   vendas_totais\n  &lt;chr&gt;       &lt;chr&gt;         &lt;dbl&gt;\n1 Eletrônicos Fev           79000\n2 Mobiliário  Fev           57000\n3 Informática Fev           33000\n\n\n\n\n\n9.16.1 Funções which.max() e which.min()\n\n\n\n\n\n\nLocalizando posições de valores máximos e mínimos\n\n\n\nAs funções which.max() e which.min() são extremamente úteis em análise de dados:\n\nwhich.max(x): Retorna a posição (índice) do valor máximo no vetor x\nwhich.min(x): Retorna a posição (índice) do valor mínimo no vetor x\n\nExemplo simples:\n\n# Vetor de valores\nvendas_mensais &lt;- c(120, 150, 140, 160, 110, 130)\n\n# Qual a posição do valor máximo?\nposicao_max &lt;- which.max(vendas_mensais)\nposicao_max\n\n[1] 4\n\n# Qual o valor máximo?\nvendas_mensais[posicao_max]\n\n[1] 160\n\n# Supondo que temos nomes para os meses\nnomes_meses &lt;- c(\"Jan\", \"Fev\", \"Mar\", \"Abr\", \"Mai\", \"Jun\")\n\n# Em qual mês ocorreu a venda máxima?\nmes_maior_venda &lt;- nomes_meses[which.max(vendas_mensais)]\nmes_maior_venda\n\n[1] \"Abr\"\n\n\nEstas funções são perfeitas para encontrar quando ocorreram eventos importantes nos seus dados (máximos, mínimos, picos) em vez de apenas quais foram os valores."
  },
  {
    "objectID": "tutorials/R/index.html#análise-7---nível-avançado",
    "href": "tutorials/R/index.html#análise-7---nível-avançado",
    "title": "Introdução à Linguagem R",
    "section": "9.17 Análise 7 - Nível Avançado",
    "text": "9.17 Análise 7 - Nível Avançado\n\n\n\n\n\n\nIdentificando os Meses de Maior e Menor Venda por Produto\n\n\n\n\n# Pipeline de análise para identificar os meses de pico e vale por produto\nresumo_comparativo_produto &lt;- dados_vendas_longo %&gt;%\n  # Agrupa os dados por produto para analisar cada um separadamente\n  group_by(produto) %&gt;%\n  # Para cada produto, calculamos:\n  summarize(\n    # 1. Qual o mês da maior venda:\n    # - which.max(valor_vendas) encontra a POSIÇÃO da maior venda\n    # - mes[which.max(valor_vendas)] seleciona o nome do mês de maior venda\n    melhor_mes = mes[which.max(valor_vendas)],\n\n    # 2. Qual foi o valor da maior venda\n    maior_venda = max(valor_vendas),\n\n    # 3. Qual o mês da menor venda (mesma lógica do melhor mês)\n    pior_mes = mes[which.min(valor_vendas)],\n\n    # 4. Qual foi o valor da menor venda\n    menor_venda = min(valor_vendas)\n  )\n\n# Visualiza o resultado\nresumo_comparativo_produto\n\n# A tibble: 6 × 5\n  produto       melhor_mes maior_venda pior_mes menor_venda\n  &lt;chr&gt;         &lt;chr&gt;            &lt;dbl&gt; &lt;chr&gt;          &lt;dbl&gt;\n1 Cadeira Ergo  Jun              42000 Fev            32000\n2 Mesa Office   Jun              29000 Mar            24000\n3 Monitor 24pol Jun              26000 Fev            19000\n4 Mouse Gamer   Jun              17500 Jan            12000\n5 Notebook Pro  Mai              52000 Fev            38000\n6 Smartphone X  Jun              50000 Jan            38000\n\n\nExplicação do código:\n\nPrimeiro agrupamos por produto para realizar a análise para cada item\nA função which.max(valor_vendas) retorna a posição (índice) do valor máximo\nAo usar mes[which.max(valor_vendas)], extraímos o nome do mês na posição com valor máximo\nEste tipo de análise é essencial para identificar padrões sazonais de produtos\n\nEste relatório permite identificar rapidamente quais meses foram melhores e piores para cada produto - informação valiosa para planejamento de estoque e promoções.\nAssim, esta análise permite otimizar o planejamento de estoque e ações promocionais sazonais."
  },
  {
    "objectID": "tutorials/R/index.html#análise-7---tabela-para-apresentação",
    "href": "tutorials/R/index.html#análise-7---tabela-para-apresentação",
    "title": "Introdução à Linguagem R",
    "section": "9.18 Análise 7 - Tabela para Apresentação",
    "text": "9.18 Análise 7 - Tabela para Apresentação\n\n\n\n\nTabela 5: Meses de Maior e Menor Venda por Produto\n\n\n\n\n \n  \n    Produto \n    Melhor Mês \n    Maior Venda (R$) \n    Pior Mês \n    Menor Venda (R$) \n  \n \n\n  \n    Cadeira Ergo \n    Jun \n    42.000,00 \n    Fev \n    32.000,00 \n  \n  \n    Mesa Office \n    Jun \n    29.000,00 \n    Mar \n    24.000,00 \n  \n  \n    Monitor 24pol \n    Jun \n    26.000,00 \n    Fev \n    19.000,00 \n  \n  \n    Mouse Gamer \n    Jun \n    17.500,00 \n    Jan \n    12.000,00 \n  \n  \n    Notebook Pro \n    Mai \n    52.000,00 \n    Fev \n    38.000,00 \n  \n  \n    Smartphone X \n    Jun \n    50.000,00 \n    Jan \n    38.000,00"
  },
  {
    "objectID": "tutorials/R/index.html#dados-em-seu-ambiente-de-trabalho",
    "href": "tutorials/R/index.html#dados-em-seu-ambiente-de-trabalho",
    "title": "Introdução à Linguagem R",
    "section": "9.19 Dados em Seu Ambiente de Trabalho",
    "text": "9.19 Dados em Seu Ambiente de Trabalho\n\n\n\n\n\n\nReflexão\n\n\n\nConsidere os dados com os quais você já trabalha ou espera trabalhar em sua carreira:\n\nQue tipos de dados desorganizados você encontra ou espera encontrar?\n\nRelatórios gerenciais?\nPlanilhas financeiras?\nArquivos de sistemas ERP/CRM?\n\nComo esses dados poderiam ser melhor organizados para análise?\n\nQuais são as verdadeiras “observações” nesses dados?\nQuais são as verdadeiras “variáveis”?\n\nQuais insights de negócio você poderia extrair se esses dados estivessem organizados adequadamente?\n\nPadrões temporais?\nComparações entre unidades/produtos/regiões?\nCorrelações entre diferentes métricas?\n\nComo você aplicaria o conhecimento desta aula em um exemplo concreto do seu interesse profissional?\n\n\nDica para sua carreira: Manter um repositório pessoal de códigos R para transformações comuns que você encontra no seu trabalho pode economizar horas de trabalho repetitivo no futuro."
  },
  {
    "objectID": "publications/index.html",
    "href": "publications/index.html",
    "title": "Published Papers",
    "section": "",
    "text": "Published Papers\n\n\n\n\n\n\n\n   \n    \n    \n      Order By\n      Default\n      \n        Date - Oldest\n      \n      \n        Date - Newest\n      \n      \n        Title\n      \n      \n        Author\n      \n    \n  \n    \n      \n      \n    \n\n\n\n\n  \n    Washington Santos da Silva, Bruno César de Melo Moreira, Raquel Aparecida Soares Franco. (2024) Efeito de cotas para ingresso e de fatores socioeconômicos sobre o desempenho acadêmico de estudantes em um curso técnico integrado: um estudo de caso. Revista Eletrônica de Educação, 18(1).\n  \n\n  \n    Lélis Pedro de Andrade, Washington Santos da Silva, Daniel Fonseca Costa, Bruno César de Melo Moreira, Adriano Olímpio Tonelli. (2024) Financial Flexibility and Stock Return of Brazilian Companies: Evidence During the COVID-19 Crisis. Revista Evidenciação Contábil & Finanças, 11(2).\n  \n\n  \n    Natan Felipe Silva, Lélis Pedro de Andrade, Washington Santos da Silva, Maísa Kely de Melo, Adriano Olímpio Tonelli. (2024) Portfolio optimization based on the pre-selection of stocks by the Support Vector Machine model. Finance Research Letters, 61,  105014.\n  \n\n  \n    Daniel Fonseca Costa, Bruno César de Melo Moreira, Washington Santos da Silva, Lélis Pedro de Andrade. (2023) Overconfidence in Managerial Decision-Making among Brazilian Accountants and Managers: An Experimental Study.  Business Management and Strategy, 14:2, 39-70.\n  \n\n  \n    Taynara Cardoso Ribeiro, Lélis Pedro Andrade, Washington Santos da Silva, Bruno César de Melo Moreira, Daniel Fonseca Costa. (2021) Determinantes pelo Prêmio pelo Direito de Voto no Mercado de Ações Brasileiro. Revista de Gestão, Finanças e Contabilidade, 11:2, 4-21.\n  \n\n  \n    Thiago Augusto da Costa Silva, Marcos de Paula Jr., Washington Santos da Silva, Gustavo Augusto Lacorte. (2021) Can moderate heavy metal soil contaminations due to cement production influence the surrounding soil bacterial communities?. Ecotoxicology, 31, 134-148.\n  \n\n  \n    Thiago Augusto da Costa Silva, Marcos de Paula Jr., Washington Santos da Silva, Gustavo Augusto Lacorte. (2021) Deposition of Potentially Toxic Metals in the Soil from Surrounding Cement Plants in a Karst Area of Southeastern Brazil. Conservation, 1(3), 137-150.\n  \n\n  \n    Daniel Fonseca Costa, Bruno César de Melo Moreira, Francisval de Melo Carvalho, Washington Santos da Silva. (2020) Anchoring effect in managerial decision-making in accountants and managers: an experimental study. Revista Brasileira de Estratégia, 11:3, 425-445.\n  \n\n  \n    Daniel Fonseca Costa, Francisval de Melo Carvalho, Bruno César de Melo Moreira, Washington Santos da Silva. (2020) Viés de confirmação na tomada de decisão gerencial: um estudo experimental com gestores e contadores. Revista de Contabilidade e Organizações, 11:2, 4-21.\n  \n\n  \n    Nayara Teixeira Santos, Gisele Tessari Santos, Washington Santos da Silva, Wanyr Romero Ferreira (2020) A System Dynamics Model for Sales and Operations Planning: An Integrated Analysis for the Lime Industry. International Journal of System Dynamics Applications, 9:1, 1-17.\n  \n\n  \n    Natália Duarte de Medeiros, Francisval de Melo Carvalho, Caio Peixoto Chain, Gideon Carvalho de Benedicto, Washington Santos da Silva (2018) Capital Structure and Information Asymmetry: A Study of Brazilian Publicly Traded Companies of Testile and Electricity Industries. Revista de Administração da Universidade Federal de Santa Maria, 11:2, 268-289.\n  \n\n  \n    Cassia M. B. Nobre, Roberto A. Braga. Jr, Antônio G. Costa, R. R. Cardoso, Washington Santos da Silva, Thelma Sáfadi. (2009) Biospeckle laser spectral analysis under Inertia Moment, Entropy and Cross-Spectrum methods. Optics Communications, 282:11, 2236-2242.\n  \n\n  \n    Roberto A. Braga. Jr, Washington Santos da Silva, Thelma Sáfadi, Cassia M. B. Nobre (2008) Time history speckle pattern under statistical view. Optics Communications, 281:9, 2443-2448.\n  \n\n  \n    Wanderci Alves Bitencourt, Washington Santos Silva, Thelma Sáfadi. (2006) Hedge dinâmicos: Uma evidência para os contratos futuros brasileiros. Organizações Rurais & Agroindustriais, 8:1, 71-78.\n  \n\n  \n    Washington Santos da Silva, Thelma Sáfadi, Luiz Gonzaga de Castro Júnior. (2005) Uma análise empírica da volatilidade do retorno de commodities agrícolas utilizando modelos ARCH: os casos do café e da soja. Revista de Economia e Sociologia Rural, 43:1, 119-134.\n  \n\n\n\nNo matching items"
  },
  {
    "objectID": "blog/p01/tempo.html",
    "href": "blog/p01/tempo.html",
    "title": "Tempo",
    "section": "",
    "text": "“O problema é que você acha que tem tempo”\n— Jack Kornfield"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site"
  },
  {
    "objectID": "blog/index.html",
    "href": "blog/index.html",
    "title": "Blog",
    "section": "",
    "text": "Tempo\n\n\n\n\n\n\n\n\n28 fevereiro 2025\n\n\n\n\n\nNenhum item correspondente"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Washington S. da Silva",
    "section": "",
    "text": "Curriculum Lattes  ORCID  Google Scholar\n\n\n\nI am a Full Professor and Researcher at the Federal Institute of Education, Science and Technology of Minas Gerais - Campus Formiga, Minas Gerais, Brazil."
  },
  {
    "objectID": "teaching/index.html",
    "href": "teaching/index.html",
    "title": "Disciplinas Ministradas",
    "section": "",
    "text": "Período: 2025.1"
  },
  {
    "objectID": "teaching/index.html#introdução-à-ciência-de-dados---mestrado-profissional-em-administração",
    "href": "teaching/index.html#introdução-à-ciência-de-dados---mestrado-profissional-em-administração",
    "title": "Disciplinas Ministradas",
    "section": "",
    "text": "Período: 2025.1"
  },
  {
    "objectID": "teaching/index.html#introdução-à-ciência-de-dados---bacharelado-em-administração",
    "href": "teaching/index.html#introdução-à-ciência-de-dados---bacharelado-em-administração",
    "title": "Disciplinas Ministradas",
    "section": "Introdução à Ciência de Dados - Bacharelado em Administração",
    "text": "Introdução à Ciência de Dados - Bacharelado em Administração\nPeríodo: 2025.1"
  },
  {
    "objectID": "teaching/index.html#métodos-quantitativos-aplicados-à-administração",
    "href": "teaching/index.html#métodos-quantitativos-aplicados-à-administração",
    "title": "Disciplinas Ministradas",
    "section": "Métodos Quantitativos Aplicados à Administração",
    "text": "Métodos Quantitativos Aplicados à Administração"
  },
  {
    "objectID": "teaching/index.html#visualização-de-dados",
    "href": "teaching/index.html#visualização-de-dados",
    "title": "Disciplinas Ministradas",
    "section": "Visualização de Dados",
    "text": "Visualização de Dados"
  },
  {
    "objectID": "teaching/index.html#análise-multivariada",
    "href": "teaching/index.html#análise-multivariada",
    "title": "Disciplinas Ministradas",
    "section": "Análise Multivariada",
    "text": "Análise Multivariada"
  },
  {
    "objectID": "teaching/index.html#previsão-de-séries-temporais",
    "href": "teaching/index.html#previsão-de-séries-temporais",
    "title": "Disciplinas Ministradas",
    "section": "Previsão de Séries Temporais",
    "text": "Previsão de Séries Temporais"
  },
  {
    "objectID": "tutorials/dbca/index.html",
    "href": "tutorials/dbca/index.html",
    "title": "Delineamento em Blocos Completos Aleatorizados (DBCA)",
    "section": "",
    "text": "Os conceitos a seguir foram baseados em Casella (2008).\n\n\n\n\n\n\nUnidade Experimental\n\n\n\nA unidade experimental é a unidade (sujeito, planta, vaso, animal…) que é atribuído aleatoriamente a um tratamento.\n\n\nA unidade experimental, como o nome indica, é a unidade básica do experimento, e define a unidade a ser replicada para aumentar os graus de liberdade. Na definição de unidade experimental, a frase “atribuída aleatoriamente” é de importância crucial.\n\n\n\n\n\n\nUnidade de Amostragem\n\n\n\nUma unidade de amostragem é o objeto que é medido em um experimento. Pode ser diferente da unidade experimental.\n\n\n\n\n\n\n\n\nRepetição\n\n\n\nO princípio da repetição consiste em aplicarm o mesmo tratamento a várias unidades experimentais em um mesmo experimento.\n\n\nO princípo da repetição permite obter a variação entre unidades experimentais, ou seja, permite obter uma estimativa do erro experimental.\n\n\n\n\n\n\nAleatorização\n\n\n\nTalvez o princípio mais fundamental da experimentação seja a aleatorização, ou seja, obter as observações (ou, mais precisamente, as unidades experimentais) em um forma aleatória que é tão livre de viés quanto possível.\n\n\nA ideia básica da aleatorização é que, dado um delineamento, a atribuição das unidades experimentais aos tratamentos deve ser escolhida aleatoriamente, com igual probabilidade, entre todas as atribuições possíveis. Essa estratégia resulta em uma amostra aleatória simples.\nA atribuição aleatória de unidades experimentais a tratamentos deve resultar nos seguintes resultados desejáveis:\nEliminação de viés sistemático. O viés vem em muitas formas, e algumas delas são desconhecidas. Alguns exemplos são gradientes de luz ou temperatura, tendência de entrevistador em pesquisas e outras ocorrências. A aleatorização é uma maneira de quebrar um efeito sistemático.\nObtenção de uma amostra representativa. O objetivo final em qualquer experimento é fazer uma inferência válida para uma população, portanto, os dados devem ser representativos dessa população. A aleatorização é necessária para se obter uma amostra representativa.\nControla variáveis ou fatores de confundimento\nFatores de confundimento existem em todas os experimentos. Por exemplo, considere um experimento com seres humanosp para testar o efeito de dietas na pressão arterial, medida em 12 indivíduos. Embora possamos recrutar sujeitos com um estado geral de saúde semelhante, fatores de confundimento como estilo de vida, raça, disposição genética ou muitos outros fatores podem influenciar os resultados.\nApesar de ser possível controlar alguns fatores de confundmento, tal como raça, outros fatores são incontroláveis, e até mesmo desconhecidos, como a disposição genética. A aleatorização ajudará a distribuir essa variação desconhecida ao longo do experimento, quebrando a influência do fator de confundimento."
  },
  {
    "objectID": "tutorials/dbca/index.html#conceitos-básicos",
    "href": "tutorials/dbca/index.html#conceitos-básicos",
    "title": "Delineamento em Blocos Completos Aleatorizados (DBCA)",
    "section": "",
    "text": "Os conceitos a seguir foram baseados em Casella (2008).\n\n\n\n\n\n\nUnidade Experimental\n\n\n\nA unidade experimental é a unidade (sujeito, planta, vaso, animal…) que é atribuído aleatoriamente a um tratamento.\n\n\nA unidade experimental, como o nome indica, é a unidade básica do experimento, e define a unidade a ser replicada para aumentar os graus de liberdade. Na definição de unidade experimental, a frase “atribuída aleatoriamente” é de importância crucial.\n\n\n\n\n\n\nUnidade de Amostragem\n\n\n\nUma unidade de amostragem é o objeto que é medido em um experimento. Pode ser diferente da unidade experimental.\n\n\n\n\n\n\n\n\nRepetição\n\n\n\nO princípio da repetição consiste em aplicarm o mesmo tratamento a várias unidades experimentais em um mesmo experimento.\n\n\nO princípo da repetição permite obter a variação entre unidades experimentais, ou seja, permite obter uma estimativa do erro experimental.\n\n\n\n\n\n\nAleatorização\n\n\n\nTalvez o princípio mais fundamental da experimentação seja a aleatorização, ou seja, obter as observações (ou, mais precisamente, as unidades experimentais) em um forma aleatória que é tão livre de viés quanto possível.\n\n\nA ideia básica da aleatorização é que, dado um delineamento, a atribuição das unidades experimentais aos tratamentos deve ser escolhida aleatoriamente, com igual probabilidade, entre todas as atribuições possíveis. Essa estratégia resulta em uma amostra aleatória simples.\nA atribuição aleatória de unidades experimentais a tratamentos deve resultar nos seguintes resultados desejáveis:\nEliminação de viés sistemático. O viés vem em muitas formas, e algumas delas são desconhecidas. Alguns exemplos são gradientes de luz ou temperatura, tendência de entrevistador em pesquisas e outras ocorrências. A aleatorização é uma maneira de quebrar um efeito sistemático.\nObtenção de uma amostra representativa. O objetivo final em qualquer experimento é fazer uma inferência válida para uma população, portanto, os dados devem ser representativos dessa população. A aleatorização é necessária para se obter uma amostra representativa.\nControla variáveis ou fatores de confundimento\nFatores de confundimento existem em todas os experimentos. Por exemplo, considere um experimento com seres humanosp para testar o efeito de dietas na pressão arterial, medida em 12 indivíduos. Embora possamos recrutar sujeitos com um estado geral de saúde semelhante, fatores de confundimento como estilo de vida, raça, disposição genética ou muitos outros fatores podem influenciar os resultados.\nApesar de ser possível controlar alguns fatores de confundmento, tal como raça, outros fatores são incontroláveis, e até mesmo desconhecidos, como a disposição genética. A aleatorização ajudará a distribuir essa variação desconhecida ao longo do experimento, quebrando a influência do fator de confundimento."
  },
  {
    "objectID": "tutorials/dbca/index.html#visão-geral",
    "href": "tutorials/dbca/index.html#visão-geral",
    "title": "Delineamento em Blocos Completos Aleatorizados (DBCA)",
    "section": "Visão Geral",
    "text": "Visão Geral\nEm muitas situações sabemos que as unidades experimentais não são homogêneas, e fazer o uso explícito da estrutura especial das unidades experimentais geralmente ajuda a reduzir o erro experimental (Meier (2022)).\nEm um curso de estatística básica, aprendemos como aplicar o teste t emparelhado. Esse teste é utilizado em situações em que dois tratamentos são aplicados no mesmo “objeto” ou “sujeito”. Pense, por exemplo, na aplicação de dois tratamentos, em paralelo, em seres humanos, como a aplicação de dois tipos de colírios diferentes, cada um aplicado em um dos dois olhos.\nSabemos que os indivíduos podem ser muito diferentes, mas devido ao fato de aplicarmos ambos os tratamentos no mesmo indivíduo, obtemos uma imagem clara do efeito do tratamento em cada indivíduo, tomando a diferença dos valores da variável resposta correspondentes aos dois tratamentos.\nIsso faz com que a variabilidade de sujeito para sujeito seja muito reduzida. Também dizemos que bloqueamos os sujeitos ou que um sujeito individual é um bloco.\nSob uma abordagem mais geral, conforme Montgomery (2001), podemos afirmar que em qualquer experimento, a variabilidade proveniente de um fator de perturbação pode afetar os resultados.\nEm geral, definimos um fator de perturbação como um fator do delineamento que, provavelmente tem um efeito sobre a variável resposta (y), mas em cujo efeito o experimentador não está interessado. Assim, a variabilidade que ele pode transmitir para a variável resposta deve ser minimizada.\nEm alguns experimentos, o fator de perturbação é desconhecido e incontrolável, isto é, não sabemos se o fator está afetando a variável resposta e se os seus níveis são os mesmos durante a realização do experimento. O princípio da experimentação que denominamos aleatorização é a técnica que permite ao experimentador proteger o experimento desse fator de perturbação à espreita.\nEm outros casos, o fator de perturbação é conhecido, mensurável, mas incontrolável. Se o experimentador conseguir pelo menos observar os valores desse fator em cada execução do experimento, ele pode ser incorporado na análise pela técnica denominada Análise de Covariância\nQuando o fator de perturbação da variabilidade é conhecido e controlável, o experimentador utiliza a técnica denominada blocagem para minimizar ou reduzir sistematicamente seu efeito sobre as comparações das médias dos tratamentos. A blocagem é uma técnica de experimentação extremamente importante e usada extensivamente.\nFatores de perturbação, conhecidos e controláveis, são chamados de blocos. O objetivo da blocagem é tornar um ambiente heterogêneo em subambientes homogêneos.\nFatores de perturbação (blocos) típicos incluem localização, o tempo, se um experimento é realizado em diferentes períodos de tempo (dia, semestre, ano etc.), pessoas, etc.\nEm inglês, um delineamento em blocos completamente aleatorizados (DBCA) pode ser traduzidp por Randomized Complete Block Design (RCBD). O que significa cada termo?\n\nRandomized: os tratamentos sáo atribuídos aleatoriamente dentro de cada bloco.\nComplete: Todos os tratamentos estão presentes em todos os bloco e cada tratamento é utilizado o mesmo número de vezes, geralmente uma vez, dentro de cada bloco.\nBlock: as unidades experimentais são agrupadas de forma a criar subgrupos homogênos.\nDesign: É o seu experimento.\n\n\n\n\n\n\n\nExemplo\n\n\n\nUm estudo no qual os participantes são, inicialmente, divididos em blocos (subconjuntos relativamente homogêneos) de acordo com alguma característica (por exemplo, idade) que não é um foco de interesse e são então atribuídos, aleatoriamente, aos diferentes tratamentos de tal forma que cada tratamento aparece uma vez em cada bloco.\nAssim, o número de participantes em cada bloco deve ser igual ao número de níveis do tratamento. Por exemplo, o seguinte arranjo de um tratamento com quatro níveis (A, B, C, D) e 16 indivíduos (de quatro grupos etários) é um delineamento em blocos completos:\n\n\n\n\nTratamentos\n\n\n\n\n\n\n\nBloco\n\n\n\n\n\n\ncriancas\nA\nB\nC\nD\n\n\nadolescentes\nB\nC\nD\nA\n\n\nadultos\nC\nD\nA\nB\n\n\nidosos\nD\nA\nB\nC\n\n\n\nAo garantir que o fator de perturbação (aqui, idade) seja igualmente representado em todos as condições experimentais, um DBC reduz ou elimina sua contribuição para o erro experimental."
  },
  {
    "objectID": "tutorials/dbca/index.html#dbca-modelo-linear-normal---efeitos-fixos.",
    "href": "tutorials/dbca/index.html#dbca-modelo-linear-normal---efeitos-fixos.",
    "title": "Delineamento em Blocos Completos Aleatorizados (DBCA)",
    "section": "DBCA: Modelo Linear Normal - Efeitos Fixos.",
    "text": "DBCA: Modelo Linear Normal - Efeitos Fixos.\nO modelo estatístico linear associado a um DBCA pode ser representado por,\n\ny_{ij} = \\mu + \\tau_i + \\beta_j + \\epsilon_{ij}, \\, \\text{sendo}\\, \\epsilon_{ij} \\sim i.i.d \\quad N(0,\\sigma^2)\n    \\begin{cases}\n    i = 1,\\ldots,a \\\\\n    j =  1,\\ldots,b\n    \\end{cases}\n Sendo:\n\\mu = média global de y.\n\\tau_i = efeito em y_{i.} devido ao tratamento i. Ou seja, o efeito do tratamento i. Sáo também denominados como efeitos principais.\n\\beta_j = efeito (sem interesse) do bloco j.\ny_{ij} = resposta observada na unidade j devida ao tratamento i.\n\\epsilon_{ij} = erro não observado (ou erro experimental).\nO DBCA é um modelo linear, portanto, assume que entre os blocos e os níveis dos fatores."
  },
  {
    "objectID": "tutorials/dbca/index.html#dbca-tabela-da-análise-da-variância---efeitos-fixos",
    "href": "tutorials/dbca/index.html#dbca-tabela-da-análise-da-variância---efeitos-fixos",
    "title": "Delineamento em Blocos Completos Aleatorizados (DBCA)",
    "section": "DBCA: Tabela da Análise da Variância - Efeitos Fixos",
    "text": "DBCA: Tabela da Análise da Variância - Efeitos Fixos\n\\begin{array}{l|l|l|l|l}\n        \\hline\n\\text{Fonte de Variação} & \\text{gl}  & \\text{SQ}        & \\text{QM}                       & F_{calculado} \\\\\n        \\hline\n        \\text{tratamentos}  & a-1        & SQ_{tratamentos}  & \\frac{SQ_{tratamentos}}{a-1}    & \\frac{QM_{tratamentos}}{QM_{resíduos}}    \\\\\n        \\text{blocos}       & b-1        & SQ_{blocos}       & \\frac{SQ_{blocos}}{b-1}         &                 \\\\\n        \\text{resíduo}      & (a-1)(b-1) & SQ_{resíduo}      & \\frac{SQ_{resíduo}}{(a-1)(b-1)} &                 \\\\\n        \\hline\n        \\text{total}        & ab - 1    & SQ_{total}         &                                 &                 \\\\\n        \\hline\n\\end{array}\nF_{tabelado}=F_{\\nu_1 = (a-1), \\nu_2 = (a-1)(b-1)}.\n\n\n\n\n\n\nEstimador do Erro Experimental\n\n\n\nO quadrado médio do resíduo:\n\nQM_{resíduo} = \\frac{SQ_{resíduo}}{(a-1)(b-1)}\n é o estimador do erro experimental no contexto deste modelo de um DBCA.\n\n\nConsiderando que são a níveis do fator de interesse e b blocos. A hipótese de interesse é:\n\n\\begin{cases}\nH_o:  & \\mu_1 = \\mu_2 = \\ldots = \\mu_a \\,\\, \\text{(as médias dos tratamentos são iguais)}  \\\\\nH_a:  & \\text{Pelo menos duas médias são diferentes}\n\\end{cases}\n\nRegras de Decisão do teste F:\nSe F_{calculado} &gt; F_{tabelado}, rejeitamos a hipótese nula de que as médias dos tratamentos são iguais, caso contrátio, náo rejeitamos a hipótese nula, dado o nível de significância \\alpha escolhido.\nEntretanto, a alternativa mais comum para interpretar o resultado do teste F é utilizar o valor-p do teste. Por exemplo, caso adote-se \\alpha = 0.05 = 5%, a regra de decisão é:\n\nSe valor-p &lt; 0.05, o teste fornece evidência para rejeitar a hipótese nula de que as médias dos tratamentos são iguais.\nSe valor-p &gt; 0.05, o teste fornece evidência para rejeitar a hipótese nula de que as médias dos tratamentos são iguais."
  },
  {
    "objectID": "tutorials/dbca/index.html#sumário-das-principais-características-de-um-dbc",
    "href": "tutorials/dbca/index.html#sumário-das-principais-características-de-um-dbc",
    "title": "Delineamento em Blocos Completos Aleatorizados (DBCA)",
    "section": "Sumário das Principais Características de um DBC",
    "text": "Sumário das Principais Características de um DBC\nUso:\n\nApropriado quando se tem um fator de perturbação atuando sobre a variável resposta.\nO ideal é que cada tratamento ocorra em cada bloco o mesmo número de vezes, usualmente uma vez.\nDeve-se minimizar a variação dentro de cada bloco e maximizar a variação entre os blocos.\n\nVantagens:\n\nControla um fator de perturbação (conhecido e controlável) que pode atuar sobre a variável resposta (tempo, temperatura etc.), aumentando a precisão do experimento, ou seja, reduzindo o erro experimental.\nUm DBCA pode acomodar qualquer número de tratamentos e qualquer número de blocos. Entretanto, o ideal é que cada tratamento seja replicado o mesmo número de vezes em cada bloco.\nUtilizando blocos com diferentes condições, os resultados do experimento podem ter uma amplitude maior.\nA análise estatística é simples.\n\nDesvantagens:\n\nDados faltantes reduzem o poder dos testes e a cobertura dos intervalos de confiança.\nSe existir mais de uma fator de perturbação, conhecido e controlável, a utilização do DBCA é ineficiente.\nSe as condições experimentais forem de fato homogêneas, um delineamento inteiramente aleatorizado é mais eficiente que o DBCA.\nNa medida em que aumenta-se o número de tratamentos, mais itens heterogêneos podem ser utilizados e a blocagem correta torna-se cada vez mais complexa, neste caso outros delineamentos podem ser mais eficientes."
  },
  {
    "objectID": "tutorials/dbca/index.html#etapas-da-análise-de-um-dbca",
    "href": "tutorials/dbca/index.html#etapas-da-análise-de-um-dbca",
    "title": "Delineamento em Blocos Completos Aleatorizados (DBCA)",
    "section": "Etapas da Análise de um DBCA",
    "text": "Etapas da Análise de um DBCA\n\nEstruturação e Importação do Arquivo de Dados.\nAnálise Exploratória dos Dados\nEstimação do Modelo Linear Normal da ANOVA.\nDiagnóstico do Modelo (verificar as hipóteses do modelo linear normal).\nComparações Múltiplas.\n\nAs etapas típicas da análise dos dados produzidos por um DBCA serão ilustradas pela resolução das questões (1 a 9) associadas ao seguinte experimento:"
  },
  {
    "objectID": "tutorials/dbca/index.html#análise",
    "href": "tutorials/dbca/index.html#análise",
    "title": "Delineamento em Blocos Completos Aleatorizados (DBCA)",
    "section": "Análise",
    "text": "Análise\nVamos ilustrar a análise de dados de um experimento que utilizou um DBCA utilizando o seguinte experimento:\n\n\n\n\n\n\nExperimento\n\n\n\nTrês soluções de lavagem estão sendo comparadas para avaliar a sua eficiência em retardar o crescimento de bactérias em containers de leite. A Análise é feita em um laboratório, e apenas três ensaios podem ser executados em qualquer dia. O experimentador decide usar um delineamento em blocos completos aleatorizados (DBCA). As observações são tomadas durante quatro dias, e os dados são apresentados na tabela abaixo.\n\n\n\n1. Identifique o bloco (fator de perturbação), o fator de interesse (tratamento) e seus níveis e a variável resposta deste experimento. Além disso, descreva o modelo linear do experimento.\n\nFator de Perturbação/Blocos: dias.\nFator de Interesse/Tratamento: soluções para lavagem de containers de leite.\nNíveis do Fator de Interesse/Tratamento: As três soluções de lavagem distintas\nvariável Resposta (y)]: O crescimento, medido pela contagem, de bactérias\n\nSendo o crescimento (contagem) de bactérias a variável resposta e representada por y_{ij}, as solucões testadas os tratamentos e representados por sol, os quatro dias os blocos e representados por dia, podemos representar o modelo linear do experimento como:\n\ny_{ij} = \\mu +\n                      \\tau_1 sol_{1} +\n                      \\tau_2 sol_{2} +\n                      \\tau_3 sol_{3} +\n                      \\beta_{1}dia_{1} +\n                      \\beta_{2}dia_{2} +\n                      \\beta_{3}dia_{3} +\n                      \\beta_{4}dia_{4} +\n                      \\epsilon_{ij}\n\n\n\n2. Estruturação e Importação do Arquivo de Dados\nA estrutura correta de um arquivo de dados para o caso de um experimento que utilizou um DBCA é ilustrada a seguir:\n\n\n\n\n\nsolucao\ndia\ny\n\n\n\n\nS1\nD1\n13\n\n\nS1\nD2\n22\n\n\nS1\nD3\n18\n\n\nS1\nD4\n39\n\n\nS2\nD1\n16\n\n\nS2\nD2\n24\n\n\nS2\nD3\n17\n\n\nS2\nD4\n44\n\n\nS3\nD1\n5\n\n\nS3\nD2\n4\n\n\nS3\nD3\n1\n\n\nS3\nD4\n22\n\n\n\n\n\nConsiderando que o script R que contém seus código para analisa os dados\nestão em uma pasta qualquer contendo uma subpasta denominada dado que contem seu arquivo de dados, para importar, por exemplo, um arquivo texto separado por tabulações denominado solucao.txt, pode-se utilizar o seguinte código\n\n# Pacotes utilizados\nlibrary(readr)\nlibrary(dplyr)\n\n# Importando os dados\ndados &lt;- read_tsv(\"dados/solucao.txt\", col_names = TRUE)\n\n# Verificando os dados\nglimpse(dados)\n\nRows: 12\nColumns: 3\n$ solucao &lt;chr&gt; \"S1\", \"S1\", \"S1\", \"S1\", \"S2\", \"S2\", \"S2\", \"S2\", \"S3\", \"S3\", \"S…\n$ dia     &lt;chr&gt; \"D1\", \"D2\", \"D3\", \"D4\", \"D1\", \"D2\", \"D3\", \"D4\", \"D1\", \"D2\", \"D…\n$ y       &lt;dbl&gt; 13, 22, 18, 39, 16, 24, 17, 44, 5, 4, 1, 22\n\n\nEm experimentos, em geral, fatores (ou tratamentos) são variáveis categóricas, como usamos a linguagem R, é melhor converter o tratamento (solucao) e os blocos (dia) para a classe factor para efetuar a análise dos dados. Essa conversão pode ser obtida usando a função transmute do pacote dplyr:\n\n# pacote utlizado\nlibrary(ggplot2)\n\ndados &lt;- dados %&gt;% transmute(solucao = as.factor(solucao),\n                             dia = as.factor(dia),\n                             y = as.numeric(y))\n\nglimpse(dados)\n\nRows: 12\nColumns: 3\n$ solucao &lt;fct&gt; S1, S1, S1, S1, S2, S2, S2, S2, S3, S3, S3, S3\n$ dia     &lt;fct&gt; D1, D2, D3, D4, D1, D2, D3, D4, D1, D2, D3, D4\n$ y       &lt;dbl&gt; 13, 22, 18, 39, 16, 24, 17, 44, 5, 4, 1, 22\n\n\nCom esses passsos, os dados foram importados e estruturados em um formato adequado para a análise.\n\n\n3. Faça uma Análise Exploratória dos Dados\n\n\n\n\n\n\nDica: Análise Exploratória dos Dados\n\n\n\nUma Análise Exploratória dos Dados com gráficos e estatísticas, é uma parte importante de qualquer análise para:\n\nentender as propriedades dos dados.\nestruturar os dados no formato adequado para análise.\nencontrar padrões nos dados.\ndescrever os dados/fenômeno.\nidentificar erros nos dados.\nsugerir estratégias de modelagem.\ndepurar análises.\ncomunicar resultados.\n\n\n\nUm boxplot comparativo das distribuições é o gráfico exploratório usual para explorar dados envolvendo uma variável numérica e uma ou mais variáveis categóricas.\nEntretanto, um boxplot requer uma amostra considerável (50 observações por grupo pelo menos), e caso seja utilizado em amostras pequenas, tende distorcer ou ocultar as propriedades da distribuição.\nPara amostras menores, como a do experimento em questão um gráfico de violino (violin plot) é mais adequado e tende a retratar melhor as propriedades das distribuições por grupo (no caso, por tratamento).\nPara produzir um gráfico de violino usando o pacote ggplot2, podemos utilizar a função geom_violin() e o seguinte código:\n\n# Violin plot entre y e solucao\n\nggplot(dados, aes(x = solucao, y = y)) + \n   geom_violin() +  \n   stat_summary(fun.y = \"median\", geom = \"point\", size = 2, color = \"red\") + \n   xlab(\"\") + \n   ylab(\"crescimento (quantidade) de bactérias\") + \n   geom_jitter(shape  = 16, position = position_jitter(0.2)) + \n   scale_x_discrete(labels = c(\"S1\" = \"Solução 1\", \n                               \"S2\" = \"Solução 2\",\n                               \"S3\" = \"Solução 3\")) +\n   theme_minimal()\n\n\n\n\n\n\n\nFig. 1. Gráfico de violino comparativo entre a medida de crescimento de bactérias e as soluções testadas. O ponto vermelho representa a mediana dos dados e os pontos pretos os dados.\n\n\n\n\n\nObservando a Figura 1, pode-se verificar que a solução 3, aparentemente, foi a que apresentou a maior redução no crescimento de bactérias nos containers de leite. Além disso, parece não haver diferença entre os resultados produzidos pelas soluções 1 e 2. Por fim, a Figura 1 mostra que as distribuições dos dados três soluções apresentam assimetria positiva devido a possíveis outliers nas distribuições dos resultados das três soluções.\n\n4. Estimação do Modelo Linear Normal.\nA estimação do modelo linear normal associado a um DBCA consiste, basicamente, na obtenção da tabela da Análise da Variância apropriada. No caso do DBCA d experimento que estamos analisando, podemos obtê-la com o seguinte código:\n\n# Estimação do Modelo com blocagem dos dias\nmod_dbca &lt;- aov(y ~ solucao + dia, data = dados)\nsummary(mod_dbca)\n\n            Df Sum Sq Mean Sq F value   Pr(&gt;F)    \nsolucao      2  703.5   351.8   40.72 0.000323 ***\ndia          3 1106.9   369.0   42.71 0.000192 ***\nResiduals    6   51.8     8.6                     \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\nA tabela da ANOVA resultante lista inicialmente os fatores analisados que estão sendo testadas no modelo, neste caso, temos solucao (tratamento ou fator de interesse) e dia (bloco ou fator de perturbação) e os resíduos do modelo (Residuals). Toda a variação que não é explicada pelos tratamentos e pelos blocos está incorporada na variância residual.\nA seguir descrevemos as colunas da tabela da ANOVA obtida:\n\nDf: A coluna Df exibe os graus de liberdade para a variável independente (o número de níveis na variável menos 1) e os graus de liberdade para os resíduos (o número total de observações menos um e menos o número de níveis nas variáveis independentes).\nSum Sq: A coluna Sum Sq exibe a partição da soma de quadrados total dos dados efetuada pela ANOVA.\nMean Sq: A coluna Mean Sq são os quadrados médios associados aos fatores em análise e aos resíduos, calculados dividindo-se a soma dos quadrados pelos respectivos graus de liberdade associados a cada fator e aos resíduos do modelo.\nF value: A coluna F value é a estatística de teste do teste F, obtida pela divisão do quadrado médio de cada fator pelo quadrado médio dos resíduos. Quanto maior o valor F, maior a probabilidade de que a variação causada pelos tratamentos seja real e não devida ao acaso, ou à variabilidade natural do fenômeno.\nPr(&gt;F): A coluna Pr(&gt;F) é o valor-p do teste F, que estima a probabilidade de obtermos a estatística do teste F calculada a partir dos dados ter ocorrido, se a hipótese nula de nenhuma diferença entre os médias dos tratamentos fosse verdadeira. Portanto, quanto menor o valor-p, em relação ao nível de significância adotado (em geral, \\alpha = 0.05), maior a chance de rejeitarmos a hipótese nula de que não há diferença entre as médias dos tratamentos, e vice-versa.\n\nComo o valor-p associado ao teste F entre as médias de contatem de bactérias das soluções testadas foi 0,0003, os dados fornecem forte evidência para rejeitarmos a hipótese nula de que as médias dos tratamentos são iguais.\nTamanho do Efeito\nTornou-se um padrão reportar tamanhos de efeitos em artigos científicos de diversas áreas, por diversas razões, para uma visão geral recomendo Cohen (1988), Fritz, Morris e Richler (2012) e Ferguson ([s.d.]). Para analisar uma visão de sua importâcnia em economica comportamental veja Hummel e Maedche (2019).\nPara ilustrar o conceito de tamanho do efeito para uma Análise da Variância, no contexto do experimento analisado, podemos perguntar inicialmente qual é a porcentagem da variação total no crescimento de bactérias associada aos tratamentos (soluções de lavagem). Esta medida é chamada de Eta-quadrático (\\eta^{2}):\n\n\\eta^2 = \\frac{SQ_{tratamento}}{SQ_{total}} = \\frac{703.5}{703.5 + 1106.9 + 51.8} =\n0.38 = 38\\%\n Podemos utilizar a função eta_squared() do pacote effectsize para estimar o \\eta^{2}:\n\n# Estimação dos tamanhos de efeitos\neffectsize::eta_squared(mod_dbca, partial = FALSE)\n\n# Effect Size for ANOVA (Type I)\n\nParameter | Eta2 |       95% CI\n-------------------------------\nsolucao   | 0.38 | [0.00, 1.00]\ndia       | 0.59 | [0.00, 1.00]\n\n- One-sided CIs: upper bound fixed at [1.00].\n\n\nQuando adicionamos mais termos ao modelo que estamos analisando (lembrando que no experimento que estamos anlisando temos um fator de interesse (tratamento) e um fator de perturbação (blocos)) podemos fazer uma pergunta diferente: qual a porcentagem da variação é explicada ao controlar quaisquer outros fatores.\n\n\\eta^{2}_p = \\frac{SQ_{tratamento}}{SQ_{tratamento} + SQ_{resíduo}} = \\frac{703.5}{703.5 + 51.8} = 0.93 = 93\\%\n\nEssa última pergunta é respondida pelo Eta-parcial quadrático \\eta^{2}_{p}, que é a porcentagem da variância parcial (após controlar outros fatores no modelo) associada a um fator.\nEm outras palavras, \\eta^{2}_{p} descreve a proporção de variação associada a um fator quando a variação associada a todos os outros efeitos incluídos no modeo foi removida.\nNovamente, podemos utiizar a função eta_squared(..., partial = TRUE) do pacote effectsize para estimar o \\eta^{2}_p:\n\n# Estimação dos tamanhos de efeitos\neffectsize::eta_squared(mod_dbca, partial = TRUE)\n\n# Effect Size for ANOVA (Type I)\n\nParameter | Eta2 (partial) |       95% CI\n-----------------------------------------\nsolucao   |           0.93 | [0.75, 1.00]\ndia       |           0.96 | [0.83, 1.00]\n\n- One-sided CIs: upper bound fixed at [1.00].\n\n\nNa falta de conhecimento mais profundo e de outras referências, a regra de bolso (Cohen (1988)) para a interpretação da magnitude de \\eta^{2}_p é:\n\n\\eta^{2}_p \\approx 0.01 indica um efeito fraco ou pequeno.\n\\eta^{2}_p \\approx 0.06 indica um efeito moderado.\n\\eta^{2}_p \\approx 0.16 indica um efeito forte ou grande.\n\n\n\n\n5. Diagnóstico do modelo.\nUma das partes mais importantes da análise dos dados de um DBCA (e dos demais delineamentos), consiste em verificar se o modelo linear normal utilizado é adequado.\nEm geral, no caso de um DBCA, precisamos verificar:\n\nA validade da hipótese da normalidade aproximada dos resíduos do modelo,\nA validade da hipótese da variância dos resíduos ser aproximadamente constante (ou homogênea) em relação aos tratamentos.\nA validade da hipótese de aditividade do modelo linear normal, isto é, de que não há interação entre blocos e tratamentos.\n\n\n5.1 Verificação da normalidade dos resíduos\nÉ sempre importante analisar gráficos dos resíduos de modelos estatísticos, entretanto, infelizmente, não é usual reportar esses gráficos nos artigos científicos, prática que depoe contra o artigo e as práticas da revista.\nAlém da relevância, em si, de se analisar gráficos dos resíduos, sua importância deve-se também às conhecidas limitações dos testes de hipóteses formais comumente utilizados e reportados nas revistas.\nGrágico Quantil-Quantil dos Resíduos\nPodemos utilizar a função ggqqplot() do pacote ggpubr para produzirmos um gráfico quantil-quantil dos resíduos. Além dos resíduos, a função produz intervalos de confiança, caso os resíduos estejam dentro da região cinza, que representa os intervalos de confiança, temos evidência de que os resíduos seguem uma distribuição aproximadamente normal.\nPara o experimento em questão tempos:\n\n# pacote utilizado\nlibrary(ggpubr)\n\n# Gráfico quantil-quantil dos resíduos\nggqqplot(residuals(mod_dbca)) + \n  xlab(\"quantis teóricos de uma distribuição normal padrão\") + \n  ylab(\"resíduos\")\n\n\n\n\n\n\n\nFig. 2. Gráfico quantil-quantil para analisar a normalidade dos resíduos.\n\n\n\n\n\nAnalisando a Figura 2, é fácil verificar que os resíduos estão situados dentro da região de confiança (95%), portanto podemos considerar a distribuição dos resíduos compatível com uma distribuição normal padrão aproximada.\nTeste de Shapiro-Wilk de normalidade dos resíduos\nUm dos testes mais comumente utlizados para testar formalmente se os resíduos de um modelo linear experimental são aproximadamente normais é o teste de Shapiro-Wilk.\nDe forma simplificada, podemos dizer que a hipótese nula do teste é que os resíduos são, aproximadamente, normalmente distribuídos. Assim, se o valor-p do teste for menor que o nível de significância escolhido (\\alpha), então a hipótese nula é rejeitada e há evidências de que os resíduos testados não são normalmente distribuídos.\nPor outro lado, se o valor-p for maior que o nível de significância escolhido, a hipótese nula (de que os dados vieram de uma população normalmente distribuída) não pode ser rejeitada. Por exemplo, para um nível \\alpha de 0,05, um valor p inferior a 0,05 implica na rejeição da hipótese nula de que os dados são de uma população com distribuição (aproximadamente) normalmente distribuída.\nPara o experimento que estamos analisando, podemos executar o teste de Shapiro-Wilk utilizando a função interna shapiro.test():\n\n#### Teste de Shapiro-Wilks\nshapiro.test(mod_dbca$residuals)\n\n\n    Shapiro-Wilk normality test\n\ndata:  mod_dbca$residuals\nW = 0.93208, p-value = 0.4027\n\n\nConsiderando \\alpha = 0.05, como o valor-p do teste é muito superior ao nível de significância escolhido, os dados fornecem forte evidência para não rejeitarmos a hipótese nula de que os resíduos seguem uma distribuição aproximadamente normal.\n\n\n5.2 Verificação da constância aproximada da variância dos resíduos\nPara testar a hipóteses de constância da variância dos resíduos entre os níveis dos tratamentos, as três soluções no caso, recomendo utilizar a função interna fligner.test() que implementa o teste de constância da variância de Fligner-Killeen.\nA recomendação deve-se ao fato de que o teste Fligner-Killeen foi considerado, em um estudo de simulação, como um dos testes de homogeneidade de variâncias mais robustos contra desvios da normalidade, ver Conover, Johnson & Johnson (1981).\n\n#### Teste de Bartlett: variancia homogenea pelo tratamento\nfligner.test(y ~ solucao, data = dados)\n\n\n    Fligner-Killeen test of homogeneity of variances\n\ndata:  y by solucao\nFligner-Killeen:med chi-squared = 1.4915, df = 2, p-value = 0.4744\n\n\nConsiderando \\alpha = 0.05, como o valor-p do teste é muito superior ao nível de significância escolhido, os dados fornecem forte evidência para não rejeitarmos a hipótese nula de que os resíduos possuem variância constante (ou homogênea) entre as diferentes soluções (tratamentos) testadas.\n\n\n5.3 Verificando se há interação entre bloco e tratamento\nO modelo estatístico linear normal utilizado para um DBCA:\n\ny_{ij} = \\mu + \\tau_i + \\beta_j + \\epsilon_{ij},\n\né completamente aditivo, isto é, os efeitos devidos aos tratamentos e aos blocos são adicionados, e não multiplicados, por exemplo. Apesar deste modelo aditivo simples ser frequentemente útil, há situações nas quais ele é inadequado.\nEspecificamente, o modelo aditivo é inadequado em situações nas quais há interação entre tratamentos e blocos. Interações podem ocorrer, por exemplo, quando a variável resposta (y_{ij}) é medida na escala errada. Assim, se uma relação que é multiplicativa na escala original, digamos:\n\nE(y_{ij}) = \\mu \\tau_i \\beta_j\n\nela pode ser tornada aditiva (ou linear) utilizando uma escala logarítimica:\n\n\\ln(E(y_{ij})) = \\ln(\\mu) + \\ln(\\tau_i) + \\ln(\\beta_j)\n\nEste tipo de interação pode ser eliminada pela transformação logaritmica, entretanto, nem todas as interações pode ser tratadas tão facilmente.\nSe interações estão presentes, elas podem afetar seriamente e até invalidar a Análise da Variância de um experimento. Em geral, a presença de interações, infla o quadrado médio do resíduo e podem afetar adversamente a comparação entre as médias dos tratamentos.\nQuando ambos os fatores sào de interesse (o que não é o caso em um DBCA), pode-se utilizar delineamentos fatoriais para incorporar o efeito de interações.\nHá métodos gráficos e o teste de hipóteses formal de aditividade de Tukey para verificar a presença de interação.\nMétodo Gráfico\nUm gráfico de interação exibe a média (ou outra estatística) da variável resposta contra combinações dos fatores (blocos e tratamentos), ilustrando assim possíveis interações. A função interna interaction.plot() da linguagem R pode ser utilizad para produzir este gráfico, a sintáxe da função para o exeperimento que estamos analisando é:\n\n# Verificando Interação entre Blocos e níveis do Fator (solucao)\ninteraction.plot(dados$dia, dados$solucao, dados$y, fixed = TRUE)   \n\n\n\n\n\n\n\nFig. 3. Gráfico de interação entre a média da variável resposta e combinaçòes das soluções (tratamento) e dias (blocos).\n\n\n\n\n\nIdealmente, as linhas de um gráfico de interação devem ser paralelas, ou seja, não devem se cruzar. Apesar da Figura 3 exibir um cruzamento, não parece haver uma interação relevante entre as solucões (tratamentos) e os dias (blocos). Uma limitaçào desse gráfico é que ele reflete possíveis imprecisões (alta variabilidade) nas estimativas das médias, o que parece ser o caso nesse experimento devido ao pequeno tamanho da amostra e à possível presença de outliers.\nTeste de Aditividade de Tukey\nO teste de aditividade de Tukey testa as seguintes hipóteses:\n\n\\begin{cases}\nH_o:  & \\text{efeitos principais e blocos são aditivos,}  \\\\\nH_a:  & \\text{efeitos principais e blocos são não-aditivos}\n\\end{cases}\n Podemos utilizar a função tukey.add.test(variável resposta, tratamentos, blocos) do pacote asbio para executar esse teste. No caso do experimento em análise temos:\n\n# Testa H0: Não há efeito de interação\nasbio::tukey.add.test(dados$y, dados$solucao, dados$dia)\n\n\nTukey's one df test for additivity \nF = 2.7732343   Denom df = 5    p-value = 0.1567331\n\n\nComo o valor-p do teste (0.16) é maior que \\alpha = 0.05, não rejeitamos a hipótese nula de que os efeitos principais (\\tau_i) e os blocos (\\beta_j) são aditivos, isto é, o resultado do teste fornece evidência de que não há interação entre blocos e tratamento.\n\n\n\n6. Os resultados indicaram diferenças entre os crescimentos médios de bactérias produzidos pelas três soluções?\nUma Análise da Variância dos resultados do delineamento em blocos completos executado foi conduzida para comparar o efeito de três diferentes soluções de lavagem sobre o crescimento de bactérias em containers de leite. A ANOVA indicou que houve uma diferença entre pelo menos duas soluções [ F(2, 6) = 40.72, p &lt; .001, \\eta^2_p = .93]. A análise dos resíduos indicou a adequação do modelo utilizado.\n\n\n7. Qual solução deveria ser recomendada? Utilize os testes de Fisher e Tukey.**\nComo a ANOVA indicou diferenças entre o crescimento (quantidade) média de bactérias entre as soluções testadas, dos laboratórios, surgem outras perguntas:\n\nQuais soluçóes apresentaram médias estatisticamente iguais e quais apresentaram médias estatisticamente iguais?\nQual solução apresentou o melhor resultado? Ou seja, apresentou a maior redução no crescimento de bactérias nos containers de leite?\nNecessitamos de procedimentos de comparações múltiplas de médias para responder estas questões.\n\nEntre os dois mais utilizados, temos os testes de Fisher e de Tukey.\nTeste de Fisher\nDuas médias de tratamentos são estatisticamente diferentes segundo o teste da diferença mínima significativa (dms) de Fisher se:\n\n|\\bar{y}_i - \\bar{y}_j| \\geq dms = t_{(\\alpha, gl_{resíduos})} \\sqrt{\\frac{2QM_{resíduos}}{J}}\n\nsendo gl_{resíduos} o grau de liberdade do resíduo:\n\nO teste de Fisher requer que o teste F da ANAVA tenha rejeitado a hipótese nula de igualdade entre as médias de tratamentos de forma a controlar o erro tipo I\nEste teste é liberal, no sentido de que possui grande poder e erro tipo I maior que um teste mais conservador.\n\n\n### Teste de Fisher\nagricolae::LSD.test(mod_dbca, \n                    \"solucao\", \n                    alpha = 0.05, \n                    p.adj = \"fdr\", \n                    console = TRUE)\n\n\nStudy: mod_dbca ~ \"solucao\"\n\nLSD t Test for y \nP value adjustment method: fdr \n\nMean Square Error:  8.638889 \n\nsolucao,  means and individual ( 95 %) CI\n\n       y       std r       se      LCL      UCL Min Max   Q25  Q50   Q75\nS1 23.00 11.284207 4 1.469599 19.40402 26.59598  13  39 16.75 20.0 26.25\nS2 25.25 12.996794 4 1.469599 21.65402 28.84598  16  44 16.75 20.5 29.00\nS3  8.00  9.486833 4 1.469599  4.40402 11.59598   1  22  3.25  4.5  9.25\n\nAlpha: 0.05 ; DF Error: 6\nCritical Value of t: 2.446912 \n\nMinimum Significant Difference: 5.085484 \n\nTreatments with the same letter are not significantly different.\n\n       y groups\nS2 25.25      a\nS1 23.00      a\nS3  8.00      b\n\n\nTeste de Tukey\nDuas médias de tratamentos são estatisticamente diferentes segundo o teste de Tukey se:\n\n|\\bar{y}_i - \\bar{y}_j| \\geq dhs = q_{(\\alpha, I, gl_{resíduos})} \\sqrt{\\frac{QM_{resíduos}}{J}}\n\nEste teste é muito conservador, ou seja tem o menor poder em relação a testes liberais e o menor erro tipo I.\n\n### Teste de Tukey\nTukeyHSD(mod_dbca, \n         \"solucao\", \n         conf.level = 0.95)\n\n  Tukey multiple comparisons of means\n    95% family-wise confidence level\n\nFit: aov(formula = y ~ solucao + dia, data = dados)\n\n$solucao\n        diff        lwr        upr     p adj\nS2-S1   2.25  -4.126879   8.626879 0.5577862\nS3-S1 -15.00 -21.376879  -8.623121 0.0008758\nS3-S2 -17.25 -23.626879 -10.873121 0.0004067\n\n\nNo caso do experimento analisado, os dois testes produziram os mesmos resultados:\n\no crescimento médio de bactérias devido às soluções 1 e 2 são estatisticamente iguais. Médias identificadas com a mesma letra representam esse fato, apresentam a letra a no caso.\no crescimento médio de bactérias produzido pela solução 3 é estatisticamente diferente das médias produzidas pelas soluções 1 e 2, repare que apenas a média produzida pela solução 3 contém a letra b.\n\nPortanto, a solução recomendada, com fundamento nos resultados do experimento, seria a solução 3.\n\n\n8. Comunicando os resultados finais da análise.\nA forma de reportar análises estatísticas depende da área do conhecimento e da revista científica específica. Entretanto, o padrão definido pelo American Psychological Association (Cooper (2018)) é bastante utilizado em ciëncias comportamentais. Seguindo o padrão APA, as conclusões da análise do experimento seriam aproximadamente como se segue:\nUma Análise da Variância dos resultados do delineamento em blocos completos executado foi conduzida para comparar o efeito de três diferentes soluções de lavagem sobre o crescimento de bactérias em containers de leite. A ANOVA indicou que houve uma diferença entre pelo menos duas soluções [F(2, 6) = 40.72, p &lt; .001, \\eta^2_p = .93]. A análise dos resíduos indicou a adequação do modelo utilizado.\nComparações post hoc usando o teste de Tukey indicaram que o crescimento médio de bactérias após a aplicação da solução 3 foi significativamente diferente dos resultados obtidos com a solução 1 [p &lt; 0.001, IC 95%. = [-21,38, -8,62] e com a solução 2 [p &lt; 0.001, IC 95%. = [-23,63, -10,87].\nNão houve diferença estatisticamente significativa entre o crescimento médio de bactérias produzidos pelas soluções 1 e 2 [p &lt; 0,5578, IC 95%. = [-4,13, -8,63].\n\n\n9. Utilize um Método Não-Paramétrico\nEm construção"
  },
  {
    "objectID": "tutorials/dbca/index.html#referências",
    "href": "tutorials/dbca/index.html#referências",
    "title": "Delineamento em Blocos Completos Aleatorizados (DBCA)",
    "section": "Referências",
    "text": "Referências\n\n\nCASELLA, G. Statistical Design. [s.l.] Springer, 2008.\n\n\nCOHEN, J. Statistical power analysis for the behavioral sciences. 2. ed. [s.l.] Routledge, 1988.\n\n\nCOOPER, H. Reporting quantitative research in psychology: How to meet APA style journal article reporting standards. [s.l.] American Psychological Association, 2018.\n\n\nFERGUSON, C. J. Methodological issues and strategies in clinical research. Em: KAZDIN, A. E. (Ed.). [s.l.] American Psychological Association, [s.d.].\n\n\nFRITZ, C. O.; MORRIS, P. E.; RICHLER, J. J. Effect size estimates: current use, calculations, and interpretation. Journal of Experimental Psychology: General, v. 141, n. 1, p. 2, 2012.\n\n\nHUMMEL, D.; MAEDCHE, A. How effective is nudging? A quantitative review on the effect sizes and limits of empirical nudging studies. Journal of Behavioral and Experimental Economics, v. 80, p. 47–58, 2019.\n\n\nMEIER, L. ANOVA and Mixed Models: A Short Introduction Using R. [s.l.] CRC Press, 2022.\n\n\nMONTGOMERY, D. C. Design and Analysis of Experiments. 5. ed. [s.l.] John Wiley & sons, 2001."
  },
  {
    "objectID": "tutorials/index.html",
    "href": "tutorials/index.html",
    "title": "Tutoriais",
    "section": "",
    "text": "Ciência de Dados Reproduzível e Auditável\n\n\n\nEsta página reúne tutoriais desenvolvidos no âmbito do projeto de pesquisa denominado “Aplicação de Modelos de Aprendizagem Estatística e de Máquina em Finanças: Desenvolvimento de Soluções Reproduzíveis e Auditáveis”, vinculado ao Mestrado Profissional em Administração do IFMG - Campus Formiga.\nOs materiais disponibilizados têm como objetivo principal fornecer ferramentas e metodologias essenciais para a realização de análises de dados reproduzíveis e auditáveis, seguindo as melhores práticas recomendadas pela literatura científica. Eles são direcionados, em primeiro lugar, aos alunos do Bacharelado em Administração e do Mestrado Profissional em Administração do IFMG - Campus Formiga, mas também podem ser úteis para profissionais como administradores, economistas, contabilistas, auditores e outros que desejam adotar ferramentas modernas no mundo corporativo e no setor público.\nEstes tutoriais são especialmente úteis para disciplinas como Introdução à Ciência de Dados, Econometria, entre outras, e podem ser utilizados como material de treinamento para participantes de projetos de pesquisa quantitativa. A abordagem proposta busca ensinar ferramentas que viabilizam a adoção efetiva do princípio da reprodutibilidade, permitindo que os resultados sejam replicados e verificados. Isso não apenas aumenta a credibilidade do trabalho realizado, mas também contribui para a adoção de práticas robustas e alinhadas com os padrões científicos contemporâneos.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nRStudio: Ambiente de Desenvolvimento Integrado para a Linguagem R\n\n\n\nAmbiente de Desenvolvimento Integrado\n\nReprodutibilidade\n\nRStudio\n\nSistema Quarto\n\n\n\nUm tutorial básico sobre o RStudio, um ambiente de desenvolvimento integrado simples e eficiente para a linguagem R.\n\n\n\n\n\n7 dezembro 2024\n\n\n\n\n\n\n\nQuarto: Um Sistema de Publicação Técnica e Científica\n\n\n\nSistema Quarto\n\nReprodutibilidade\n\nRStudio\n\n\n\nUm tutorial sobre como utilizar o sistema de pubicação Quarto e a linguagem R usando o IDE RStudio.\n\n\n\n\n\n7 outubro 2024\n\n\n\n\n\n\n\nMarkdown: Elementos Essenciais para Documentos do Sistema Quarto\n\n\n\nMarkdown\n\nLinguagem de Marcação\n\nReprodutibilidade\n\n\n\nUm tutorial simples sobre a linguagem de marcação Markdown para elaboração de documentos no sistema Quarto.\n\n\n\n\n\n5 setembro 2024\n\n\n\n\n\n\n\nIntrodução à Linguagem R\n\n\n\nR\n\nReprodutibilidade\n\n\n\nUm tutorial básico sobre a linguagem R para Ciência de Dados.\n\n\n\n\n\n7 julho 2024\n\n\n\n\n\n\n\nControle de Versão com Git e GitHub\n\n\n\nControle de versão\n\nGit\n\nGitHub\n\nReprodutibilidade\n\n\n\nUm tutorial básico sobre o uso do sistema de controle de versão Git e sobre o GitHub.\n\n\n\n\n\n7 junho 2024\n\n\n\n\n\nSem itens correspondentes"
  },
  {
    "objectID": "tutorials/quarto/index.html#metadados",
    "href": "tutorials/quarto/index.html#metadados",
    "title": "Quarto: Um Sistema de Publicação Técnica e Científica",
    "section": "3.1 Metadados",
    "text": "3.1 Metadados\nO arquivo mínimo gerado pelo RStudio, exibido na Fig. 6, contém apenas um cabeçalho, mais precisamente, contém um cabeçalho YAML simples (mais detalhes a seguir), o qual é demarcado por três traços (—) em cada extremidade.\nO código acima constitui um exemplo do uso da linguagem de marcação YAML (de “Yet Another Markup Language”) para fornecer metadados aos documentos gerados com Quarto. A sintaxe de YAML usa pares chave-valor no formato key: value.\nOutros campos YAML comumente encontrados em cabeçalhos de arquivos quarto incluem metadados como author, title, date, bem como opções de personalização como theme, entre diversas outras.\nDe forma mais detalhada, os metadados do cabeçalho YAML consistem:\n\n\n\n\n… de pares chave-valor (key-value),\n… que podem aninhar,\n… que ão exigentes quanto ao recuo,\n… e são mantidos entre ---.\n\n\n\n---\nformat: \n  html:\n    toc: true\n    code-fold: true\n---"
  },
  {
    "objectID": "tutorials/quarto/index.html#sintáxe-yaml",
    "href": "tutorials/quarto/index.html#sintáxe-yaml",
    "title": "Quarto: Um Sistema de Publicação Técnica e Científica",
    "section": "3.2 Sintáxe YAML",
    "text": "3.2 Sintáxe YAML\n\n\n---\ntitle: \"Título do Document\"\nauthor:\n  - Santos Dummont\n  - Albert Einstein\nformat:\n  html:\n    toc: true\n    abstract: |\n      Aqui vai o abstract.\n\n     Tem dois parágrafos.\n---\n\n\n\nDefinindo um único valor com\nkey: value\nDefinindo uma lista de valores:\nkey:\n  - value1\n  - value2\nindente 2 espaços para aninhar\nSequências de caracteres de várias linhas seguem |"
  },
  {
    "objectID": "tutorials/quarto/index.html#atenção-yaml-é-exigente-com-indentação",
    "href": "tutorials/quarto/index.html#atenção-yaml-é-exigente-com-indentação",
    "title": "Quarto: Um Sistema de Publicação Técnica e Científica",
    "section": "3.3 Atenção! YAML é Exigente com Indentação",
    "text": "3.3 Atenção! YAML é Exigente com Indentação\nInválidos\n\n\n---\nformat:html\n---\n\n\n---\nformat:\nhtml\n---\n\n\n---\nformat: \n  html:\n---\n\nVálidos\nformat: html\n\n\nformat:\n  html\n\n\nformat: \n  html:\n    toc: true"
  },
  {
    "objectID": "tutorials/quarto/index.html#opções-dos-cabeçalhos-yaml",
    "href": "tutorials/quarto/index.html#opções-dos-cabeçalhos-yaml",
    "title": "Quarto: Um Sistema de Publicação Técnica e Científica",
    "section": "3.4 Opções dos Cabeçalhos YAML",
    "text": "3.4 Opções dos Cabeçalhos YAML\nAs opções que podem ser usadas nos cabeçalhos YAML de um arquivo quarto dependem do formato final do documento a ser produzido.\nNesta seção, são explicadas algumas das principais opções disponíveis para os formatos HTML e pdf, que são os principais formatos que utilizamos na disciplina Introdução à Ciência de Dados.\n\n3.4.1 Algumas Opções Disponíveis para Arquivos HTML\nOs arquivos HTML gerados pelo Quarto oferecem diversas opções de personalização. Aqui estão algumas das mais úteis:\n\n\n\n\n\n\n\n\nOpção\nDescrição\nExemplo de Uso\n\n\n\n\ntheme\nDefine o tema visual do documento\ntheme: cosmo\n\n\nembed-resources\nIncorpora todos recursos no arquivo HTML\nembed-resources: true\n\n\ntoc\nAtiva o índice do documento\ntoc: true\n\n\ntoc-depth\nDefine a profundidade do índice\ntoc-depth: 3\n\n\ntoc-location\nDefine a posição do índice\ntoc-location: left\n\n\ncode-fold\nPermite recolher/expandir blocos de código\ncode-fold: true\n\n\ncode-tools\nAdiciona ferramentas para copiar código\ncode-tools: true\n\n\ncode-line-numbers\nAdiciona números às linhas de código\ncode-line-numbers: true\n\n\n\nExemplo de uso no cabeçalho YAML:\nformat:\n  html:\n    theme: cosmo\n    embed-resources: true\n    toc: true\n    toc-depth: 3\n    toc-location: left\n    code-fold: true\n    code-tools: true"
  },
  {
    "objectID": "tutorials/quarto/index.html#algumas-opções-disponíveis-para-arquivos-pdf",
    "href": "tutorials/quarto/index.html#algumas-opções-disponíveis-para-arquivos-pdf",
    "title": "Quarto: Um Sistema de Publicação Técnica e Científica",
    "section": "3.5 Algumas Opções Disponíveis para Arquivos PDF",
    "text": "3.5 Algumas Opções Disponíveis para Arquivos PDF\nO Quarto pode gerar documentos PDF de alta qualidade, usando o sistema Typst ou LaTeX como motor de renderização. Aqui estão algumas opções úteis para personalização de documentos PDF:\n\n\n\n\n\n\n\n\nOpção\nDescrição\nExemplo de Uso\n\n\n\n\npapersize\nDefine o tamanho do papel\npapersize: a4\n\n\nfontsize\nDefine o tamanho da fonte\nfontsize: 12pt\n\n\nlinestretch\nDefine o espaçamento entre linhas\nlinestretch: 1.5\n\n\nlinkcolor\nDefine a cor dos links\nlinkcolor: \"blue\"\n\n\nlof\nAtiva lista de figuras\nlof: true\n\n\nlot\nAtiva lista de tabelas\nlot: true\n\n\n\nExemplo de uso no cabeçalho YAML para Typst:\nformat:\n  typst:\n    papersize: a4\n    fontsize: 12pt\n    number-sections: true\n    linkcolor: \"blue\""
  },
  {
    "objectID": "tutorials/quarto/index.html#criando-uma-célula-de-código",
    "href": "tutorials/quarto/index.html#criando-uma-célula-de-código",
    "title": "Quarto: Um Sistema de Publicação Técnica e Científica",
    "section": "5.1 Criando uma Célula de Código",
    "text": "5.1 Criando uma Célula de Código\nVocê pode adicionar uma célula de código de três maneiras:\n\nUsando o atalho de teclado: Ctrl+Alt+I (Windows/Linux) ou Cmd+Option+I (Mac).\nClicando no ícone C “Insert a new code chunk” na barra superior de ferramentas do RStudio e selecionando “R”.\nDigitando manualmente os delimitadores de célula: ```{r} e `````."
  },
  {
    "objectID": "tutorials/quarto/index.html#exemplo-de-uma-célula-de-código-básica",
    "href": "tutorials/quarto/index.html#exemplo-de-uma-célula-de-código-básica",
    "title": "Quarto: Um Sistema de Publicação Técnica e Científica",
    "section": "5.2 Exemplo de uma Célula de Código Básica",
    "text": "5.2 Exemplo de uma Célula de Código Básica\n```{r}\n# Este é um exemplo de célula de código R\nx &lt;- 1:10\nmean(x)\n```"
  },
  {
    "objectID": "tutorials/quarto/index.html#opções-de-célula-de-código-no-quarto",
    "href": "tutorials/quarto/index.html#opções-de-célula-de-código-no-quarto",
    "title": "Quarto: Um Sistema de Publicação Técnica e Científica",
    "section": "5.3 Opções de Célula de Código no Quarto",
    "text": "5.3 Opções de Célula de Código no Quarto\nO Quarto usa um formato de YAML dentro das células de código, com cada opção precedida por #|. Este formato é diferente do R Markdown e oferece maior clareza e flexibilidade:\n```{r}\n#| echo: true\n#| warning: false\n#| message: false\n\n# Esta célula mostrará o código (echo: true), \n# mas ocultará avisos (warning) e mensagens\nlibrary(dplyr)\nmtcars %&gt;% \n  group_by(cyl) %&gt;%\n  summarise(\n    n = n(),\n    mpg_média = mean(mpg, na.rm = TRUE)\n  )\n```"
  },
  {
    "objectID": "tutorials/quarto/index.html#opções-comuns-para-células-de-código-no-quarto",
    "href": "tutorials/quarto/index.html#opções-comuns-para-células-de-código-no-quarto",
    "title": "Quarto: Um Sistema de Publicação Técnica e Científica",
    "section": "5.4 Opções Comuns para Células de Código no Quarto",
    "text": "5.4 Opções Comuns para Células de Código no Quarto\n\n\n\n\n\n\n\nOpção\nDescrição\n\n\n\n\necho\nControla se o código é exibido (true) ou oculto (false)\n\n\neval\nDefine se o código deve ser executado (true) ou não (false)\n\n\nwarning\nControla a exibição de avisos durante a execução\n\n\nmessage\nControla a exibição de mensagens durante a execução\n\n\nerror\nDefine se erros devem ser exibidos (true) ou parar a renderização (false)\n\n\nfig-width\nDefine a largura da figura de saída em polegadas\n\n\nfig-height\nDefine a altura da figura de saída em polegadas\n\n\nfig-cap\nAdiciona uma legenda à figura resultante\n\n\nlabel\nAtribui um identificador único à célula, útil para referência cruzada"
  },
  {
    "objectID": "tutorials/quarto/index.html#exemplo-com-figura-e-legenda",
    "href": "tutorials/quarto/index.html#exemplo-com-figura-e-legenda",
    "title": "Quarto: Um Sistema de Publicação Técnica e Científica",
    "section": "5.5 Exemplo com Figura e Legenda",
    "text": "5.5 Exemplo com Figura e Legenda\n```{r}\n#| label: fig-1\n#| fig-cap: \"Relação entre Consumo na Estrada e na Cidade por Cilindrada\"\n#| fig-width: 8\n#| fig-height: 6\n\nlibrary(ggplot2)\nggplot(mpg, aes(x = hwy, y = cty, color = cyl)) +\n  geom_point(alpha = 0.5, size = 2) +\n  scale_color_viridis_c() +\n  theme_minimal() +\n  labs(\n    x = \"Consumo na Estrada (mpg)\",\n    y = \"Consumo na Cidade (mpg)\",\n    color = \"Cilindrada\"\n  )\n```"
  },
  {
    "objectID": "tutorials/quarto/index.html#código-inline",
    "href": "tutorials/quarto/index.html#código-inline",
    "title": "Quarto: Um Sistema de Publicação Técnica e Científica",
    "section": "5.6 Código Inline",
    "text": "5.6 Código Inline\nAlém das células de código, você também pode incluir código R diretamente no texto usando a sintaxe `r `. Por exemplo, a média de 1 a 10 é `r mean(1:10)`, que será renderizado como o valor calculado."
  },
  {
    "objectID": "tutorials/quarto/index.html#ocultando-células-de-código",
    "href": "tutorials/quarto/index.html#ocultando-células-de-código",
    "title": "Quarto: Um Sistema de Publicação Técnica e Científica",
    "section": "5.7 Ocultando Células de Código",
    "text": "5.7 Ocultando Células de Código\nPara um relatório mais formal, às vezes você pode querer mostrar apenas os resultados sem o código. Isso pode ser controlado globalmente no cabeçalho YAML com execute: echo: false:\n---\ntitle: \"Título do Relatório\"\nlang: pt-BR\nauthor: Seu Nome\nformat:\n  html:\n    toc: true\n    number-sections: true\n    embed-resources: true\nexecute:\n  echo: false\n  message: false\n  warning: false\neditor: source\n---\nOu célula por célula:\n```{r}\n#| label: fig-2\n#| echo: false\n#| message: false\n#| warning: false\n#| fig-cap: \"Gráfico de Dispersão entre Peso e Consumo\"\n\n# Este código não será exibido, apenas o resultado\nplot(mtcars$mpg, mtcars$wt, \n     xlab = \"Consumo (mpg)\", \n     ylab = \"Peso (1000 lbs)\")\n```"
  },
  {
    "objectID": "tutorials/quarto/index.html#referenciando-figuras-e-tabelas",
    "href": "tutorials/quarto/index.html#referenciando-figuras-e-tabelas",
    "title": "Quarto: Um Sistema de Publicação Técnica e Científica",
    "section": "5.8 Referenciando Figuras e Tabelas",
    "text": "5.8 Referenciando Figuras e Tabelas\nO Quarto permite referenciar facilmente figuras e tabelas usando o atributo label. Por exemplo, a figura criada acima pode ser referenciada como @fig-2 em qualquer lugar do texto, e o Quarto automaticamente substituirá isso pelo número da figura."
  },
  {
    "objectID": "tutorials/quarto/index.html#relatório-no-formato-html",
    "href": "tutorials/quarto/index.html#relatório-no-formato-html",
    "title": "Quarto: Um Sistema de Publicação Técnica e Científica",
    "section": "7.1 Relatório no formato HTML",
    "text": "7.1 Relatório no formato HTML\nPara criar um relatório com o sistema Quarto no formato HTML, utilize o seguinte cabeçalho YAML:\n---\ntitle: \"Título do Relatório\"\nlang: pt-BR\nauthor: Seu Nome\ndate: today\ndate-format: \"DD/MM/YYYY\"\nformat:\n  html:\n    theme: cosmos\n    toc: true\n    number-sections: true\n    embed-resources: true\n    code-fold: true\n    fig-cap-location: bottom\n    tbl-cap-location: top\nexecute:\n  echo: true\n  message: false\n  warning: false\neditor: source\n---\nA Tab. 1 contém explicações de cada um dos pares chave-valor usados no cabeçalho acima.\n\n\n\nTabela 1: Explicação dos parâmetros YAML para documentos HTML no Quarto\n\n\n\n\n\n\n\n\n\n\nChave\nValor no Exemplo\nExplicação\n\n\n\n\ntitle\n\"Título do Relatório\"\nDefine o título principal que aparecerá no topo do documento HTML.\n\n\nlang\npt-BR\nEspecifica o idioma do documento como português brasileiro, afetando a hifenização, formatação de datas, separadores decimais e outros elementos dependentes do idioma regional.\n\n\nauthor\nSeu Nome\nIdentifica o autor do documento, aparecendo normalmente logo abaixo do título.\n\n\ndate\ntoday\nConfigura a data do documento para a data atual quando o documento for renderizado.\n\n\ndate-format\n\"DD/MM/YYYY\"\nDefine o formato da data como dia/mês/ano (exemplo: 18/03/2025).\n\n\nformat\n\nSeção que configura o formato de saída\n\n\ntheme\ncosmos\nDefine o tema visual do documento HTML, neste caso usando o tema “cosmos” que determina cores, fontes e estilos.\n\n\ntoc\ntrue\nAtiva a tabela de conteúdo (índice), facilitando a navegação pelo documento.\n\n\nnumber-sections\ntrue\nAdiciona numeração automática às seções e subseções (1, 1.1, 1.2, 2, etc.).\n\n\nembed-resources\ntrue\nCria um arquivo HTML único e independente com todos os recursos necessários incorporados (CSS, imagens, etc.).\n\n\ncode-fold\ntrue\nPermite que blocos de código sejam recolhidos/expandidos pelo leitor, tornando o documento mais limpo.\n\n\nfig-cap-location\nbottom\nPosiciona as legendas das figuras abaixo das imagens.\n\n\ntbl-cap-location\ntop\nPosiciona as legendas das tabelas acima das tabelas.\n\n\nexecute\n\nSeção que controla a execução de código\n\n\necho\ntrue\nMostra o código fonte junto com seus resultados no documento final.\n\n\nmessage\nfalse\nOculta mensagens geradas durante a execução do código.\n\n\nwarning\nfalse\nOculta avisos gerados durante a execução do código.\n\n\neditor\nsource\nEspecifica o modo de edição padrão como “source” (código fonte) ao abrir o documento no RStudio ou outro editor compatível."
  },
  {
    "objectID": "tutorials/quarto/index.html#relatório-no-formato-pdf-com-typst",
    "href": "tutorials/quarto/index.html#relatório-no-formato-pdf-com-typst",
    "title": "Quarto: Um Sistema de Publicação Técnica e Científica",
    "section": "7.2 Relatório no formato pdf com Typst",
    "text": "7.2 Relatório no formato pdf com Typst\nPara criar um relatório com o sistema Quarto no formato pdf com o sistema Typst, utilize o seguinte cabeçalho YAML:\n---\ntitle: \"Título do Relatório\"\nlang: pt-BR\nauthor: \"Seu Nome\"\ndate: today\ndate-format: \"DD/MM/YYYY\"\nformat:\n  typst:\n    papersize: a4\n    number-sections: true\n    toc: false\n    fig-cap-location: bottom\n    tbl-cap-location: top\n    linkcolor: \"blue\"\nexecute:\n  echo: true\n  warning: false\n  message: false\n---\nNa Tab. 2, apresento apenas os parâmetros específicos do formato Typst ou aqueles com valores diferentes dos explicados anteriormente na tabela de parâmetros HTML. Parâmetros comuns como title, lang, author, date, date-format, e as opções de execute mantêm o mesmo significado em ambos os formatos.\n\n\n\nTabela 2: Explicação dos parâmetros YAML específicos para documentos Typst no Quarto\n\n\n\n\n\n\n\n\n\n\nParâmetro\nValor no Exemplo\nExplicação Didática\n\n\n\n\nformat: typst\n\nIndica que o documento será renderizado usando o sistema Typst, um sistema moderno de tipografia para produzir documentos PDF, alternativo ao LaTeX.\n\n\npapersize\na4\nDefine o tamanho do papel como A4 (210 × 297 mm), padrão internacional comum em documentos acadêmicos no Brasil.\n\n\nfontsize\nfontsize: 12pt\nDefine o tamanho da fonte.\n\n\nnumber-sections\ntrue\nAdiciona numeração automática às seções e subseções do documento (1, 1.1, 1.2, 2, etc.).\n\n\nfig-cap-location\nbottom\nPosiciona as legendas das figuras abaixo das imagens.\n\n\ntbl-cap-location\ntop\nPosiciona as legendas das tabelas acima das tabelas.\n\n\nlinkcolor\n\"blue\"\nDefine a cor dos hiperlinks no documento como azul, facilitando a identificação visual de links para o leitor.\n\n\n\n\n\n\nO sistema Typst é uma alternativa mais moderna e ágil ao LaTeX para produção de PDFs, sendo particularmente útil para documentos acadêmicos que exigem alta qualidade tipográfica. O formato Typst oferece um bom equilíbrio entre a simplicidade do HTML e o poder de formatação do LaTeX."
  },
  {
    "objectID": "tutorials/quarto/index.html#relatório-no-formato-docx",
    "href": "tutorials/quarto/index.html#relatório-no-formato-docx",
    "title": "Quarto: Um Sistema de Publicação Técnica e Científica",
    "section": "7.3 Relatório no formato docx",
    "text": "7.3 Relatório no formato docx\nPara criar um relatório com o sistema Quarto no formato docx do MS Word, utilize o seguinte cabeçalho YAML:\n---\ntitle: \"Título do Relatório\"\nlang: pt-BR\nauthor: Seu Nome\ndate: today\ndate-format: \"DD/MM/YYYY\"\nformat:\n  docx:\n    number-sections: true\nexecute:\n  echo: true\n  message: false\n  warning: false\neditor: source\n---\nEste cabeçalho YAML configura a produção de um documento no formato Microsoft Word (.docx). Todas as opções utilizadas já foram explicadas nas tabelas anteriores.\nA única diferença é a especificação format: docx:, que indica ao Quarto que o documento deve ser renderizado como um arquivo .docx. Este formato pode ser útil quando for necessário compartilhar documentos editáveis com pessoas que utilizam o Microsoft Office, embora não seja o formato mais recomendado para trabalhos acadêmicos devido às suas limitações de formatação consistente e controle tipográfico."
  },
  {
    "objectID": "tutorials/quarto/index.html#c",
    "href": "tutorials/quarto/index.html#c",
    "title": "Quarto: Um Sistema de Publicação Técnica e Científica",
    "section": "C",
    "text": "C\nCélulas de Código (Code Chunks): Blocos de código em um documento Quarto que podem ser executados, gerando resultados que são incluídos no documento final.\nCabeçalho YAML: Seção no início de um documento Quarto, delimitada por três traços (—), onde são definidos metadados e opções de formatação para o documento.\nChave-valor (key-value): Formato de dados usado no YAML que associa um nome de propriedade (chave) a um conteúdo ou configuração específica (valor).\nCódigo Inline: Código R incorporado diretamente no texto de um documento Quarto, indicado pela sintaxe `r `, que é executado durante a renderização."
  },
  {
    "objectID": "tutorials/quarto/index.html#e",
    "href": "tutorials/quarto/index.html#e",
    "title": "Quarto: Um Sistema de Publicação Técnica e Científica",
    "section": "E",
    "text": "E\necho: Opção de célula de código que controla se o código fonte é exibido (true) ou ocultado (false) no documento final.\neval: Opção de célula de código que determina se o código deve ser executado (true) ou não (false) durante a renderização."
  },
  {
    "objectID": "tutorials/quarto/index.html#f",
    "href": "tutorials/quarto/index.html#f",
    "title": "Quarto: Um Sistema de Publicação Técnica e Científica",
    "section": "F",
    "text": "F\nFormato de Saída: Tipo de documento final gerado pelo Quarto, como HTML, PDF, DOCX, apresentações, entre outros.\nfig-cap: Opção de célula de código que adiciona uma legenda a uma figura gerada pelo código."
  },
  {
    "objectID": "tutorials/quarto/index.html#i",
    "href": "tutorials/quarto/index.html#i",
    "title": "Quarto: Um Sistema de Publicação Técnica e Científica",
    "section": "I",
    "text": "I\nIndentação: Espaçamento consistente utilizado no YAML para indicar hierarquia e aninhamento de opções, crucial para o funcionamento correto dos metadados."
  },
  {
    "objectID": "tutorials/quarto/index.html#k",
    "href": "tutorials/quarto/index.html#k",
    "title": "Quarto: Um Sistema de Publicação Técnica e Científica",
    "section": "K",
    "text": "K\nknitr: Pacote R responsável por executar o código R em documentos Quarto, transformando o documento .qmd em um arquivo markdown intermediário (.md)."
  },
  {
    "objectID": "tutorials/quarto/index.html#l",
    "href": "tutorials/quarto/index.html#l",
    "title": "Quarto: Um Sistema de Publicação Técnica e Científica",
    "section": "L",
    "text": "L\nLinguagem de Marcação: Sistema de anotações inseridas em um texto para definir como ele deve ser estruturado, formatado ou apresentado. Ao contrário das linguagens de programação que executam comandos, as linguagens de marcação utilizam tags ou comamdos para identificar elementos do documento (como títulos, parágrafos, listas) sem se preocupar com a lógica computacional. Exemplos incluem HTML (para páginas web), XML (para dados estruturados), LaTeX (para documentos científicos) e Markdown (usada no Quarto para formatação simplificada de texto)."
  },
  {
    "objectID": "tutorials/quarto/index.html#m",
    "href": "tutorials/quarto/index.html#m",
    "title": "Quarto: Um Sistema de Publicação Técnica e Científica",
    "section": "M",
    "text": "M\nMarkdown: Linguagem de marcação leve usada para formatar textos nos documentos Quarto, permitindo cabeçalhos, listas, negrito, itálico, links, entre outros elementos.\nMetadados: Informações sobre o documento (como título, autor, data, formato) definidas no cabeçalho YAML."
  },
  {
    "objectID": "tutorials/quarto/index.html#p",
    "href": "tutorials/quarto/index.html#p",
    "title": "Quarto: Um Sistema de Publicação Técnica e Científica",
    "section": "P",
    "text": "P\nPandoc: Ferramenta universal de conversão de documentos que o Quarto utiliza para transformar arquivos markdown em formatos finais como HTML, PDF e DOCX.\nPublicação Técnica e Científica: Processo de criar e disseminar documentos com conteúdo acadêmico ou técnico, seguindo padrões estabelecidos de formatação e referenciação."
  },
  {
    "objectID": "tutorials/quarto/index.html#q",
    "href": "tutorials/quarto/index.html#q",
    "title": "Quarto: Um Sistema de Publicação Técnica e Científica",
    "section": "Q",
    "text": "Q\nQMD: Extensão de arquivo (.qmd) específica dos documentos Quarto, que contém texto em Markdown, código e metadados YAML.\nQuarto: Sistema de publicação científica e técnica de código aberto que permite combinar texto narrativo, código, equações e resultados em um único documento reproduzível."
  },
  {
    "objectID": "tutorials/quarto/index.html#r",
    "href": "tutorials/quarto/index.html#r",
    "title": "Quarto: Um Sistema de Publicação Técnica e Científica",
    "section": "R",
    "text": "R\nReferência Cruzada: Recurso que permite fazer referência a elementos como figuras, tabelas e seções em qualquer parte do documento usando identificadores únicos.\nRender: Processo de transformar um documento Quarto (.qmd) em seu formato final (HTML, PDF, etc.), executando código e formatando o conteúdo conforme as especificações.\nReprodutibilidade: Princípio que permite que outros pesquisadores e profissionais possam replicar exatamente os mesmos resultados utilizando os mesmos dados e códigos. No contexto corporativo, garante a auditabilidade de análises, facilita a transferência de conhecimento entre equipes, permite verificação de resultados por diferentes stakeholders e assegura a continuidade de projetos mesmo com mudanças de pessoal."
  },
  {
    "objectID": "tutorials/quarto/index.html#t",
    "href": "tutorials/quarto/index.html#t",
    "title": "Quarto: Um Sistema de Publicação Técnica e Científica",
    "section": "T",
    "text": "T\nTOC (Table of Contents): Sumário ou índice automático gerado pelo Quarto com base na estrutura de títulos e subtítulos do documento.\nTypst: Sistema moderno de tipografia utilizado pelo Quarto como alternativa ao LaTeX para produzir documentos PDF com alta qualidade tipográfica."
  },
  {
    "objectID": "tutorials/quarto/index.html#w",
    "href": "tutorials/quarto/index.html#w",
    "title": "Quarto: Um Sistema de Publicação Técnica e Científica",
    "section": "W",
    "text": "W\nwarning: Opção de célula de código que controla se os avisos gerados durante a execução do código são exibidos (true) ou ocultados (false) no documento final."
  },
  {
    "objectID": "tutorials/quarto/index.html#y",
    "href": "tutorials/quarto/index.html#y",
    "title": "Quarto: Um Sistema de Publicação Técnica e Científica",
    "section": "Y",
    "text": "Y\nYAML (Yet Another Markup Language): Linguagem de serialização de dados legível por humanos usada para os metadados de documentos Quarto, caracterizada pelo formato de pares chave-valor e indentação significativa."
  },
  {
    "objectID": "Readme.html",
    "href": "Readme.html",
    "title": "Washington S. da Silva",
    "section": "",
    "text": "My personal home page made with Quarto."
  },
  {
    "objectID": "publications/arch.html",
    "href": "publications/arch.html",
    "title": "Uma análise empírica da volatilidade do retorno de commodities agrícolas utilizando modelos ARCH: os casos do café e da soja",
    "section": "",
    "text": "Abstract\nWe examined the volatility process of the returns of two important Brazilian agricultural commodities, coffee and soy, using ARCH class models. Empirical results suggest strong signs of persistence and asymmetry in the volatility of both series. Furthermore, the results suggest that the design of policies that create, facilitate the access and stimulate the use of market-based hedging devices can be proper strategies for such sectors in view of the persistence of shocks and the pronounced volatility found for the returns of these commodities."
  },
  {
    "objectID": "publications/efeito_cotas.html",
    "href": "publications/efeito_cotas.html",
    "title": "Efeito de cotas para ingresso e de fatores socioeconômicos sobre o desempenho acadêmico de estudantes em um curso técnico integrado: um estudo de caso",
    "section": "",
    "text": "Abstract\nThis study aims identify the determinants of premium for voting rights in the Brazilian market. To this end, we developed a dataset consisted of 383 companies listed on the Brasil, Bolsa, Balcão (B3) from 2000 to 2015, to use the fixed effects regressions with panel data models. We identified that the average of the premium found for the period is 18.07%, however, this value is close to 40.00% in years considered of systemic crisis, as occurred in 2008 and 2015. In addition to the positive influence of the years of decline in the stock market in the value of the premium, the results showed that i) the increase in liquidity of shares with voting rights negatively affect the value of the premium for control; and ii) the level of liabilities payable in relation to assets has an inverted U-shape in relation to the voting premium. The study contributes to the literature by verifying that a structure of two classes of shares allows the accentuation of the premium for voting rights in periods of systematic crisis."
  },
  {
    "objectID": "publications/flexibilidade.html",
    "href": "publications/flexibilidade.html",
    "title": "Financial Flexibility and Stock Return of Brazilian Companies: Evidence During the COVID-19 Crisis",
    "section": "",
    "text": "Abstract\nObjective: The objective was to verify the effect of financial flexibility on the value of shares of Brazilian companies during the pandemic period caused by COVID-19.\nBackground: Financial flexibility is associated with the ability of a company to face financial diffi-culties, but there are still no studies in Brazil that show its relationship with the value of shares in periods with a shock to companies’ revenues.\nMethod: Regression analysis was applied to a cross-section of data with 102 companies listed on the Brazil Broad Index (IBRA). Two economic periods of the pandemic were considered, the col-lapse, between 2/2/2020 and 3/23/2020, and the stimulus to the economy, on 3/24/2020.\nResults: The evidence show that in the period of economic collapse, the financial flexibility due to debt capacity proved to be valuable for companies, especially for those most affected by COVID-19, which had more pronounced reductions in revenues in the first half of 2020. We have also ob-served that the level of cash retention had no impact on stock returns during the collapse period. On the date of economic stimulus, the companies’ cash level showed a positive relationship with the value of shares, but there were no evidence that this appreciation occurred for companies with more affected revenues.\nContributions: This study contributes to the literature by verifying the impact of financial flexibil-ity on the value of shares of Brazilian companies during two different economic moments of the pandemic, namely: the collapse and the stimulus to the economy."
  },
  {
    "objectID": "publications/hedge.html",
    "href": "publications/hedge.html",
    "title": "Hedge dinâmicos: Uma evidência para os contratos futuros brasileiros",
    "section": "",
    "text": "Abstract\nThe farming sector is changing, growing and occupying a position of prominence in the economy. These transformations start to demand a bigger concern with the management of risks of the activity. In this direction, the contracts traded at BM&F had become efficient instruments in the reduction of the market risk, through an operation called hedge. However, there is still the necessity of improving of the econometrical techniques for the estimation of the optimal hedge ratio, therefore, it is observed in the brazilian literature that the majority of the works doesn’t consider some aspects of the behavior of the series of returns. Thus, the present work seeks to analyze two methods for the calculation of these hedge optimal ratio, the conventional model of regression and the bivariate GARCH BEKK model that considers the conditional correlations of the series. The preliminary analysis of the results indicates that the hedge optimal ratio is not constant through time, suggesting that the use of models that consider the time dependence of the series is more realistic. The methodology is applied to the prices of the beef cattle commodity."
  },
  {
    "objectID": "publications/overconfidence.html",
    "href": "publications/overconfidence.html",
    "title": "Overconfidence in Managerial Decision-Making among Brazilian Accountants and Managers: An Experimental Study",
    "section": "",
    "text": "Abstract\nThe aim of this work is to analyze, by means of an experiment, if the type (positive or negative) and the level (simple or complex) of financial information influence of overconfidence of entrepreneurs and accountants in a managerial decision-making process. The design consists of a 2 x 2 factorial experiment, with four treatments, with the type and level of accounting information as experimental factors. The research was applied to a sample of 68 managers, 86 accountants, and 118 people with different activities (control group). The results showed that the majority of participants present the Overconfidence bias, in the first test, without differentiation of information. They also presented significant evidence that overconfidence can be influenced by the type of information, but not by its level. Moreover, the analysis suggested that the profile of the participants influences the confidence in the projections conducted. The research has shown that the type of financial information influences the overconfidence of entrepreneurs and accountants."
  },
  {
    "objectID": "publications/system_dynamics.html",
    "href": "publications/system_dynamics.html",
    "title": "A System Dynamics Model for Sales and Operations Planning: An Integrated Analysis for the Lime Industry",
    "section": "",
    "text": "Abstract\nThe use of system dynamics techniques to model the sales and operations planning (S&OP), associated with the economic and financial processes, is an innovative proposal. The objectives of this article are to model and simulate the S&OP process integrated with the financial management in a Brazilian lime processing industry, based on the system dynamics approach. Initially, the model was validated. Then, over twenty scenarios were simulated to assess the behavior of the system with its key factors variation. In the microenvironment scenarios, the company’s internal perspective was the only element taken into account. In turn, regarding the macro environment scenarios, the basis was the projection of lime consumption related to the country’s GDP. The results have genuinely contributed to the industry researched, since the lime processing industry is struggling with obtaining enough supply due to lime acquisition price fluctuations and, consequently, the oscillation of its production costs."
  },
  {
    "objectID": "publications/toxic_metals.html",
    "href": "publications/toxic_metals.html",
    "title": "Deposition of Potentially Toxic Metals in the Soil from Surrounding Cement Plants in a Karst Area of Southeastern Brazil",
    "section": "",
    "text": "Abstract\nCement factories are the main sources of environmental pollutants among the different industrial activities, including soil contamination by potentially toxic metals. The karst region of Southeastern Brazil is known for the implementation of large cement producing facilities. This study aims to evaluate whether there is an increase in the concentration of PTM in the soil surrounding the cement plants and to estimate their harmfulness to both local human population and environment. In total, 18 soil samples were collected from the surroundings of three cement plants as well as four soil samples from areas outside the influence of cement plants and concentration of the following potentially toxic metals (PTM) were estimated: Cd, Pb, Co, Cu, Cr, Mn, Ni, and Zn. The results revealed that all PTM concentrations from cement plant surroundings were significantly higher than PTM concentrations from control areas and no PTM concentrations from CPS or CA soil samples exceeded national and global contamination thresholds. However, Igeo Index indicated low level soil contamination by Pb, Cu, and Cr, as well as high levels for Co. We could not verify significant non-carcinogenic risk to health for any soil sample, but carcinogenic risk analysis revealed different levels of carcinogenic risk among the sampled locations, for both adults and children. Our results indicate that exclusively evaluating the concentration of potentially toxic metals is not enough to verify the potential harmful effects of cement production for the surrounding population. Here we evidence that additional indices, based on both contamination indices and health risk assessments, should be considered for better evaluation of the impacts of cement production activity."
  }
]